(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1119470,      21646]
NotebookOptionsPosition[   1090739,      21197]
NotebookOutlinePosition[   1091223,      21216]
CellTagsIndexPosition[   1091180,      21213]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Training data generation and state classification", "Title",
 CellChangeTimes->{{3.909435796232082*^9, 3.909435836727985*^9}, {
  3.909436211919014*^9, 3.909436218106159*^9}, {3.914373803691277*^9, 
  3.9143738041197*^9}},ExpressionUUID->"65ac76f5-25c6-4f17-aa97-728115497743"],

Cell[CellGroupData[{

Cell["[1] Generalized Gell-Mann matrix basis", "Chapter",
 CellChangeTimes->{{3.909435288013866*^9, 3.909435306295046*^9}, {
  3.909435814894856*^9, 3.909435822149313*^9}, {3.909458038261037*^9, 
  3.9094580390822372`*^9}},ExpressionUUID->"eb6fa4e0-8baa-498d-8ade-\
ef97ebda9bcf"],

Cell[TextData[{
 "Function that generates a generalized Gell-Mann matrix basis (GGMMB) for an \
arbitrary N-level system. The",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["N", "2"], "-", "1"}], ")"}]],
  CellChangeTimes->{3.909025644795075*^9},ExpressionUUID->
  "98bde2ed-d557-4da5-af5e-87d1531e9e06"],
 "matrices/generators are stored in the list \[OpenCurlyDoubleQuote]MB\
\[CloseCurlyDoubleQuote], and their N eigenvalues and N projectors are stored \
in the lists \[OpenCurlyDoubleQuote]EV\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]MBP\[CloseCurlyDoubleQuote], respectively. "
}], "Text",
 CellChangeTimes->{{3.909024187369948*^9, 3.909024224639539*^9}, {
  3.909025803752339*^9, 3.909025873729199*^9}, {3.910477541113575*^9, 
  3.910477609735174*^9}, {3.912668044889016*^9, 
  3.912668053965723*^9}},ExpressionUUID->"f507d0f1-c23a-4d85-9dbf-\
4b7c8322182a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GGMMB", "[", "\[ScriptCapitalN]_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["M", "1"], "=", 
       RowBox[{
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[ScriptQ]", ",", "\[ScriptQ]\[ScriptQ]"}], "}"}], 
                 "->", "I"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[ScriptQ]\[ScriptQ]", ",", "\[ScriptQ]"}], "}"}], 
                 "->", "I"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[ScriptCapitalN]", ",", "\[ScriptCapitalN]"}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[ScriptQ]", ",", "1", ",", "\[ScriptCapitalN]"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[ScriptQ]\[ScriptQ]", ",", 
              RowBox[{"\[ScriptQ]", "+", "1"}], ",", "\[ScriptCapitalN]"}], 
             "}"}]}], "]"}], ",", "1"}], "]"}]}]}], ";", 
      RowBox[{
       SubscriptBox["M", "2"], "=", 
       RowBox[{
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[ScriptQ]", ",", "\[ScriptQ]\[ScriptQ]"}], "}"}], 
                 "->", 
                 RowBox[{"-", "1"}]}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[ScriptQ]\[ScriptQ]", ",", "\[ScriptQ]"}], "}"}], 
                 "->", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[ScriptCapitalN]", ",", "\[ScriptCapitalN]"}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[ScriptQ]", ",", "1", ",", "\[ScriptCapitalN]"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[ScriptQ]\[ScriptQ]", ",", 
              RowBox[{"\[ScriptQ]", "+", "1"}], ",", "\[ScriptCapitalN]"}], 
             "}"}]}], "]"}], ",", "1"}], "]"}]}]}], ";", 
      RowBox[{
       SubscriptBox["M", "3"], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{"Composition", "[", 
          RowBox[{"DiagonalMatrix", ",", "SparseArray"}], "]"}], ",", 
         RowBox[{"Orthogonalize", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[ScriptQ]", "}"}], "->", "I"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[ScriptQ]", "+", "1"}], "}"}], "->", 
                 RowBox[{"-", "I"}]}]}], "}"}], ",", "\[ScriptCapitalN]"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[ScriptQ]", ",", "1", ",", 
              RowBox[{"\[ScriptCapitalN]", "-", "1"}]}], "}"}]}], "]"}], 
          "]"}]}], "]"}]}], ";", 
      RowBox[{"MB", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "I"}], ")"}], 
        RowBox[{"Join", "[", 
         RowBox[{
          SubscriptBox["M", "1"], ",", 
          SubscriptBox["M", "2"], ",", 
          SubscriptBox["M", "3"]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EV", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"MB", "[", 
           RowBox[{"[", "\[ScriptQ]", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[ScriptQ]", ",", "1", ",", 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalN]", "2"], "-", "1"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MBP", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"Normalize", ",", 
              RowBox[{"Eigenvectors", "[", 
               RowBox[{"MB", "[", 
                RowBox[{"[", "\[ScriptQ]", "]"}], "]"}], "]"}]}], "]"}], "[", 
            
            RowBox[{"[", "\[ScriptQ]\[ScriptQ]", "]"}], "]"}], ",", 
           RowBox[{"Conjugate", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"Normalize", ",", 
               RowBox[{"Eigenvectors", "[", 
                RowBox[{"MB", "[", 
                 RowBox[{"[", "\[ScriptQ]", "]"}], "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", "\[ScriptQ]\[ScriptQ]", "]"}], "]"}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[ScriptQ]", ",", "1", ",", 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalN]", "2"], "-", "1"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
          "\[ScriptQ]\[ScriptQ]", ",", "1", ",", "\[ScriptCapitalN]"}], 
          "}"}]}], "]"}]}], ";"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.907886599276206*^9, 3.90788660805934*^9}, {
   3.907886666835031*^9, 3.90788667615189*^9}, {3.907886724185011*^9, 
   3.907886729063539*^9}, {3.907886763249421*^9, 3.9078867863291397`*^9}, {
   3.907886817482307*^9, 3.907886844764653*^9}, {3.907887010225527*^9, 
   3.907887121843993*^9}, {3.90788719188342*^9, 3.90788724186754*^9}, {
   3.9078873367865868`*^9, 3.907887338888981*^9}, {3.907887404551353*^9, 
   3.907887415228651*^9}, {3.907887556357826*^9, 3.907887601159821*^9}, 
   3.907888142673353*^9, {3.907890386689075*^9, 3.907890388229368*^9}, {
   3.9078920769494133`*^9, 3.9078920985450287`*^9}, {3.907897033407773*^9, 
   3.907897157379319*^9}, 3.907897705897402*^9, {3.907898759209518*^9, 
   3.9078987614087257`*^9}, {3.9078988138292418`*^9, 3.907898882796591*^9}, {
   3.9082385019069443`*^9, 3.908238538251421*^9}, {3.908241202713697*^9, 
   3.908241219290032*^9}, {3.908242431453351*^9, 3.908242468192666*^9}, {
   3.90824400029751*^9, 3.908244036943904*^9}, {3.908244116821454*^9, 
   3.908244117716155*^9}, {3.9089543622995577`*^9, 3.908954364510687*^9}, {
   3.908954401159686*^9, 3.9089544024687557`*^9}, {3.908954447633066*^9, 
   3.9089544557439413`*^9}, 3.908955446869*^9, 3.9089555683009863`*^9, {
   3.909025162038723*^9, 3.90902516303001*^9}, {3.9094539037992287`*^9, 
   3.909453906617476*^9}, {3.91047791034687*^9, 3.910477912113594*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e9fb14ea-55c8-4eec-94cc-b106261c912a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["[2] Probability tuples and NM breakdown measure \[Gamma]", "Chapter",
 CellChangeTimes->{{3.909435288013866*^9, 3.909435306295046*^9}, {
  3.909435862006662*^9, 3.909435864335977*^9}, {3.909458040657112*^9, 
  3.909458041262775*^9}, {3.9101549262229557`*^9, 3.9101549423348618`*^9}, {
  3.9126674025934887`*^9, 
  3.912667403211054*^9}},ExpressionUUID->"5adc79b2-6798-418d-86fa-\
79b5089e6d82"],

Cell[TextData[{
 StyleBox["Note:",
  FontSlant->"Italic"],
 " The file \[OpenCurlyDoubleQuote]ProbabilityTuples.nb\
\[CloseCurlyDoubleQuote] provides a graphical overview of the underlying \
probability distributions."
}], "Text",
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910477654801083*^9, 
  3.9104777124350567`*^9}, {3.912667220783333*^9, 
  3.91266722712185*^9}},ExpressionUUID->"182c81d8-642a-4f5c-be94-\
fca5d3b43dcf"],

Cell["Probability tuples for NM-conforming states", "Text",
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910477654801083*^9, 
  3.9104777124350567`*^9}, {3.912667220783333*^9, 3.91266722712185*^9}, {
  3.912667319166894*^9, 
  3.912667326094252*^9}},ExpressionUUID->"f121f49a-8731-4077-b0d5-\
568b221b1c77"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NMcPT", "[", "\[ScriptCapitalN]_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"list", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", "\[ScriptCapitalN]"}], "]"}]}],
       "}"}], ",", 
     RowBox[{"list", "/", 
      RowBox[{"Total", "[", "list", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9104784026171503`*^9, 3.910478402929195*^9}, {
  3.9126672775951138`*^9, 3.912667302830299*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[2]:=",ExpressionUUID->"7244d9a3-bd01-4fe6-ade5-1ff5adf32cc4"],

Cell["Probability tuples for NM-violating states", "Text",
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910477654801083*^9, 
  3.9104777124350567`*^9}, {3.912667220783333*^9, 3.91266722712185*^9}, {
  3.912667319166894*^9, 
  3.912667346382073*^9}},ExpressionUUID->"f7513b45-7eab-4518-acad-\
9af851f6e3d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NMvPT", "[", "\[ScriptCapitalN]_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"list", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"\[ScriptCapitalN]", "-", "1"}]}], "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"last", "=", 
       RowBox[{"1", "-", 
        RowBox[{"Total", "[", "list", "]"}]}]}], ";", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"list", ",", "last"}], "}"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.909433703706806*^9, 3.909433733826653*^9}, {
   3.909433772957341*^9, 3.909433772979846*^9}, {3.909434100826539*^9, 
   3.9094341695754957`*^9}, {3.909434244345615*^9, 3.909434262650222*^9}, {
   3.909435875488914*^9, 3.909435887178321*^9}, {3.9094479848462276`*^9, 
   3.909447985736988*^9}, {3.909449567196854*^9, 3.909449601749694*^9}, 
   3.909450774524213*^9, {3.910157473492394*^9, 3.910157473626409*^9}, {
   3.9104777510334463`*^9, 3.9104777856355267`*^9}, {3.910478348908959*^9, 
   3.910478375733961*^9}, {3.912667297535873*^9, 3.912667300419354*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->"In[3]:=",ExpressionUUID->"34e7bbae-bc9a-42cc-bbf6-fd559f2645f7"],

Cell["\<\
Function that computes the NM breakdown measure \[Gamma] for a given vector \
pvec\
\>", "Text",
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910157039737268*^9, 
  3.910157086996586*^9}, {3.910482542380187*^9, 3.910482550009721*^9}, {
  3.910482749357584*^9, 3.910482751868642*^9}, {3.9126673829203672`*^9, 
  3.912667383681405*^9}, {3.914381354198173*^9, 
  3.914381354473016*^9}},ExpressionUUID->"3d83360b-d129-445d-b2c3-\
a406218302dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", "[", "pvec_", "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{"Abs", "[", 
     RowBox[{"Select", "[", 
      RowBox[{"pvec", ",", 
       RowBox[{
        RowBox[{"#", "<", "0"}], "&"}]}], "]"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.907623988892891*^9, 3.907624027942803*^9}, {
  3.907624365670107*^9, 3.9076243738896847`*^9}, {3.90771542245053*^9, 
  3.9077154283569*^9}, {3.907808509766325*^9, 3.907808515791071*^9}, {
  3.9101549121087837`*^9, 3.9101549124356833`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c3e15246-1278-4e4f-baea-1b3a36aca738"]
}, Open  ]],

Cell[CellGroupData[{

Cell["[3] Training data generation", "Chapter",
 CellChangeTimes->{{3.909436200546693*^9, 3.909436209874395*^9}, {
   3.909458043141354*^9, 3.9094580436991053`*^9}, 3.9104793694385157`*^9, {
   3.9126703954039516`*^9, 
   3.9126704097576513`*^9}},ExpressionUUID->"ef0e3f68-3984-43c9-8a75-\
df6b73cc97ef"],

Cell[CellGroupData[{

Cell["\<\
Function that generates \[ScriptN] NM-conforming probability vectors for an \
arbitrary N-level system.\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910157039737268*^9, 
  3.910157086996586*^9}, {3.910478134651063*^9, 3.910478232311891*^9}, {
  3.912667427926252*^9, 3.912667430481079*^9}, {3.912668039577058*^9, 
  3.912668039830105*^9}},ExpressionUUID->"512af435-7c38-4e86-8b16-\
365e077cfce0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NMcTDG", "[", 
    RowBox[{"\[ScriptCapitalN]_", ",", "\[ScriptN]_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[ScriptI]", "=", "\[ScriptN]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"GGMMB", "[", "\[ScriptCapitalN]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"\[ScriptJ]", "<", "\[ScriptI]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pc", "=", 
          RowBox[{"NMcPT", "[", "\[ScriptCapitalN]", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rv", "=", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[ScriptCapitalN]", ",", "\[ScriptCapitalN]"}], "}"}]}],
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"v", "=", 
          RowBox[{"Orthogonalize", "[", 
           RowBox[{"rv", ",", 
            RowBox[{"Method", "->", "\"\<GramSchmidt\>\""}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Rho]NMc", "=", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pc", "[", 
              RowBox[{"[", "j", "]"}], "]"}], 
             RowBox[{"Outer", "[", 
              RowBox[{"Times", ",", 
               RowBox[{"v", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", 
               RowBox[{"v", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "\[ScriptCapitalN]"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"pNMc", "=", 
          RowBox[{"Chop", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Tr", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"MBP", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ".", "\[Rho]NMc"}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{
                 SuperscriptBox["\[ScriptCapitalN]", "2"], "-", "1"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "\[ScriptCapitalN]"}], "}"}]}], 
             "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"NMcList", ",", 
           RowBox[{"{", 
            RowBox[{"pc", ",", "\[Rho]NMc", ",", "pNMc"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"\[ScriptJ]", "++"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.909022825965734*^9, 3.909022834738743*^9}, {
   3.9090229124038677`*^9, 3.909022989860489*^9}, {3.9090230240957623`*^9, 
   3.9090230270515623`*^9}, {3.90902306001327*^9, 3.909023096808463*^9}, {
   3.9090233294116077`*^9, 3.9090234282574244`*^9}, {3.909024150109879*^9, 
   3.909024150428474*^9}, {3.90902449100423*^9, 3.909024581466277*^9}, {
   3.909024637154339*^9, 3.9090246415162992`*^9}, {3.9090246930877047`*^9, 
   3.909024693314919*^9}, {3.9090247790129547`*^9, 3.909024800866252*^9}, {
   3.9090248405888166`*^9, 3.909024863788295*^9}, {3.9090249115614643`*^9, 
   3.909024926132863*^9}, {3.909024966239547*^9, 3.909024971337736*^9}, {
   3.909025003607298*^9, 3.909025009313895*^9}, {3.909025050346126*^9, 
   3.909025089712267*^9}, {3.909025157209794*^9, 3.909025157432086*^9}, {
   3.909025211885741*^9, 3.909025229108342*^9}, {3.909025358332221*^9, 
   3.9090253878958397`*^9}, {3.909026190215212*^9, 3.909026193889803*^9}, {
   3.9090266948452053`*^9, 3.9090267176919603`*^9}, {3.909189823036882*^9, 
   3.909189843511364*^9}, {3.909190137241702*^9, 3.909190143353513*^9}, {
   3.909190245168622*^9, 3.9091903798207417`*^9}, {3.9094363005107393`*^9, 
   3.909436387019411*^9}, {3.909444490709388*^9, 3.909444507548811*^9}, {
   3.9094447676773663`*^9, 3.909444768167384*^9}, {3.909448024848549*^9, 
   3.9094480671491823`*^9}, {3.909448307153121*^9, 3.909448314696196*^9}, {
   3.909449275190124*^9, 3.909449281672511*^9}, {3.909449315727818*^9, 
   3.909449316665826*^9}, {3.909449515197999*^9, 3.9094495180743504`*^9}, {
   3.909456271682032*^9, 3.909456279413794*^9}, {3.910477943835664*^9, 
   3.910477945512753*^9}, 3.910478232312025*^9, 3.910478285052854*^9, 
   3.910478339391227*^9, {3.9104784821194057`*^9, 3.910478614902076*^9}, {
   3.910478766386451*^9, 3.910478783026387*^9}, {3.910656583480361*^9, 
   3.910656586278969*^9}, {3.91065666910454*^9, 3.910656751736081*^9}, {
   3.9126674448188677`*^9, 3.912667539835956*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[5]:=",ExpressionUUID->"645da0a7-efe3-4082-84ec-ce14893ba8c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Function that generates \[ScriptN] NM-violating probability vectors for an \
arbitrary N-level system.\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910157039737268*^9, 
  3.910157086996586*^9}, {3.910478134651063*^9, 3.910478227631804*^9}, {
  3.912667562145329*^9, 3.912667565762155*^9}, {3.914381936519558*^9, 
  3.914381936848168*^9}},ExpressionUUID->"75f1072f-a6d8-4be5-80c0-\
dd723d3134f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NMvTDG", "[", 
    RowBox[{"\[ScriptCapitalN]_", ",", "\[ScriptN]_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[ScriptI]", "=", "\[ScriptN]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"GGMMB", "[", "\[ScriptCapitalN]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "NMvList", "]"}], "<", "\[ScriptI]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pv", "=", 
          RowBox[{"NMvPT", "[", "\[ScriptCapitalN]", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rv", "=", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[ScriptCapitalN]", ",", "\[ScriptCapitalN]"}], "}"}]}],
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"v", "=", 
          RowBox[{"Orthogonalize", "[", 
           RowBox[{"rv", ",", 
            RowBox[{"Method", "->", "\"\<GramSchmidt\>\""}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Rho]NMv", "=", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pv", "[", 
              RowBox[{"[", "j", "]"}], "]"}], 
             RowBox[{"Outer", "[", 
              RowBox[{"Times", ",", 
               RowBox[{"v", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", 
               RowBox[{"v", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "\[ScriptCapitalN]"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"pNMv", "=", 
          RowBox[{"Chop", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Tr", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"MBP", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ".", "\[Rho]NMv"}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{
                 SuperscriptBox["\[ScriptCapitalN]", "2"], "-", "1"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "\[ScriptCapitalN]"}], "}"}]}], 
             "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NonNegative", "[", 
            RowBox[{
             RowBox[{"Min", "[", "pNMv", "]"}], "&&", 
             RowBox[{"Negative", "[", 
              RowBox[{"Min", "[", "pv", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"NMvList", ",", 
             RowBox[{"{", 
              RowBox[{"pv", ",", "\[Rho]NMv", ",", "pNMv"}], "}"}]}], "]"}]}],
           "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NonNegative", "[", 
            RowBox[{
             RowBox[{"Min", "[", "pNMv", "]"}], "&&", 
             RowBox[{"Negative", "[", 
              RowBox[{"Min", "[", "pv", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "NMvList", "]"}], "==", 
              RowBox[{"0.1", "\[ScriptI]"}]}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<10%, Vectors generated:\>\"", ",", 
               "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NonNegative", "[", 
            RowBox[{
             RowBox[{"Min", "[", "pNMv", "]"}], "&&", 
             RowBox[{"Negative", "[", 
              RowBox[{"Min", "[", "pv", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "NMvList", "]"}], "==", 
              RowBox[{"0.2", "\[ScriptI]"}]}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<20%, Vectors generated:\>\"", ",", 
               "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NonNegative", "[", 
            RowBox[{
             RowBox[{"Min", "[", "pNMv", "]"}], "&&", 
             RowBox[{"Negative", "[", 
              RowBox[{"Min", "[", "pv", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "NMvList", "]"}], "==", 
              RowBox[{"0.3", "\[ScriptI]"}]}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<30%, Vectors generated:\>\"", ",", 
               "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NonNegative", "[", 
            RowBox[{
             RowBox[{"Min", "[", "pNMv", "]"}], "&&", 
             RowBox[{"Negative", "[", 
              RowBox[{"Min", "[", "pv", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "NMvList", "]"}], "==", 
              RowBox[{"0.4", "\[ScriptI]"}]}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<40%, Vectors generated:\>\"", ",", 
               "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NonNegative", "[", 
            RowBox[{
             RowBox[{"Min", "[", "pNMv", "]"}], "&&", 
             RowBox[{"Negative", "[", 
              RowBox[{"Min", "[", "pv", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "NMvList", "]"}], "==", 
              RowBox[{"0.5", "\[ScriptI]"}]}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<50%, Vectors generated:\>\"", ",", 
               "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NonNegative", "[", 
            RowBox[{
             RowBox[{"Min", "[", "pNMv", "]"}], "&&", 
             RowBox[{"Negative", "[", 
              RowBox[{"Min", "[", "pv", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "NMvList", "]"}], "==", 
              RowBox[{"0.6", "\[ScriptI]"}]}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<60%, Vectors generated:\>\"", ",", 
               "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NonNegative", "[", 
            RowBox[{
             RowBox[{"Min", "[", "pNMv", "]"}], "&&", 
             RowBox[{"Negative", "[", 
              RowBox[{"Min", "[", "pv", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "NMvList", "]"}], "==", 
              RowBox[{"0.7", "\[ScriptI]"}]}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<70%, Vectors generated:\>\"", ",", 
               "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NonNegative", "[", 
            RowBox[{
             RowBox[{"Min", "[", "pNMv", "]"}], "&&", 
             RowBox[{"Negative", "[", 
              RowBox[{"Min", "[", "pv", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "NMvList", "]"}], "==", 
              RowBox[{"0.8", "\[ScriptI]"}]}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<80%, Vectors generated:\>\"", ",", 
               "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NonNegative", "[", 
            RowBox[{
             RowBox[{"Min", "[", "pNMv", "]"}], "&&", 
             RowBox[{"Negative", "[", 
              RowBox[{"Min", "[", "pv", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "NMvList", "]"}], "==", 
              RowBox[{"0.9", "\[ScriptI]"}]}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<90%, Vectors generated:\>\"", ",", 
               "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], 
              "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
         "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "+=", "1"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"\[ScriptJ]", "++"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.909022825965734*^9, 3.909022834738743*^9}, {
   3.9090229124038677`*^9, 3.909022989860489*^9}, {3.9090230240957623`*^9, 
   3.9090230270515623`*^9}, {3.90902306001327*^9, 3.909023096808463*^9}, {
   3.9090233294116077`*^9, 3.9090234282574244`*^9}, {3.909024150109879*^9, 
   3.909024150428474*^9}, {3.90902449100423*^9, 3.909024581466277*^9}, {
   3.909024637154339*^9, 3.9090246415162992`*^9}, {3.9090246930877047`*^9, 
   3.909024693314919*^9}, {3.9090247790129547`*^9, 3.909024800866252*^9}, {
   3.9090248405888166`*^9, 3.909024863788295*^9}, {3.9090249115614643`*^9, 
   3.909024926132863*^9}, {3.909024966239547*^9, 3.909024971337736*^9}, {
   3.909025003607298*^9, 3.909025009313895*^9}, {3.909025050346126*^9, 
   3.909025089712267*^9}, {3.909025157209794*^9, 3.909025157432086*^9}, {
   3.909025211885741*^9, 3.909025229108342*^9}, {3.909025358332221*^9, 
   3.9090253878958397`*^9}, {3.909026190215212*^9, 3.909026193889803*^9}, {
   3.9090266948452053`*^9, 3.9090267176919603`*^9}, {3.909189823036882*^9, 
   3.909189843511364*^9}, {3.909190137241702*^9, 3.909190143353513*^9}, {
   3.909190245168622*^9, 3.9091903798207417`*^9}, {3.9094363005107393`*^9, 
   3.909436387019411*^9}, {3.909444490709388*^9, 3.909444507548811*^9}, {
   3.9094447676773663`*^9, 3.909444768167384*^9}, {3.909448015896544*^9, 
   3.909448018428748*^9}, {3.909448071344784*^9, 3.9094481444264812`*^9}, {
   3.909448293030347*^9, 3.909448319447541*^9}, {3.90944853722136*^9, 
   3.909448562413026*^9}, {3.9094486728583307`*^9, 3.909448674853078*^9}, {
   3.909448844826735*^9, 3.90944885026589*^9}, {3.909449255720438*^9, 
   3.909449264208076*^9}, {3.909449520909758*^9, 3.909449522826931*^9}, {
   3.909450884173469*^9, 3.909450885928094*^9}, {3.909451674227955*^9, 
   3.9094516848464737`*^9}, {3.909456200902588*^9, 3.9094562050541973`*^9}, {
   3.909456260078699*^9, 3.90945626353612*^9}, {3.910154573390278*^9, 
   3.91015460922313*^9}, {3.9101586462331448`*^9, 3.9101586824394827`*^9}, {
   3.910477934137991*^9, 3.910477935918807*^9}, {3.910478018640893*^9, 
   3.9104780276733932`*^9}, {3.910478227631942*^9, 3.9104782669706087`*^9}, {
   3.9104783274331713`*^9, 3.910478334171945*^9}, {3.910478444593248*^9, 
   3.91047844750463*^9}, {3.910478633941256*^9, 3.910478653794464*^9}, {
   3.910478692798403*^9, 3.910478693611301*^9}, {3.910478730803794*^9, 
   3.910478749460734*^9}, 3.910479290961369*^9, 3.910479401783917*^9, {
   3.910479474162713*^9, 3.9104794745277*^9}, {3.9122521254145184`*^9, 
   3.912252139185728*^9}, {3.9126675706683187`*^9, 3.912667657434997*^9}, {
   3.9126677748871737`*^9, 3.912667776396564*^9}, {3.913022527623023*^9, 
   3.91302256052619*^9}, {3.913022667330707*^9, 3.9130227554719954`*^9}, {
   3.913022970378523*^9, 3.913023029701778*^9}, {3.913374595476802*^9, 
   3.913374624508615*^9}, {3.913374736145076*^9, 3.913374790765224*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->"In[6]:=",ExpressionUUID->"01adfa6d-e8f7-4b53-a575-6c28400937db"],

Cell[TextData[{
 StyleBox["Note:",
  FontSlant->"Italic"],
 " For large N it is more efficient to append only the relevant data (e.g. \
\[OpenCurlyDoubleQuote]pv\[CloseCurlyDoubleQuote]), but this shall not \
concern us here."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910157039737268*^9, 
  3.910157086996586*^9}, {3.910478134651063*^9, 3.910478227631804*^9}, {
  3.912667562145329*^9, 3.912667565762155*^9}, {3.912667669209757*^9, 
  3.912667730884163*^9}, {3.912668033872768*^9, 3.9126680341748743`*^9}, {
  3.914381493071665*^9, 
  3.914381493181939*^9}},ExpressionUUID->"1f250e3b-9562-4da6-94cd-\
470a4255c8a7"],

Cell[TextData[{
 StyleBox["Note:",
  FontSlant->"Italic"],
 " The counter \
\[OpenCurlyDoubleQuote]\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]\
\[CloseCurlyDoubleQuote] counts the total number of vectors that have been \
generated, including those associated with states that do not satisfy the \
second requirement in Eq. (5.1) of arXiv:2312.16281, which are discarded. As \
the histogram data generation in [4.1] below illustrates, the efficiency \
decreases sharpy with increasing N."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910157039737268*^9, 
  3.910157086996586*^9}, {3.910478134651063*^9, 3.910478227631804*^9}, {
  3.912667562145329*^9, 3.912667565762155*^9}, {3.912667669209757*^9, 
  3.912667730884163*^9}, {3.912668033872768*^9, 3.9126680341748743`*^9}, {
  3.914381483086121*^9, 3.914381519593526*^9}, {3.914381554651629*^9, 
  3.914381575502758*^9}, {3.914381611057869*^9, 3.914381700393118*^9}, {
  3.914381730693511*^9, 
  3.914381809792467*^9}},ExpressionUUID->"a971e0a2-278b-45d3-ba6b-\
47e1c88cb2e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.909459540725271*^9, 
  3.909459543098132*^9}},ExpressionUUID->"a288ab7b-1f9c-410f-b866-\
1281fa486606"],

Cell[CellGroupData[{

Cell["N=2 [NMc]", "Subsubsection",
 CellChangeTimes->{{3.9094517829660063`*^9, 3.909451788396035*^9}, {
  3.910479567254066*^9, 3.910479607223832*^9}, {3.9104829651139803`*^9, 
  3.910482965209569*^9}, {3.9126677583219*^9, 3.9126677597534523`*^9}, {
  3.912667996579402*^9, 3.912668003460576*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"923509e2-8782-4e22-aab2-14e5cb444f14"],

Cell["Generate 10 NM-conforming probability vectors for N=2.", "Text",
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910157039737268*^9, 
  3.910157086996586*^9}, {3.910478134651063*^9, 3.910478227631804*^9}, {
  3.912667562145329*^9, 3.912667565762155*^9}, {3.912667669209757*^9, 
  3.912667730884163*^9}, {3.9126680135320807`*^9, 
  3.912668031411468*^9}},ExpressionUUID->"99d592ea-5524-45e8-9368-\
0dc772c4c629"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NMcList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.910483009274996*^9, 3.910483014650721*^9}, 
   3.9126678127141323`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"19704266-ee2d-477e-81ba-d394c9037b01"],

Cell[BoxData[
 RowBox[{"NMcTDG", "[", 
  RowBox[{"2", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.910483023547195*^9, 3.910483026345994*^9}, 
   3.9126678257111883`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"f950233b-6e09-4719-9ac6-1dab640c5753"],

Cell["\<\
Display the generated probability tuples, density matrices, and probability \
vectors:\
\>", "Text",
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910157039737268*^9, 
  3.910157086996586*^9}, {3.910478134651063*^9, 3.910478227631804*^9}, {
  3.912667562145329*^9, 3.912667565762155*^9}, {3.912667669209757*^9, 
  3.912667730884163*^9}, {3.9126680135320807`*^9, 3.912668031411468*^9}, {
  3.91266809971905*^9, 3.912668123184205*^9}, {3.912668523002982*^9, 
  3.912668523222164*^9}},ExpressionUUID->"61b2e09d-c79c-4167-8805-\
18c087cc530d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NMcList", "[", 
     RowBox[{"[", "i", "]"}], "]"}], "//", "MatrixForm"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "NMcList", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.910483037390876*^9, 3.910483039146653*^9}, 
   3.9104833065887012`*^9, {3.912667867048418*^9, 3.9126678722884493`*^9}, {
   3.91266798573851*^9, 3.912667990141572*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"26071371-28fb-4dc1-9d95-db2d366d46a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0.4935895479521806`", ",", "0.5064104520478194`"}], 
          "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.4986008358967975`", ",", 
             RowBox[{"-", "0.006255896040512715`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.006255896040512715`"}], ",", 
             "0.5013991641032024`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.5062558960405126`", ",", "0.49374410395948726`", ",", 
           "0.49999999999999994`", ",", "0.49999999999999994`", ",", 
           "0.5013991641032024`", ",", "0.4986008358967975`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0.611172737578346`", ",", "0.38882726242165405`"}], 
          "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.5892529401562558`", ",", "0.06628189989829494`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.06628189989829494`", ",", "0.41074705984374427`"}], 
            "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.43371810010170514`", ",", "0.566281899898295`", ",", "0.5`", ",",
            "0.5`", ",", "0.41074705984374427`", ",", "0.5892529401562558`"}],
           "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0.25548462731908345`", ",", "0.7445153726809166`"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.6932887289259755`", ",", 
             RowBox[{"-", "0.1497572527374494`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1497572527374494`"}], ",", 
             "0.3067112710740245`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.6497572527374493`", ",", "0.35024274726255067`", ",", "0.5`", 
           ",", "0.5`", ",", "0.3067112710740245`", ",", 
           "0.6932887289259755`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0.41932113963599377`", ",", "0.5806788603640063`"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.4607753857574959`", ",", 
             RowBox[{"-", "0.0705018308071611`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.0705018308071611`"}], ",", 
             "0.5392246142425043`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.5705018308071612`", ",", "0.429498169192839`", ",", 
           "0.5000000000000001`", ",", "0.5000000000000001`", ",", 
           "0.5392246142425043`", ",", "0.4607753857574959`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0.8848902936080653`", ",", "0.1151097063919348`"}], 
          "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.14813189870272198`", ",", "0.15597877228376658`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.15597877228376658`", ",", "0.8518681012972782`"}], 
            "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.3440212277162335`", ",", "0.6559787722837667`", ",", 
           "0.5000000000000001`", ",", "0.5000000000000001`", ",", 
           "0.8518681012972782`", ",", "0.14813189870272198`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0.2571680587358874`", ",", "0.7428319412641127`"}], 
          "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3494511480032715`", ",", 
             RowBox[{"-", "0.19053187360797297`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.19053187360797297`"}], ",", 
             "0.6505488519967285`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.690531873607973`", ",", "0.30946812639202703`", ",", "0.5`", ",",
            "0.5`", ",", "0.6505488519967285`", ",", "0.3494511480032715`"}], 
          "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0.8861510536318895`", ",", "0.11384894636811058`"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.6842652656340436`", ",", "0.339350774423507`"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"0.339350774423507`", ",", "0.31573473436595684`"}], 
            "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.16064922557649322`", ",", "0.8393507744235071`", ",", 
           "0.5000000000000002`", ",", "0.5000000000000002`", ",", 
           "0.31573473436595684`", ",", "0.6842652656340436`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0.3864232663354229`", ",", "0.6135767336645771`"}], 
          "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.4596431266149936`", ",", 
             RowBox[{"-", "0.10616495278810631`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.10616495278810631`"}], ",", 
             "0.5403568733850065`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.6061649527881063`", ",", "0.3938350472118937`", ",", "0.5`", ",",
            "0.5`", ",", "0.5403568733850065`", ",", "0.4596431266149936`"}], 
          "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0.8451538734001608`", ",", "0.15484612659983923`"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.5555222707431365`", ",", "0.34065888183733023`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.34065888183733023`", ",", "0.4444777292568637`"}], 
            "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.15934111816266988`", ",", "0.8406588818373304`", ",", 
           "0.5000000000000001`", ",", "0.5000000000000001`", ",", 
           "0.4444777292568637`", ",", "0.5555222707431365`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0.3721966576348763`", ",", "0.6278033423651237`"}], 
          "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.6061253457962172`", ",", 
             RowBox[{"-", "0.0712116935575217`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.0712116935575217`"}], ",", 
             "0.39387465420378287`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.5712116935575218`", ",", "0.42878830644247834`", ",", "0.5`", 
           ",", "0.5`", ",", "0.39387465420378287`", ",", 
           "0.6061253457962172`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.91048304101987*^9, 3.910483307481969*^9, 3.910483772797497*^9, {
   3.912667875442704*^9, 3.912667885026688*^9}, 3.912667991165909*^9, 
   3.9126681260923443`*^9, 3.9126687434807*^9, 3.912848008856285*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"dd19790c-3d14-44d7-a16d-5b94fc729c36"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["N=2 [NMv]", "Subsubsection",
 CellChangeTimes->{{3.9094517829660063`*^9, 3.909451788396035*^9}, {
  3.910479567254066*^9, 3.910479607223832*^9}, {3.9126691000205584`*^9, 
  3.912669100960102*^9}},
 Background->RGBColor[
  1, 0.85, 0.85],ExpressionUUID->"81b35eb2-e6d0-47b5-af10-fcce8307b604"],

Cell["Generate 10 NM-violating probability vectors for N=2.", "Text",
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910157039737268*^9, 
  3.910157086996586*^9}, {3.910478134651063*^9, 3.910478227631804*^9}, {
  3.912667562145329*^9, 3.912667565762155*^9}, {3.912667669209757*^9, 
  3.912667730884163*^9}, {3.9126680135320807`*^9, 3.912668031411468*^9}, {
  3.91266813710653*^9, 
  3.9126681400066147`*^9}},ExpressionUUID->"ef1dc935-3c47-4b64-8637-\
d5bca766dcf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NMvList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";", 
  RowBox[{"\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "=", "0"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.910479308438993*^9, 3.910479325635474*^9}, 
   3.9126679226325808`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"d0b2b1f4-acbe-46eb-85ef-16717ec73f13"],

Cell[BoxData[
 RowBox[{"NMvTDG", "[", 
  RowBox[{"2", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.910479340499716*^9, 3.910479342329286*^9}, 
   3.9126679333336763`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"700a12a3-97c6-4f97-b295-db1fd63004d0"],

Cell[CellGroupData[{

Cell[BoxData["\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"fe2a2e46-dbc6-40af-a113-9c5dd5306d39"],

Cell[BoxData["434"], "Output",
 CellChangeTimes->{3.9104795105259542`*^9, 3.910482899415427*^9, 
  3.910483315301149*^9, 3.912667935977738*^9, 3.9126681458312063`*^9, 
  3.91266875017527*^9, 3.9128480088966846`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"70ae0d2f-3710-43e1-b7ff-b36fb6c92401"]
}, Open  ]],

Cell["\<\
Display the generated probability tuples, density matrices, and probability \
vectors:\
\>", "Text",
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910157039737268*^9, 
  3.910157086996586*^9}, {3.910478134651063*^9, 3.910478227631804*^9}, {
  3.912667562145329*^9, 3.912667565762155*^9}, {3.912667669209757*^9, 
  3.912667730884163*^9}, {3.9126680135320807`*^9, 3.912668031411468*^9}, {
  3.91266809971905*^9, 3.912668123184205*^9}, {3.9126685197126703`*^9, 
  3.912668519928041*^9}},ExpressionUUID->"6c1e73ac-c8d3-476e-9a73-\
bbf22e27f8ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NMvList", "[", 
     RowBox[{"[", "i", "]"}], "]"}], "//", "MatrixForm"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "NMvList", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9104795234500437`*^9, 3.910479527757338*^9}, {
  3.912667939567862*^9, 3.912667978903241*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"e441b2cb-80b5-4ea1-932a-7652dbb0ef3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.15547564659230018`"}], ",", 
           "1.1554756465923002`"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.9710309648126042`", ",", 
             RowBox[{"-", "0.45582688979842023`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.45582688979842023`"}], ",", 
             "0.028969035187395686`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.9558268897984201`", ",", "0.04417311020157971`", ",", 
           "0.49999999999999994`", ",", "0.49999999999999994`", ",", 
           "0.028969035187395686`", ",", "0.9710309648126042`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.09627753224145108`"}], ",", "1.096277532241451`"}],
           "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.8982364026283237`", ",", 
             RowBox[{"-", "0.44379574477185624`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.44379574477185624`"}], ",", 
             "0.1017635973716765`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.9437957447718563`", ",", "0.05620425522814387`", ",", 
           "0.5000000000000001`", ",", "0.5000000000000001`", ",", 
           "0.1017635973716765`", ",", "0.8982364026283237`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02818642782339653`"}], ",", 
           "1.0281864278233965`"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.1776919109985291`", ",", 
             RowBox[{"-", "0.41844760520411634`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.41844760520411634`"}], ",", 
             "0.8223080890014708`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.9184476052041163`", ",", "0.08155239479588361`", ",", 
           "0.49999999999999994`", ",", "0.49999999999999994`", ",", 
           "0.8223080890014708`", ",", "0.1776919109985291`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02476140744399924`"}], ",", 
           "1.0247614074439992`"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.6878345219974838`", ",", 
             RowBox[{"-", "0.4899925786056192`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.4899925786056192`"}], ",", 
             "0.31216547800251637`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.9899925786056192`", ",", "0.010007421394380933`", ",", 
           "0.5000000000000001`", ",", "0.5000000000000001`", ",", 
           "0.31216547800251637`", ",", "0.6878345219974838`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.030201697682619155`"}], ",", 
           "1.0302016976826192`"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.7353417192068595`", ",", 
             RowBox[{"-", "0.47510853015525945`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.47510853015525945`"}], ",", 
             "0.2646582807931404`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.9751085301552594`", ",", "0.024891469844740527`", ",", "0.5`", 
           ",", "0.5`", ",", "0.2646582807931404`", ",", 
           "0.7353417192068595`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.047421874282850496`"}], ",", 
           "1.0474218742828505`"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.2394299290693722`", ",", 
             RowBox[{"-", "0.48142906702707156`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.48142906702707156`"}], ",", 
             "0.7605700709306277`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.9814290670270716`", ",", "0.018570932972928375`", ",", 
           "0.49999999999999994`", ",", "0.49999999999999994`", ",", 
           "0.7605700709306277`", ",", "0.2394299290693722`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.030346946173499312`"}], ",", 
           "1.0303469461734993`"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.8268998408785171`", ",", 
             RowBox[{"-", "0.4176175012486389`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.4176175012486389`"}], ",", 
             "0.17310015912148305`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.917617501248639`", ",", "0.08238249875136118`", ",", 
           "0.5000000000000001`", ",", "0.5000000000000001`", ",", 
           "0.17310015912148305`", ",", "0.8268998408785171`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.07950949583393241`"}], ",", 
           "1.0795094958339324`"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.926891165576227`", ",", 
             RowBox[{"-", "0.39191222042017143`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.39191222042017143`"}], ",", 
             "0.07310883442377317`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.8919122204201715`", ",", "0.10808777957982868`", ",", 
           "0.5000000000000001`", ",", "0.5000000000000001`", ",", 
           "0.07310883442377317`", ",", "0.926891165576227`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02365752452462866`"}], ",", 
           "1.0236575245246287`"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.983214828501462`", ",", 
             RowBox[{"-", "0.2017935393107634`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.2017935393107634`"}], ",", 
             "0.016785171498537876`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.7017935393107634`", ",", "0.29820646068923656`", ",", 
           "0.49999999999999994`", ",", "0.49999999999999994`", ",", 
           "0.016785171498537876`", ",", "0.983214828501462`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.15585638892862397`"}], ",", "1.155856388928624`"}],
           "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.9741272483760477`", ",", 
             RowBox[{"-", "0.45315665640686775`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.45315665640686775`"}], ",", 
             "0.025872751623952223`"}], "}"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{
          "0.9531566564068676`", ",", "0.04684334359313219`", ",", 
           "0.49999999999999994`", ",", "0.49999999999999994`", ",", 
           "0.025872751623952223`", ",", "0.9741272483760477`"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9104795288992443`*^9, 3.9104828994266653`*^9, 3.9104833172677298`*^9, {
   3.912667961365177*^9, 3.912667979793161*^9}, 3.9126681536519527`*^9, 
   3.9126687523552027`*^9, 3.912848008914954*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"47cc7868-221f-4e59-8754-424a1de7e91b"]
}, Open  ]],

Cell["Evaluate the degree of the NM violation:", "Text",
 CellChangeTimes->{{3.910479774627222*^9, 3.910479807945409*^9}, {
  3.910481299308682*^9, 3.910481332992971*^9}, {3.910481786250884*^9, 
  3.910481850373863*^9}, {3.910482416253593*^9, 3.910482422761791*^9}, {
  3.910482484811071*^9, 3.9104824955768213`*^9}, {3.9126685395894947`*^9, 
  3.9126685397294617`*^9}},ExpressionUUID->"74d4219f-6473-4d8d-af8d-\
75474086826e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"\[Gamma]", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]vecs", "[", "NMvList", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
     RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", 
      RowBox[{
       RowBox[{"\[Gamma]vecs", "[", "NMvList", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.910482641120987*^9, 3.9104826426291924`*^9}, {
  3.910482716685998*^9, 3.910482740263464*^9}, {3.912668405731628*^9, 
  3.912668411724728*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"55076b6d-c631-43bf-be7a-aa8743dbb098"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.15547564659230018`", ",", "0.09627753224145108`", ",", 
   "0.02818642782339653`", ",", "0.02476140744399924`", ",", 
   "0.030201697682619155`", ",", "0.047421874282850496`", ",", 
   "0.030346946173499312`", ",", "0.07950949583393241`", ",", 
   "0.02365752452462866`", ",", "0.15585638892862397`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9104827275184402`*^9, 3.910482762654717*^9}, 
   3.910482908898121*^9, 3.910483350874737*^9, 3.912668412497602*^9, 
   3.912668550033589*^9, 3.912668754815669*^9, 3.912848008922771*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"12bb9d51-e9b3-4a03-a325-ebfe8b4660db"]
}, Open  ]],

Cell["Sort from least to most NM-violating:", "Text",
 CellChangeTimes->{{3.910479774627222*^9, 3.910479807945409*^9}, {
  3.910481299308682*^9, 3.910481332992971*^9}, {3.910481786250884*^9, 
  3.910481850373863*^9}, {3.910482416253593*^9, 3.910482422761791*^9}, {
  3.910482484811071*^9, 3.9104824955768213`*^9}, {3.9126685395894947`*^9, 
  3.91266857646811*^9}},ExpressionUUID->"51c7939d-f4b6-416e-a59d-\
b56d49ec4b10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SortBy", "[", 
  RowBox[{"%", ",", "Total"}], "]"}]], "Input",
 CellChangeTimes->{{3.910482765413012*^9, 3.910482765974247*^9}, {
  3.910482800049491*^9, 3.910482800197303*^9}, {3.910482842171336*^9, 
  3.910482847554431*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"130b422f-2a8f-4f8a-954a-1c60a75df238"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.02365752452462866`", ",", "0.02476140744399924`", ",", 
   "0.02818642782339653`", ",", "0.030201697682619155`", ",", 
   "0.030346946173499312`", ",", "0.047421874282850496`", ",", 
   "0.07950949583393241`", ",", "0.09627753224145108`", ",", 
   "0.15547564659230018`", ",", "0.15585638892862397`"}], "}"}]], "Output",
 CellChangeTimes->{3.9104828484847937`*^9, 3.910482908904656*^9, 
  3.9104833528536587`*^9, 3.91266856118955*^9, 3.9126687593999023`*^9, 
  3.912848008939887*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"c851c392-f542-4b8f-994b-dd1ea611fd7d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["N=3 [NMc]", "Subsubsection",
 CellChangeTimes->{{3.9094517829660063`*^9, 3.909451788396035*^9}, {
  3.910479567254066*^9, 3.910479607223832*^9}, {3.9104829651139803`*^9, 
  3.910482965209569*^9}, {3.9104830533107967`*^9, 3.910483053412361*^9}, {
  3.912669106247348*^9, 3.9126691068107862`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"45384335-5a50-449f-ba9b-40e09c26afe4"],

Cell["Generate 10 NM-conforming probability vectors for N=3.", "Text",
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910157039737268*^9, 
  3.910157086996586*^9}, {3.910478134651063*^9, 3.910478227631804*^9}, {
  3.912667562145329*^9, 3.912667565762155*^9}, {3.912667669209757*^9, 
  3.912667730884163*^9}, {3.9126680135320807`*^9, 3.912668031411468*^9}, {
  3.91266819509236*^9, 
  3.912668195178816*^9}},ExpressionUUID->"93ba1740-3ec4-4870-94dd-\
59aef0b75366"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NMcList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.910483009274996*^9, 3.910483014650721*^9}, 
   3.912668184885764*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"8248c4f0-4a05-4279-addf-97a5e602170c"],

Cell[BoxData[
 RowBox[{"NMcTDG", "[", 
  RowBox[{"3", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.910483023547195*^9, 3.910483026345994*^9}, {
  3.91048308046152*^9, 3.910483080590974*^9}, {3.912668201828182*^9, 
  3.9126682033400793`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"c8088377-c86e-4989-9d09-dbe4f3cc50c8"],

Cell["Show the generated probability tuples:", "Text",
 CellChangeTimes->{{3.910479774627222*^9, 3.9104797798143044`*^9}, {
   3.910479817408772*^9, 3.910479820211094*^9}, 3.9104812836357603`*^9, {
   3.912668223174045*^9, 3.912668223336076*^9}, {3.912668516028427*^9, 
   3.912668516253002*^9}},ExpressionUUID->"56615bbc-7839-4e07-9313-\
65a18a68a0a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NMcList", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "//", "MatrixForm"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "NMcList", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.910483037390876*^9, 3.910483039146653*^9}, {
   3.910483089402719*^9, 3.910483090797495*^9}, 3.910483327275888*^9, {
   3.9126682112165422`*^9, 3.912668216314187*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"ca5ddba2-f9e5-4ca4-9374-5ce7e3f87bdb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.03894633270229601`"},
        {"0.14912960867294392`"},
        {"0.8119240586247601`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.2995313587457602`"},
        {"0.16761201849179055`"},
        {"0.5328566227624492`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.28523773896211213`"},
        {"0.47055871604838084`"},
        {"0.24420354498950708`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.3781182771188685`"},
        {"0.08608519298136624`"},
        {"0.5357965298997652`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.23547074852548847`"},
        {"0.30466988452208954`"},
        {"0.459859366952422`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.3351545633733729`"},
        {"0.10594799832801716`"},
        {"0.5588974382986099`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.2448843813016886`"},
        {"0.33369001070157756`"},
        {"0.42142560799673384`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.1668854757045325`"},
        {"0.14295029980472043`"},
        {"0.6901642244907471`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.3563351706204975`"},
        {"0.5476229105754605`"},
        {"0.09604191880404196`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.22607466851881908`"},
        {"0.658645282736188`"},
        {"0.11528004874499287`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.91048304101987*^9, {3.910483083073842*^9, 3.910483091455469*^9}, 
   3.91048332866835*^9, 3.912668226665901*^9, 3.912668784458427*^9, 
   3.912848008982669*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"b9bbb7de-e680-43cb-906a-953fc869fca4"]
}, Open  ]],

Cell["Or, alternatively:", "Text",
 CellChangeTimes->{{3.910479774627222*^9, 3.9104797798143044`*^9}, {
  3.910479817408772*^9, 3.910479820211094*^9}, {3.910481274076106*^9, 
  3.91048128092152*^9}},ExpressionUUID->"1e993f96-fc6a-419e-b659-\
81b1a87e6c87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NMcList", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{3.910483112560351*^9, 3.9126682347753963`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"113ab63c-939f-4486-9c04-a2e8b07da7e7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.03894633270229601`", "0.14912960867294392`", "0.8119240586247601`"},
     {"0.2995313587457602`", "0.16761201849179055`", "0.5328566227624492`"},
     {"0.28523773896211213`", "0.47055871604838084`", 
      "0.24420354498950708`"},
     {"0.3781182771188685`", "0.08608519298136624`", "0.5357965298997652`"},
     {"0.23547074852548847`", "0.30466988452208954`", "0.459859366952422`"},
     {"0.3351545633733729`", "0.10594799832801716`", "0.5588974382986099`"},
     {"0.2448843813016886`", "0.33369001070157756`", "0.42142560799673384`"},
     {"0.1668854757045325`", "0.14295029980472043`", "0.6901642244907471`"},
     {"0.3563351706204975`", "0.5476229105754605`", "0.09604191880404196`"},
     {"0.22607466851881908`", "0.658645282736188`", "0.11528004874499287`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.910483113363654*^9, 3.910483331818884*^9, 
  3.912668237440126*^9, 3.912668786399068*^9, 3.912848008999895*^9},
 CellLabel->
  "Out[20]//MatrixForm=",ExpressionUUID->"d8e15e2d-98ac-465c-9779-\
e31741a5f4b4"]
}, Open  ]],

Cell["Show the generated pseudo-density matrices:", "Text",
 CellChangeTimes->{{3.910479774627222*^9, 3.9104797798143044`*^9}, {
   3.910479817408772*^9, 3.910479820211094*^9}, 3.9104812836357603`*^9, {
   3.91048318956279*^9, 
   3.910483192556128*^9}},ExpressionUUID->"75b7caef-007d-4ae4-a329-\
64fb0c15291d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NMcList", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "//", "MatrixForm"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "NMcList", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.910483037390876*^9, 3.910483039146653*^9}, {
  3.910483089402719*^9, 3.910483090797495*^9}, {3.910483194830295*^9, 
  3.9104831949254293`*^9}, {3.912668248554699*^9, 3.912668255998652*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"b053a993-be12-49af-a314-aa3aaf4939e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.37899121466539487`", "0.002469868180146051`", 
        RowBox[{"-", "0.37464676624189663`"}]},
       {"0.002469868180146051`", "0.13866121050673125`", 
        RowBox[{"-", "0.0579830990196976`"}]},
       {
        RowBox[{"-", "0.37464676624189663`"}], 
        RowBox[{"-", "0.0579830990196976`"}], "0.4823475748278741`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.3532426113919589`", "0.016452434653784025`", 
        RowBox[{"-", "0.09810925093564085`"}]},
       {"0.016452434653784025`", "0.16932308264689444`", 
        RowBox[{"-", "0.01677234714848058`"}]},
       {
        RowBox[{"-", "0.09810925093564085`"}], 
        RowBox[{"-", "0.01677234714848058`"}], "0.47743430596114644`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.2989849409466881`", 
        RowBox[{"-", "0.00934537957458779`"}], 
        RowBox[{"-", "0.047736715276158`"}]},
       {
        RowBox[{"-", "0.00934537957458779`"}], "0.2501710911193082`", 
        "0.03500950575246629`"},
       {
        RowBox[{"-", "0.047736715276158`"}], "0.03500950575246629`", 
        "0.45084396793400383`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.29658318827661545`", 
        RowBox[{"-", "0.20673719313056177`"}], "0.06532452333013243`"},
       {
        RowBox[{"-", "0.20673719313056177`"}], "0.3568464433471487`", 
        "0.06338336026400858`"},
       {"0.06532452333013243`", "0.06338336026400858`", "0.34657036837623584`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.3037973127138731`", "0.034986485968707876`", 
        RowBox[{"-", "0.04924223850689602`"}]},
       {"0.034986485968707876`", "0.4142495988815761`", 
        RowBox[{"-", "0.0672683557326191`"}]},
       {
        RowBox[{"-", "0.04924223850689602`"}], 
        RowBox[{"-", "0.0672683557326191`"}], "0.2819530884045509`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.38327736345430125`", 
        RowBox[{"-", "0.10507321397102287`"}], "0.09924254511037461`"},
       {
        RowBox[{"-", "0.10507321397102287`"}], "0.4749705139998334`", 
        RowBox[{"-", "0.02782794796677899`"}]},
       {"0.09924254511037461`", 
        RowBox[{"-", "0.02782794796677899`"}], "0.14175212254586528`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.262263810948011`", 
        RowBox[{"-", "0.03341505971955511`"}], 
        RowBox[{"-", "0.014425410296476586`"}]},
       {
        RowBox[{"-", "0.03341505971955511`"}], "0.36113868996525067`", 
        RowBox[{"-", "0.051178476556082146`"}]},
       {
        RowBox[{"-", "0.014425410296476586`"}], 
        RowBox[{"-", "0.051178476556082146`"}], "0.37659749908673834`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.3767460556952643`", 
        RowBox[{"-", "0.05444829167274434`"}], 
        RowBox[{"-", "0.2551215753688356`"}]},
       {
        RowBox[{"-", "0.05444829167274434`"}], "0.17187128030256485`", 
        "0.0815024563320326`"},
       {
        RowBox[{"-", "0.2551215753688356`"}], "0.0815024563320326`", 
        "0.4513826640021708`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.3208215902703778`", 
        RowBox[{"-", "0.038754596038250516`"}], "0.19145193344323508`"},
       {
        RowBox[{"-", "0.038754596038250516`"}], "0.4091151687581254`", 
        RowBox[{"-", "0.09094576651424184`"}]},
       {"0.19145193344323508`", 
        RowBox[{"-", "0.09094576651424184`"}], "0.2700632409714968`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.21781105767052036`", "0.18357682063919012`", 
        RowBox[{"-", "0.060525048201185885`"}]},
       {"0.18357682063919012`", "0.46783906710340334`", 
        RowBox[{"-", "0.17081349357895198`"}]},
       {
        RowBox[{"-", "0.060525048201185885`"}], 
        RowBox[{"-", "0.17081349357895198`"}], "0.3143498752260765`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.91048304101987*^9, {3.910483083073842*^9, 3.910483091455469*^9}, 
   3.9104831954327374`*^9, 3.910483334065227*^9, 3.9126682585457287`*^9, 
   3.912668788619068*^9, 3.912848009011978*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"addb6d0d-a5bd-4f10-832c-be5bbc9be88d"]
}, Open  ]],

Cell["Show the generated probability vectors:", "Text",
 CellChangeTimes->{{3.910479774627222*^9, 3.9104797798143044`*^9}, {
   3.910479817408772*^9, 3.910479820211094*^9}, 3.9104812836357603`*^9, {
   3.91048318956279*^9, 
   3.910483207104273*^9}},ExpressionUUID->"a7995e1a-1b02-4c99-bc42-\
635d3b7456e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NMcList", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "//", "MatrixForm"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "NMcList", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.910483037390876*^9, 3.910483039146653*^9}, {
  3.910483089402719*^9, 3.910483090797495*^9}, {3.910483194830295*^9, 
  3.9104832111135883`*^9}, {3.9126682648485117`*^9, 3.9126682700955343`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"48a95538-21ec-4d78-a6cd-9ce41f0c3d4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.25635634440591704`"},
        {"0.26129608076620914`"},
        {"0.4823475748278741`"},
        {"0.8053161609885311`"},
        {"0.056022628504737854`"},
        {"0.13866121050673125`"},
        {"0.3684874916870003`"},
        {"0.25252129364760506`"},
        {"0.37899121466539487`"},
        {"0.2588262125860631`"},
        {"0.2588262125860631`"},
        {"0.4823475748278741`"},
        {"0.43066939474663446`"},
        {"0.43066939474663446`"},
        {"0.13866121050673125`"},
        {"0.3105043926673027`"},
        {"0.3105043926673027`"},
        {"0.37899121466539487`"},
        {"0.13866121050673125`"},
        {"0.37899121466539487`"},
        {"0.4823475748278741`"},
        {"0.4823475748278741`"},
        {"0.13866121050673125`"},
        {"0.37899121466539487`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.24483041236564262`"},
        {"0.2777352816732107`"},
        {"0.47743430596114644`"},
        {"0.5134477096121934`"},
        {"0.31722920774091184`"},
        {"0.16932308264689444`"},
        {"0.340151041452501`"},
        {"0.30660634715553986`"},
        {"0.3532426113919589`"},
        {"0.26128284701942667`"},
        {"0.26128284701942667`"},
        {"0.47743430596114644`"},
        {"0.41533845867655267`"},
        {"0.41533845867655267`"},
        {"0.16932308264689444`"},
        {"0.32337869430402044`"},
        {"0.32337869430402044`"},
        {"0.3532426113919589`"},
        {"0.16932308264689444`"},
        {"0.3532426113919589`"},
        {"0.47743430596114644`"},
        {"0.47743430596114644`"},
        {"0.16932308264689444`"},
        {"0.3532426113919589`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.28392339560758595`"},
        {"0.26523263645841033`"},
        {"0.45084396793400383`"},
        {"0.42265116971650396`"},
        {"0.32717773916418796`"},
        {"0.2501710911193082`"},
        {"0.31549802377418973`"},
        {"0.3855170352791223`"},
        {"0.2989849409466881`"},
        {"0.27457801603299814`"},
        {"0.27457801603299814`"},
        {"0.45084396793400383`"},
        {"0.374914454440346`"},
        {"0.374914454440346`"},
        {"0.2501710911193082`"},
        {"0.350507529526656`"},
        {"0.350507529526656`"},
        {"0.2989849409466881`"},
        {"0.2501710911193082`"},
        {"0.2989849409466881`"},
        {"0.45084396793400383`"},
        {"0.45084396793400383`"},
        {"0.2501710911193082`"},
        {"0.2989849409466881`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.5334520089424438`"},
        {"0.11997762268132031`"},
        {"0.34657036837623584`"},
        {"0.2562522549962932`"},
        {"0.3869013016565581`"},
        {"0.3568464433471487`"},
        {"0.2883250455976837`"},
        {"0.41509176612570087`"},
        {"0.29658318827661545`"},
        {"0.3267148158118821`"},
        {"0.3267148158118821`"},
        {"0.34657036837623584`"},
        {"0.3215767783264256`"},
        {"0.3215767783264256`"},
        {"0.3568464433471487`"},
        {"0.3517084058616923`"},
        {"0.3517084058616923`"},
        {"0.29658318827661545`"},
        {"0.3568464433471487`"},
        {"0.29658318827661545`"},
        {"0.34657036837623584`"},
        {"0.34657036837623584`"},
        {"0.3568464433471487`"},
        {"0.29658318827661545`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.3240369698290167`"},
        {"0.3940099417664325`"},
        {"0.2819530884045509`"},
        {"0.34211743906610803`"},
        {"0.243632962052316`"},
        {"0.4142495988815761`"},
        {"0.41536969937568263`"},
        {"0.28083298791044436`"},
        {"0.3037973127138731`"},
        {"0.3590234557977246`"},
        {"0.3590234557977246`"},
        {"0.2819530884045509`"},
        {"0.292875200559212`"},
        {"0.292875200559212`"},
        {"0.4142495988815761`"},
        {"0.3481013436430635`"},
        {"0.3481013436430635`"},
        {"0.3037973127138731`"},
        {"0.4142495988815761`"},
        {"0.3037973127138731`"},
        {"0.2819530884045509`"},
        {"0.2819530884045509`"},
        {"0.4142495988815761`"},
        {"0.3037973127138731`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.5341971526980902`"},
        {"0.32405072475604446`"},
        {"0.14175212254586528`"},
        {"0.16327219788970865`"},
        {"0.3617572881104579`"},
        {"0.4749705139998334`"},
        {"0.3361892662396283`"},
        {"0.28053337030607034`"},
        {"0.38327736345430125`"},
        {"0.42912393872706733`"},
        {"0.42912393872706733`"},
        {"0.14175212254586528`"},
        {"0.26251474300008326`"},
        {"0.26251474300008326`"},
        {"0.4749705139998334`"},
        {"0.30836131827284935`"},
        {"0.30836131827284935`"},
        {"0.38327736345430125`"},
        {"0.4749705139998334`"},
        {"0.38327736345430125`"},
        {"0.14175212254586528`"},
        {"0.14175212254586528`"},
        {"0.4749705139998334`"},
        {"0.38327736345430125`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.34511631017618594`"},
        {"0.2782861907370757`"},
        {"0.37659749908673834`"},
        {"0.33385606531385126`"},
        {"0.30500524472089807`"},
        {"0.36113868996525067`"},
        {"0.42004657108207666`"},
        {"0.31768961796991235`"},
        {"0.262263810948011`"},
        {"0.31170125045663083`"},
        {"0.31170125045663083`"},
        {"0.37659749908673834`"},
        {"0.31943065501737467`"},
        {"0.31943065501737467`"},
        {"0.36113868996525067`"},
        {"0.3688680945259945`"},
        {"0.3688680945259945`"},
        {"0.262263810948011`"},
        {"0.36113868996525067`"},
        {"0.262263810948011`"},
        {"0.37659749908673834`"},
        {"0.37659749908673834`"},
        {"0.36113868996525067`"},
        {"0.262263810948011`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.3287569596716589`"},
        {"0.21986037632617023`"},
        {"0.4513826640021708`"},
        {"0.6691859352175531`"},
        {"0.15894278447988194`"},
        {"0.17187128030256485`"},
        {"0.23012451582033522`"},
        {"0.39312942848440047`"},
        {"0.3767460556952643`"},
        {"0.27430866799891457`"},
        {"0.27430866799891457`"},
        {"0.4513826640021708`"},
        {"0.4140643598487176`"},
        {"0.4140643598487176`"},
        {"0.17187128030256485`"},
        {"0.31162697215236784`"},
        {"0.31162697215236784`"},
        {"0.3767460556952643`"},
        {"0.17187128030256485`"},
        {"0.3767460556952643`"},
        {"0.4513826640021708`"},
        {"0.4513826640021708`"},
        {"0.17187128030256485`"},
        {"0.3767460556952643`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.40372297555250214`"},
        {"0.3262137834760011`"},
        {"0.2700632409714968`"},
        {"0.10399048217770224`"},
        {"0.4868943490641724`"},
        {"0.4091151687581254`"},
        {"0.43053497137905294`"},
        {"0.24864343835056926`"},
        {"0.3208215902703778`"},
        {"0.36496837951425165`"},
        {"0.36496837951425165`"},
        {"0.2700632409714968`"},
        {"0.2954424156209373`"},
        {"0.2954424156209373`"},
        {"0.4091151687581254`"},
        {"0.33958920486481114`"},
        {"0.33958920486481114`"},
        {"0.3208215902703778`"},
        {"0.4091151687581254`"},
        {"0.3208215902703778`"},
        {"0.2700632409714968`"},
        {"0.2700632409714968`"},
        {"0.4091151687581254`"},
        {"0.3208215902703778`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.15924824174777175`"},
        {"0.526401883026152`"},
        {"0.3143498752260765`"},
        {"0.3266055146494843`"},
        {"0.20555541824711254`"},
        {"0.46783906710340334`"},
        {"0.5619079647436919`"},
        {"0.22028097758578793`"},
        {"0.21781105767052036`"},
        {"0.34282506238696187`"},
        {"0.34282506238696187`"},
        {"0.3143498752260765`"},
        {"0.2660804664482984`"},
        {"0.2660804664482984`"},
        {"0.46783906710340334`"},
        {"0.39109447116473994`"},
        {"0.39109447116473994`"},
        {"0.21781105767052036`"},
        {"0.46783906710340334`"},
        {"0.21781105767052036`"},
        {"0.3143498752260765`"},
        {"0.3143498752260765`"},
        {"0.46783906710340334`"},
        {"0.21781105767052036`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.910483211540462*^9, 3.910483336314864*^9, 
  3.912668271220162*^9, 3.9126687912617893`*^9, 3.912848009034623*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"17a27d48-fac1-4fad-aea7-774a4397d610"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["N=3 [NMv]", "Subsubsection",
 CellChangeTimes->{{3.9094517829660063`*^9, 3.909451788396035*^9}, {
  3.910479567254066*^9, 3.910479621796301*^9}, {3.912669112323429*^9, 
  3.9126691129197617`*^9}},
 Background->RGBColor[
  1, 0.85, 0.85],ExpressionUUID->"0834fbe5-02db-4fd6-9640-9d2ad8e87641"],

Cell["Generate 10 NM-violating probability vectors for N=3.", "Text",
 CellChangeTimes->{{3.9094502471208353`*^9, 3.909450290244224*^9}, {
  3.9094541461738367`*^9, 3.909454152960528*^9}, {3.910157039737268*^9, 
  3.910157086996586*^9}, {3.910478134651063*^9, 3.910478227631804*^9}, {
  3.912667562145329*^9, 3.912667565762155*^9}, {3.912667669209757*^9, 
  3.912667730884163*^9}, {3.9126680135320807`*^9, 3.912668031411468*^9}, {
  3.91266813710653*^9, 3.9126681400066147`*^9}, {3.9126682997867947`*^9, 
  3.912668299887801*^9}},ExpressionUUID->"01f81190-e079-42ff-acf0-\
88093839c806"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NMvList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";", 
  RowBox[{"\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "=", "0"}], 
  ";"}]], "Input",
 CellChangeTimes->{3.912668287052476*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"88805996-5179-4406-85bb-7cd28a8af758"],

Cell[BoxData[
 RowBox[{"NMvTDG", "[", 
  RowBox[{"3", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.910479633146199*^9, 3.910479633221224*^9}, {
  3.9126683204091673`*^9, 3.9126683224355793`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"80826fbb-ff07-4572-a91d-0017c79e0f78"],

Cell[CellGroupData[{

Cell[BoxData["\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"c22bc7f8-4d10-41eb-94f3-bfd164cf18f7"],

Cell[BoxData["139"], "Output",
 CellChangeTimes->{3.910479637398967*^9, 3.91048290881732*^9, 
  3.9104833412245903`*^9, 3.9126683281511087`*^9, 3.91266879788202*^9, 
  3.912848009086047*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"dd7abaf4-6319-4f25-a469-06681da6c0c5"]
}, Open  ]],

Cell["Show the generated probability tuples:", "Text",
 CellChangeTimes->{{3.910479774627222*^9, 3.9104797798143044`*^9}, {
   3.910479817408772*^9, 3.910479820211094*^9}, 
   3.9104812836357603`*^9},ExpressionUUID->"0c97e542-310f-4f92-ad9f-\
56ae04c3eb79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NMvList", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "//", "MatrixForm"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "NMvList", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.910479646874769*^9, 3.910479668393152*^9}, {
  3.912668333338292*^9, 3.912668337893734*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"c6f68671-0167-42ee-b4bd-3b1f0ed50a64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "0.09482950618534147`"}]},
        {"0.07439822575692023`"},
        {"1.0204312804284212`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "0.008757292280909823`"}]},
        {"0.5861977466573935`"},
        {"0.4225595456235163`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.374791090775509`"},
        {
         RowBox[{"-", "0.05884847146744221`"}]},
        {"0.6840573806919332`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.6624837462161066`"},
        {"0.35392896002794805`"},
        {
         RowBox[{"-", "0.016412706244054664`"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "0.10831900201355626`"}]},
        {"0.37438130423611193`"},
        {"0.7339376977774443`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.8948253767999583`"},
        {
         RowBox[{"-", "0.08556867759847009`"}]},
        {"0.19074330079851176`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.45362398678443583`"},
        {"0.559432291141039`"},
        {
         RowBox[{"-", "0.013056277925474813`"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.8638730379259107`"},
        {
         RowBox[{"-", "0.0012577444891395118`"}]},
        {"0.13738470656322876`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.08631599389721023`"},
        {"0.9237686852652804`"},
        {
         RowBox[{"-", "0.010084679162490673`"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "0.03791393306723645`"}]},
        {"0.4334933827478795`"},
        {"0.6044205503193569`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.910479642624395*^9, 3.910479668869564*^9}, 
   3.910482908838921*^9, 3.9104833429207783`*^9, 3.91266833894862*^9, 
   3.912668799611*^9, 3.9128480091018543`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"b3a72673-d4a3-4f8d-b267-44ec8dde8abf"]
}, Open  ]],

Cell["Or, alternatively:", "Text",
 CellChangeTimes->{{3.910479774627222*^9, 3.9104797798143044`*^9}, {
  3.910479817408772*^9, 3.910479820211094*^9}, {3.910481274076106*^9, 
  3.91048128092152*^9}},ExpressionUUID->"a2000434-87a8-4b18-85ee-\
a594d0d6a8fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NMvList", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.910480371662524*^9, 3.910480372564168*^9}, 
   3.9126683423714123`*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"d5c4c91e-bb9a-483d-87d2-dd137c98eb54"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.09482950618534147`"}], "0.07439822575692023`", 
      "1.0204312804284212`"},
     {
      RowBox[{"-", "0.008757292280909823`"}], "0.5861977466573935`", 
      "0.4225595456235163`"},
     {"0.374791090775509`", 
      RowBox[{"-", "0.05884847146744221`"}], "0.6840573806919332`"},
     {"0.6624837462161066`", "0.35392896002794805`", 
      RowBox[{"-", "0.016412706244054664`"}]},
     {
      RowBox[{"-", "0.10831900201355626`"}], "0.37438130423611193`", 
      "0.7339376977774443`"},
     {"0.8948253767999583`", 
      RowBox[{"-", "0.08556867759847009`"}], "0.19074330079851176`"},
     {"0.45362398678443583`", "0.559432291141039`", 
      RowBox[{"-", "0.013056277925474813`"}]},
     {"0.8638730379259107`", 
      RowBox[{"-", "0.0012577444891395118`"}], "0.13738470656322876`"},
     {"0.08631599389721023`", "0.9237686852652804`", 
      RowBox[{"-", "0.010084679162490673`"}]},
     {
      RowBox[{"-", "0.03791393306723645`"}], "0.4334933827478795`", 
      "0.6044205503193569`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.910480373008333*^9, 3.9104829088460913`*^9, 
  3.9104833447891903`*^9, 3.912668343375996*^9, 3.912668801664353*^9, 
  3.912848009110015*^9},
 CellLabel->
  "Out[27]//MatrixForm=",ExpressionUUID->"999522b5-ef2c-40eb-80b1-\
b9def4adfd42"]
}, Open  ]],

Cell["Show the generated pseudo-density matrices:", "Text",
 CellChangeTimes->{{3.910479774627222*^9, 3.9104797798143044`*^9}, {
   3.910479817408772*^9, 3.910479820211094*^9}, 3.9104812836357603`*^9, {
   3.910483144899822*^9, 
   3.910483151198257*^9}},ExpressionUUID->"73fcd6b1-7a35-44f2-bc8b-\
2ac217470294"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NMvList", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "//", "MatrixForm"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "NMvList", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.910479646874769*^9, 3.910479668393152*^9}, {
  3.9104831528548937`*^9, 3.9104831529183617`*^9}, {3.912668432099596*^9, 
  3.912668436690855*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"5149ad95-e112-4e36-aebf-12e749641b7e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.8472766207495648`", 
        RowBox[{"-", "0.33839888802143003`"}], 
        RowBox[{"-", "0.20355650170243972`"}]},
       {
        RowBox[{"-", "0.33839888802143003`"}], "0.026827544454594593`", 
        "0.06878395629709988`"},
       {
        RowBox[{"-", "0.20355650170243972`"}], "0.06878395629709988`", 
        "0.12589583479584077`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.3441451274945515`", 
        RowBox[{"-", "0.001776874372931253`"}], 
        RowBox[{"-", "0.2100529160092059`"}]},
       {
        RowBox[{"-", "0.001776874372931253`"}], "0.4934107013328074`", 
        RowBox[{"-", "0.1512153937648149`"}]},
       {
        RowBox[{"-", "0.2100529160092059`"}], 
        RowBox[{"-", "0.1512153937648149`"}], "0.1624441711726413`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.6067035989097094`", "0.17071639734008576`", 
        RowBox[{"-", "0.1480353096369751`"}]},
       {"0.17071639734008576`", "0.1387523481051603`", "0.16972739321171246`"},
       {
        RowBox[{"-", "0.1480353096369751`"}], "0.16972739321171246`", 
        "0.2545440529851305`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.4110739243757657`", "0.05535795356090642`", "0.250123525717877`"},
       {"0.05535795356090642`", "0.40470787392949914`", 
        "0.18229187726745968`"},
       {"0.250123525717877`", "0.18229187726745968`", "0.18421820169473518`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.432019325679969`", 
        RowBox[{"-", "0.13641396172327078`"}], 
        RowBox[{"-", "0.33186114636333974`"}]},
       {
        RowBox[{"-", "0.13641396172327078`"}], "0.2021249169300881`", 
        RowBox[{"-", "0.18938336452815155`"}]},
       {
        RowBox[{"-", "0.33186114636333974`"}], 
        RowBox[{"-", "0.18938336452815155`"}], "0.3658557573899429`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.5285954703243055`", "0.3942084877949816`", 
        "0.09494226296282213`"},
       {"0.3942084877949816`", "0.4702272907631357`", 
        RowBox[{"-", "0.08677692072540047`"}]},
       {"0.09494226296282213`", 
        RowBox[{"-", "0.08677692072540047`"}], "0.0011772389125589136`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.3785181617430675`", 
        RowBox[{"-", "0.0034385628511586636`"}], "0.17548275018382709`"},
       {
        RowBox[{"-", "0.0034385628511586636`"}], "0.5530499128229229`", 
        RowBox[{"-", "0.04168035650197905`"}]},
       {"0.17548275018382709`", 
        RowBox[{"-", "0.04168035650197905`"}], "0.0684319254340094`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.025623086119182237`", "0.12450217797432403`", 
        "0.08380113391579291`"},
       {"0.12450217797432403`", "0.6128257378306666`", 
        "0.3264772121059458`"},
       {"0.08380113391579291`", "0.3264772121059458`", "0.3615511760501513`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.05845493989882872`", 
        RowBox[{"-", "0.17001649573098887`"}], "0.13701092513334995`"},
       {
        RowBox[{"-", "0.17001649573098887`"}], "0.6777347055400456`", 
        RowBox[{"-", "0.3414735101836157`"}]},
       {"0.13701092513334995`", 
        RowBox[{"-", "0.3414735101836157`"}], "0.2638103545611256`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.40285778106688963`", 
        RowBox[{"-", "0.03397540637168553`"}], 
        RowBox[{"-", "0.11181856965364204`"}]},
       {
        RowBox[{"-", "0.03397540637168553`"}], "0.5312812988934903`", 
        RowBox[{"-", "0.19807936317497613`"}]},
       {
        RowBox[{"-", "0.11181856965364204`"}], 
        RowBox[{"-", "0.19807936317497613`"}], "0.06586092003962003`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.910479642624395*^9, 3.910479668869564*^9}, 
   3.910482908838921*^9, 3.910483153425756*^9, 3.9104833562241783`*^9, 
   3.9126684378831253`*^9, 3.912668803887331*^9, 3.9128480091299257`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"a85c82b5-6227-41fd-9933-993030fcb239"]
}, Open  ]],

Cell["Show the generated probability vectors:", "Text",
 CellChangeTimes->{{3.910479774627222*^9, 3.9104797798143044`*^9}, {
   3.910479817408772*^9, 3.910479820211094*^9}, 3.9104812836357603`*^9, {
   3.910483144899822*^9, 3.910483171039445*^9}, {3.9126685029289722`*^9, 
   3.9126685065821743`*^9}},ExpressionUUID->"d7a71970-3d52-4691-81fd-\
37dbea2ad318"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NMvList", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "//", "MatrixForm"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "NMvList", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.910479646874769*^9, 3.910479668393152*^9}, {
  3.9104831528548937`*^9, 3.910483163790183*^9}, {3.912668449998728*^9, 
  3.91266845459976*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"94d68928-5dcb-451b-8371-3c275723fa2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.7754509706235098`"},
        {"0.09865319458064964`"},
        {"0.12589583479584077`"},
        {"0.6901427294751424`"},
        {"0.2830297260702631`"},
        {"0.026827544454594593`"},
        {"0.0075777333281178`"},
        {"0.14514564592231755`"},
        {"0.8472766207495648`"},
        {"0.4370520826020797`"},
        {"0.4370520826020797`"},
        {"0.12589583479584077`"},
        {"0.4865862277727028`"},
        {"0.4865862277727028`"},
        {"0.026827544454594593`"},
        {"0.07636168962521768`"},
        {"0.07636168962521768`"},
        {"0.8472766207495648`"},
        {"0.026827544454594593`"},
        {"0.8472766207495648`"},
        {"0.12589583479584077`"},
        {"0.12589583479584077`"},
        {"0.026827544454594593`"},
        {"0.8472766207495648`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.42055478878661073`"},
        {"0.41700104004074817`"},
        {"0.1624441711726413`"},
        {"0.4633475653428023`"},
        {"0.043241733324390505`"},
        {"0.4934107013328074`"},
        {"0.47914283001753927`"},
        {"0.17671204248790945`"},
        {"0.3441451274945515`"},
        {"0.41877791441367945`"},
        {"0.41877791441367945`"},
        {"0.1624441711726413`"},
        {"0.2532946493335964`"},
        {"0.2532946493335964`"},
        {"0.4934107013328074`"},
        {"0.32792743625272436`"},
        {"0.32792743625272436`"},
        {"0.3441451274945515`"},
        {"0.4934107013328074`"},
        {"0.3441451274945515`"},
        {"0.1624441711726413`"},
        {"0.1624441711726413`"},
        {"0.4934107013328074`"},
        {"0.3441451274945515`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.20201157616734908`"},
        {"0.5434443708475206`"},
        {"0.2545440529851305`"},
        {"0.5786591355843951`"},
        {"0.28258851631044485`"},
        {"0.1387523481051603`"},
        {"0.02692080733343294`"},
        {"0.36637559375685785`"},
        {"0.6067035989097094`"},
        {"0.3727279735074348`"},
        {"0.3727279735074348`"},
        {"0.2545440529851305`"},
        {"0.43062382594741994`"},
        {"0.43062382594741994`"},
        {"0.1387523481051603`"},
        {"0.1966482005451454`"},
        {"0.1966482005451454`"},
        {"0.6067035989097094`"},
        {"0.1387523481051603`"},
        {"0.6067035989097094`"},
        {"0.2545440529851305`"},
        {"0.2545440529851305`"},
        {"0.1387523481051603`"},
        {"0.6067035989097094`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.352532945591726`"},
        {"0.46324885271353883`"},
        {"0.18421820169473518`"},
        {"0.04752253731737344`"},
        {"0.5477695887531274`"},
        {"0.40470787392949914`"},
        {"0.11217116054465748`"},
        {"0.47675491507957685`"},
        {"0.4110739243757657`"},
        {"0.40789089915263244`"},
        {"0.40789089915263244`"},
        {"0.18421820169473518`"},
        {"0.29764606303525043`"},
        {"0.29764606303525043`"},
        {"0.40470787392949914`"},
        {"0.29446303781211713`"},
        {"0.29446303781211713`"},
        {"0.4110739243757657`"},
        {"0.40470787392949914`"},
        {"0.4110739243757657`"},
        {"0.18421820169473518`"},
        {"0.18421820169473518`"},
        {"0.40470787392949914`"},
        {"0.4110739243757657`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.4534860830282993`"},
        {"0.1806581595817578`"},
        {"0.3658557573899429`"},
        {"0.7307986878982957`"},
        {"0.0670763951716162`"},
        {"0.2021249169300881`"},
        {"0.47337370168816706`"},
        {"0.09460697263186396`"},
        {"0.432019325679969`"},
        {"0.31707212130502854`"},
        {"0.31707212130502854`"},
        {"0.3658557573899429`"},
        {"0.398937541534956`"},
        {"0.398937541534956`"},
        {"0.2021249169300881`"},
        {"0.28399033716001554`"},
        {"0.28399033716001554`"},
        {"0.432019325679969`"},
        {"0.2021249169300881`"},
        {"0.432019325679969`"},
        {"0.3658557573899429`"},
        {"0.3658557573899429`"},
        {"0.2021249169300881`"},
        {"0.432019325679969`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.10520289274873904`"},
        {"0.8936198683387022`"},
        {"0.0011772389125589136`"},
        {"0.16994409165561009`"},
        {"0.3598286175812544`"},
        {"0.4702272907631357`"},
        {"0.3224791855632478`"},
        {"0.14892534411244682`"},
        {"0.5285954703243055`"},
        {"0.4994113805437206`"},
        {"0.4994113805437206`"},
        {"0.0011772389125589136`"},
        {"0.26488635461843224`"},
        {"0.26488635461843224`"},
        {"0.4702272907631357`"},
        {"0.2357022648378473`"},
        {"0.2357022648378473`"},
        {"0.5285954703243055`"},
        {"0.4702272907631357`"},
        {"0.5285954703243055`"},
        {"0.0011772389125589136`"},
        {"0.0011772389125589136`"},
        {"0.4702272907631357`"},
        {"0.5285954703243055`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.46922260013415384`"},
        {"0.4623454744318366`"},
        {"0.0684319254340094`"},
        {"0.047992293404711374`"},
        {"0.3989577937723655`"},
        {"0.5530499128229229`"},
        {"0.35242127563044523`"},
        {"0.2690605626264871`"},
        {"0.3785181617430675`"},
        {"0.4657840372829952`"},
        {"0.4657840372829952`"},
        {"0.0684319254340094`"},
        {"0.22347504358853845`"},
        {"0.22347504358853845`"},
        {"0.5530499128229229`"},
        {"0.3107409191284662`"},
        {"0.3107409191284662`"},
        {"0.3785181617430675`"},
        {"0.5530499128229229`"},
        {"0.3785181617430675`"},
        {"0.0684319254340094`"},
        {"0.0684319254340094`"},
        {"0.5530499128229229`"},
        {"0.3785181617430675`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.1947222340006004`"},
        {"0.44372658994924846`"},
        {"0.3615511760501513`"},
        {"0.10978599716887386`"},
        {"0.27738826500045966`"},
        {"0.6128257378306666`"},
        {"0.16071124483446314`"},
        {"0.8136656690463548`"},
        {"0.025623086119182237`"},
        {"0.31922441197492446`"},
        {"0.31922441197492446`"},
        {"0.3615511760501513`"},
        {"0.19358713108466677`"},
        {"0.19358713108466677`"},
        {"0.6128257378306666`"},
        {"0.48718845694040896`"},
        {"0.48718845694040896`"},
        {"0.025623086119182237`"},
        {"0.6128257378306666`"},
        {"0.025623086119182237`"},
        {"0.3615511760501513`"},
        {"0.3615511760501513`"},
        {"0.6128257378306666`"},
        {"0.025623086119182237`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.538111318450426`"},
        {"0.19807832698844827`"},
        {"0.2638103545611256`"},
        {"0.02412172209662722`"},
        {"0.2981435723633271`"},
        {"0.6777347055400456`"},
        {"0.8122460402342013`"},
        {"0.12929901986696987`"},
        {"0.05845493989882872`"},
        {"0.36809482271943716`"},
        {"0.36809482271943716`"},
        {"0.2638103545611256`"},
        {"0.16113264722997717`"},
        {"0.16113264722997717`"},
        {"0.6777347055400456`"},
        {"0.4707725300505856`"},
        {"0.4707725300505856`"},
        {"0.05845493989882872`"},
        {"0.6777347055400456`"},
        {"0.05845493989882872`"},
        {"0.2638103545611256`"},
        {"0.2638103545611256`"},
        {"0.6777347055400456`"},
        {"0.05845493989882872`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.5010449463518755`"},
        {"0.43309413360850446`"},
        {"0.06586092003962003`"},
        {"0.34617792020689686`"},
        {"0.12254078089961282`"},
        {"0.5312812988934903`"},
        {"0.4966504726415313`"},
        {"0.10049174629157906`"},
        {"0.40285778106688963`"},
        {"0.46706953998018996`"},
        {"0.46706953998018996`"},
        {"0.06586092003962003`"},
        {"0.23435935055325482`"},
        {"0.23435935055325482`"},
        {"0.5312812988934903`"},
        {"0.2985711094665552`"},
        {"0.2985711094665552`"},
        {"0.40285778106688963`"},
        {"0.5312812988934903`"},
        {"0.40285778106688963`"},
        {"0.06586092003962003`"},
        {"0.06586092003962003`"},
        {"0.5312812988934903`"},
        {"0.40285778106688963`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.910483164310495*^9, 3.910483358356348*^9, 
  3.912668455899476*^9, 3.912668546538137*^9, 3.9126688058710957`*^9, 
  3.91284800914295*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"96effa33-9ce2-42dc-9792-26a27c8efe0f"]
}, Open  ]],

Cell["Evaluate the degree of the NM violation:", "Text",
 CellChangeTimes->{{3.910479774627222*^9, 3.910479807945409*^9}, {
  3.910481299308682*^9, 3.910481332992971*^9}, {3.910481786250884*^9, 
  3.910481850373863*^9}, {3.910482416253593*^9, 3.910482422761791*^9}, {
  3.910482484811071*^9, 3.9104824955768213`*^9}, {3.9126685395894947`*^9, 
  3.9126685397294617`*^9}},ExpressionUUID->"45d17103-23a3-4e08-bc7f-\
8252e9381c09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"\[Gamma]", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]vecs", "[", "NMvList", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
     RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", 
      RowBox[{
       RowBox[{"\[Gamma]vecs", "[", "NMvList", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.910482641120987*^9, 3.9104826426291924`*^9}, {
  3.910482716685998*^9, 3.910482740263464*^9}, {3.912668405731628*^9, 
  3.912668411724728*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"4d7d8ca7-89ee-4509-abaf-b1dc1a676944"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.09482950618534147`", ",", "0.008757292280909823`", ",", 
   "0.05884847146744221`", ",", "0.016412706244054664`", ",", 
   "0.10831900201355626`", ",", "0.08556867759847009`", ",", 
   "0.013056277925474813`", ",", "0.0012577444891395118`", ",", 
   "0.010084679162490673`", ",", "0.03791393306723645`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9104827275184402`*^9, 3.910482762654717*^9}, 
   3.910482908898121*^9, 3.910483350874737*^9, 3.912668412497602*^9, 
   3.912668550033589*^9, 3.9126688092126837`*^9, 3.912848009164895*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"4806377a-c4e7-4a1d-adf5-2429af4dbf36"]
}, Open  ]],

Cell["Sort from least to most NM-violating:", "Text",
 CellChangeTimes->{{3.910479774627222*^9, 3.910479807945409*^9}, {
  3.910481299308682*^9, 3.910481332992971*^9}, {3.910481786250884*^9, 
  3.910481850373863*^9}, {3.910482416253593*^9, 3.910482422761791*^9}, {
  3.910482484811071*^9, 3.9104824955768213`*^9}, {3.9126685395894947`*^9, 
  3.91266857646811*^9}},ExpressionUUID->"19952df6-a287-44c8-b666-\
acfccb91e432"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SortBy", "[", 
  RowBox[{"%", ",", "Total"}], "]"}]], "Input",
 CellChangeTimes->{{3.910482765413012*^9, 3.910482765974247*^9}, {
  3.910482800049491*^9, 3.910482800197303*^9}, {3.910482842171336*^9, 
  3.910482847554431*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"a6e5c9a3-49b4-4728-b4c5-d44234323060"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0012577444891395118`", ",", "0.008757292280909823`", ",", 
   "0.010084679162490673`", ",", "0.013056277925474813`", ",", 
   "0.016412706244054664`", ",", "0.03791393306723645`", ",", 
   "0.05884847146744221`", ",", "0.08556867759847009`", ",", 
   "0.09482950618534147`", ",", "0.10831900201355626`"}], "}"}]], "Output",
 CellChangeTimes->{3.9104828484847937`*^9, 3.910482908904656*^9, 
  3.9104833528536587`*^9, 3.91266856118955*^9, 3.9126688110257998`*^9, 
  3.9128480091706753`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"6bb8e93d-3ee4-4c81-a5c3-b7c8de12e44e"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["[4] Evaluating the NM violation measure", "Chapter",
 CellChangeTimes->{{3.909436200546693*^9, 3.909436209874395*^9}, {
   3.9094536696647367`*^9, 3.909453674029413*^9}, {3.909458052126433*^9, 
   3.9094580527684107`*^9}, {3.912669144063768*^9, 3.912669167849093*^9}, {
   3.912755461028248*^9, 3.9127555193904543`*^9}, {3.9127555546926403`*^9, 
   3.9127555685055857`*^9}, 3.9127556241311073`*^9, {3.913023160198948*^9, 
   3.91302316021589*^9}, {3.913024341101737*^9, 3.913024348390463*^9}, 
   3.913024378809626*^9},ExpressionUUID->"2e0c95c1-b5c8-4e6d-a0e4-\
15542b38bc96"],

Cell[CellGroupData[{

Cell["[4.1] Generating histogram data", "Section",
 CellChangeTimes->{{3.913374356446274*^9, 
  3.91337436704274*^9}},ExpressionUUID->"89531dd9-aa65-4071-beab-\
76e8a35d3b37"],

Cell[CellGroupData[{

Cell["Generate 100,000 NM-violating probability vectors for N=2", \
"Subsubsection",
 CellChangeTimes->{{3.913024361152204*^9, 3.9130243617104673`*^9}, {
  3.913358756460251*^9, 3.913358756641714*^9}, {3.913374417013289*^9, 
  3.913374417094078*^9}, {3.913374837529975*^9, 3.913374837598302*^9}, {
  3.9143819430626507`*^9, 
  3.914381952782362*^9}},ExpressionUUID->"beca8104-1b0e-4023-85f0-\
4ad8cce4284b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMvList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";", 
  RowBox[{"\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "=", "0"}], 
  ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMvTDG", "[", 
   RowBox[{"2", ",", "100000"}], "]"}], "]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Total number of generated vectors: \>\"", ",", " ", 
   "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"N2NMvList", "=", "NMvList"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.910483621114415*^9, 3.9104839891474237`*^9, {3.91225175770501*^9, 
   3.912251757833654*^9}, {3.9122528931301413`*^9, 3.912252894132311*^9}, {
   3.912668830939842*^9, 3.9126688825282907`*^9}, 3.912848050763171*^9, 
   3.91284823926624*^9, {3.9128506533863*^9, 3.912850653457776*^9}, {
   3.912851256927294*^9, 3.912851257060966*^9}, 3.9128533577981853`*^9, {
   3.913019611941432*^9, 3.913019618630384*^9}, {3.9130227710563183`*^9, 
   3.913022773470311*^9}, {3.913023048718837*^9, 3.913023096419396*^9}, {
   3.913023128790296*^9, 3.9130231379479713`*^9}, {3.913358778782126*^9, 
   3.913358787709393*^9}, {3.9133744252860823`*^9, 3.91337443256503*^9}, {
   3.913374634476364*^9, 3.913374669734806*^9}, {3.913374745988554*^9, 
   3.913374748148232*^9}, {3.913374848435338*^9, 3.9133748810937634`*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->"In[7]:=",ExpressionUUID->"e6fc03b3-eef2-4ee4-aa16-2ea2524b8ca3"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"10%, Vectors generated:\"\>", "\[InvisibleSpace]", "346985"}],
  SequenceForm["10%, Vectors generated:", 346985],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375152307241*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"49a0a28a-0ca9-4275-83cd-6d0b6fad28e1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"20%, Vectors generated:\"\>", "\[InvisibleSpace]", "694441"}],
  SequenceForm["20%, Vectors generated:", 694441],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375171992165*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"5baa752e-2dc7-4555-9bee-821b90047cd1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"30%, Vectors generated:\"\>", "\[InvisibleSpace]", "1043386"}],
  
  SequenceForm["30%, Vectors generated:", 1043386],
  Editable->False]], "Print",
 CellChangeTimes->{3.9133751922286253`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"ccfa1c70-cca8-43a6-8f98-f059104303de"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"40%, Vectors generated:\"\>", "\[InvisibleSpace]", "1395187"}],
  
  SequenceForm["40%, Vectors generated:", 1395187],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375213423731*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"bbaa8802-299a-4471-97bb-8a63a292f5b5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"50%, Vectors generated:\"\>", "\[InvisibleSpace]", "1744797"}],
  
  SequenceForm["50%, Vectors generated:", 1744797],
  Editable->False]], "Print",
 CellChangeTimes->{3.9133752348452587`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"e6271980-bca4-4443-90a6-fda5a75880db"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"60%, Vectors generated:\"\>", "\[InvisibleSpace]", "2086522"}],
  
  SequenceForm["60%, Vectors generated:", 2086522],
  Editable->False]], "Print",
 CellChangeTimes->{3.9133752570494747`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"6ea0b507-08d9-45c4-a3cf-416b6deb4d5e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"70%, Vectors generated:\"\>", "\[InvisibleSpace]", "2432014"}],
  
  SequenceForm["70%, Vectors generated:", 2432014],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375280274935*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"e4455658-10ea-492e-8cb5-e8ec3e532cf9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"80%, Vectors generated:\"\>", "\[InvisibleSpace]", "2773597"}],
  
  SequenceForm["80%, Vectors generated:", 2773597],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375304498795*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"c7762baf-e413-423c-92c4-5752c41f7edc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"90%, Vectors generated:\"\>", "\[InvisibleSpace]", "3119987"}],
  
  SequenceForm["90%, Vectors generated:", 3119987],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375330713925*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"f104b76e-f20c-4e35-9739-868ec5002274"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"226.218787`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913375359323906*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"e4c7f320-d5ed-436d-80db-52c7a4221b6c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total number of generated vectors: \"\>", "\[InvisibleSpace]", 
   "3469830"}],
  SequenceForm["Total number of generated vectors: ", 3469830],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375359329648*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"76f853e3-97ec-4dff-a890-2a50bb30afeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"N2\[Gamma]s", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{
        RowBox[{"N2NMvList", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "N2NMvList", "]"}]}], "}"}]}], "]"}]}], ";", 
   RowBox[{"N2\[Gamma]mean", "=", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"Mean", "[", "N2\[Gamma]s", "]"}], ",", "4"}], "]"}]}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.912853418936201*^9, 3.912853434566123*^9}, {
  3.912854743515724*^9, 3.912854746481557*^9}, {3.9128551723758707`*^9, 
  3.912855179879786*^9}, {3.91285534451293*^9, 3.9128553539298077`*^9}, {
  3.912858425281423*^9, 3.9128584337586*^9}, {3.913358880397889*^9, 
  3.913358880632045*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"3b4ea13d-9b56-449a-b68b-168b7682b61f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"464.331991`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913375834194941*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"b098feb5-33db-4d7d-888a-36cffcfbdda9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate 100,000 NM-violating probability vectors for N=3", \
"Subsubsection",
 CellChangeTimes->{{3.913024361152204*^9, 3.9130243617104673`*^9}, {
  3.913358756460251*^9, 3.913358756641714*^9}, {3.913374417013289*^9, 
  3.913374417094078*^9}, {3.913374837529975*^9, 3.913374837598302*^9}, {
  3.9143819430626507`*^9, 
  3.9143819746134777`*^9}},ExpressionUUID->"9a135e23-5edb-4f4c-8c47-\
440470550cc7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMvList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";", 
  RowBox[{"\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "=", "0"}], 
  ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMvTDG", "[", 
   RowBox[{"3", ",", "100000"}], "]"}], "]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Total number of generated vectors: \>\"", ",", " ", 
   "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"N3NMvList", "=", "NMvList"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.910483621114415*^9, 3.9104839891474237`*^9, {3.91225175770501*^9, 
   3.912251757833654*^9}, {3.9122528931301413`*^9, 3.912252894132311*^9}, {
   3.912668830939842*^9, 3.9126688825282907`*^9}, 3.912848050763171*^9, 
   3.91284823926624*^9, {3.9128506533863*^9, 3.912850653457776*^9}, {
   3.912851256927294*^9, 3.912851257060966*^9}, 3.9128533577981853`*^9, {
   3.913019611941432*^9, 3.913019618630384*^9}, {3.9130227710563183`*^9, 
   3.913022773470311*^9}, {3.913023048718837*^9, 3.913023096419396*^9}, {
   3.913023128790296*^9, 3.9130231379479713`*^9}, {3.913358778782126*^9, 
   3.913358787709393*^9}, {3.9133744252860823`*^9, 3.91337443256503*^9}, {
   3.913374634476364*^9, 3.913374669734806*^9}, {3.913374745988554*^9, 
   3.913374748148232*^9}, {3.913374848435338*^9, 3.9133748810937634`*^9}, {
   3.91337990436554*^9, 3.9133799071618958`*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->"In[22]:=",ExpressionUUID->"e7928351-988f-48f9-9e5f-740791639b00"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"10%, Vectors generated:\"\>", "\[InvisibleSpace]", "196419"}],
  SequenceForm["10%, Vectors generated:", 196419],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375152307241*^9, 3.913379933765604*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"9175bf15-9c2e-4620-ad06-4569f08facf6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"20%, Vectors generated:\"\>", "\[InvisibleSpace]", "390632"}],
  SequenceForm["20%, Vectors generated:", 390632],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375152307241*^9, 3.913379956481238*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"96f8249f-7096-4024-a148-32bd93a02921"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"30%, Vectors generated:\"\>", "\[InvisibleSpace]", "581310"}],
  SequenceForm["30%, Vectors generated:", 581310],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375152307241*^9, 3.913379978361408*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"b1a33919-e14d-47ac-a3ad-e163d20c0e5b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"40%, Vectors generated:\"\>", "\[InvisibleSpace]", "781515"}],
  SequenceForm["40%, Vectors generated:", 781515],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375152307241*^9, 3.913380003454382*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"a5f29f4c-798c-4ef2-8f9e-eebeba0062f4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"50%, Vectors generated:\"\>", "\[InvisibleSpace]", "977578"}],
  SequenceForm["50%, Vectors generated:", 977578],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375152307241*^9, 3.9133800344113073`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"c42b124c-a829-47fe-83de-135a512b7f59"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"60%, Vectors generated:\"\>", "\[InvisibleSpace]", "1173974"}],
  
  SequenceForm["60%, Vectors generated:", 1173974],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375152307241*^9, 3.913380067365596*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"ce887fca-f376-4929-9b7a-ed7ffec80428"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"70%, Vectors generated:\"\>", "\[InvisibleSpace]", "1367387"}],
  
  SequenceForm["70%, Vectors generated:", 1367387],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375152307241*^9, 3.913380101849382*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"8f129b66-6477-41f0-9ef0-b057be80dfdc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"80%, Vectors generated:\"\>", "\[InvisibleSpace]", "1568033"}],
  
  SequenceForm["80%, Vectors generated:", 1568033],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375152307241*^9, 3.913380131949541*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"ae4551b8-f678-4775-a20a-c9f19b096011"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"90%, Vectors generated:\"\>", "\[InvisibleSpace]", "1763412"}],
  
  SequenceForm["90%, Vectors generated:", 1763412],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375152307241*^9, 3.9133801605566187`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"801e64b3-0c71-4600-bfc9-26d371ee1e88"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"279.662411`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913375359323906*^9, 3.9133801910801497`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f8698d6d-0093-486b-81cf-2340699c1cb3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total number of generated vectors: \"\>", "\[InvisibleSpace]", 
   "1958243"}],
  SequenceForm["Total number of generated vectors: ", 1958243],
  Editable->False]], "Print",
 CellChangeTimes->{3.913375152307241*^9, 3.913380191086541*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"3a40cbbd-3591-47f7-95bf-ca563f0546d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"N3\[Gamma]s", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{
        RowBox[{"N3NMvList", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "N3NMvList", "]"}]}], "}"}]}], "]"}]}], ";", 
   RowBox[{"N3\[Gamma]mean", "=", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"Mean", "[", "N3\[Gamma]s", "]"}], ",", "4"}], "]"}]}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.912853418936201*^9, 3.912853434566123*^9}, {
  3.912854743515724*^9, 3.912854746481557*^9}, {3.9128551723758707`*^9, 
  3.912855179879786*^9}, {3.91285534451293*^9, 3.9128553539298077`*^9}, {
  3.912858425281423*^9, 3.9128584337586*^9}, {3.913358880397889*^9, 
  3.913358880632045*^9}, {3.913379916711431*^9, 3.913379925329311*^9}, {
  3.913379991157445*^9, 3.913379991187557*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"90b5e8fc-3ec3-4011-8658-ac87607fc457"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"329.643895`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913375834194941*^9, 3.9133805396444063`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"94de9edf-9011-402b-958d-0f125449b305"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate 100,000 NM-violating probability vectors for N=4", \
"Subsubsection",
 CellChangeTimes->{{3.913024361152204*^9, 3.9130243617104673`*^9}, {
  3.913358756460251*^9, 3.913358756641714*^9}, {3.913374417013289*^9, 
  3.913374417094078*^9}, {3.913374837529975*^9, 3.913374837598302*^9}, {
  3.9143819430626507`*^9, 
  3.914381981121759*^9}},ExpressionUUID->"9c23e981-d3b1-44fd-b1ea-\
86e4306cd6c5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMvList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";", 
  RowBox[{"\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "=", "0"}], 
  ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMvTDG", "[", 
   RowBox[{"4", ",", "100000"}], "]"}], "]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Total number of generated vectors: \>\"", ",", " ", 
   "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"N4NMvList", "=", "NMvList"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.910483621114415*^9, 3.9104839891474237`*^9, {3.91225175770501*^9, 
   3.912251757833654*^9}, {3.9122528931301413`*^9, 3.912252894132311*^9}, {
   3.912668830939842*^9, 3.9126688825282907`*^9}, 3.912848050763171*^9, 
   3.91284823926624*^9, {3.9128506533863*^9, 3.912850653457776*^9}, {
   3.912851256927294*^9, 3.912851257060966*^9}, 3.9128533577981853`*^9, {
   3.913019611941432*^9, 3.913019618630384*^9}, {3.9130227710563183`*^9, 
   3.913022773470311*^9}, {3.913023048718837*^9, 3.913023096419396*^9}, {
   3.913023128790296*^9, 3.9130231379479713`*^9}, {3.913358778782126*^9, 
   3.913358787709393*^9}, {3.9133744252860823`*^9, 3.91337443256503*^9}, {
   3.913374634476364*^9, 3.913374669734806*^9}, {3.913374745988554*^9, 
   3.913374748148232*^9}, {3.913374848435338*^9, 3.913374882854883*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->"In[12]:=",ExpressionUUID->"9d75e198-f9d1-4f00-901e-7588cf6165c2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"10%, Vectors generated:\"\>", "\[InvisibleSpace]", "484350"}],
  SequenceForm["10%, Vectors generated:", 484350],
  Editable->False]], "Print",
 CellChangeTimes->{3.913376090669846*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"c9f1b447-7407-4b60-846c-4bf97551e9ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"20%, Vectors generated:\"\>", "\[InvisibleSpace]", "966342"}],
  SequenceForm["20%, Vectors generated:", 966342],
  Editable->False]], "Print",
 CellChangeTimes->{3.91337620636796*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"6b0a242c-03ad-4690-9bcc-fc43534f8d02"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"30%, Vectors generated:\"\>", "\[InvisibleSpace]", "1439530"}],
  
  SequenceForm["30%, Vectors generated:", 1439530],
  Editable->False]], "Print",
 CellChangeTimes->{3.9133763174167643`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"a7ef9ec0-3c49-4ee5-973b-133ba1cd0f09"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"40%, Vectors generated:\"\>", "\[InvisibleSpace]", "1909474"}],
  
  SequenceForm["40%, Vectors generated:", 1909474],
  Editable->False]], "Print",
 CellChangeTimes->{3.913376430365553*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"d1e9b04d-9913-4061-b220-0aa5676c908f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"50%, Vectors generated:\"\>", "\[InvisibleSpace]", "2390484"}],
  
  SequenceForm["50%, Vectors generated:", 2390484],
  Editable->False]], "Print",
 CellChangeTimes->{3.9133765512066927`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"8560ff68-797a-40ef-befc-883a455ad0af"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"60%, Vectors generated:\"\>", "\[InvisibleSpace]", "2866180"}],
  
  SequenceForm["60%, Vectors generated:", 2866180],
  Editable->False]], "Print",
 CellChangeTimes->{3.913376668666664*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"37727610-e2f7-4db5-b4fb-047a4c9b0363"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"70%, Vectors generated:\"\>", "\[InvisibleSpace]", "3344062"}],
  
  SequenceForm["70%, Vectors generated:", 3344062],
  Editable->False]], "Print",
 CellChangeTimes->{3.913376782073708*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"669407c4-efd1-4746-bf30-7bead380f455"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"80%, Vectors generated:\"\>", "\[InvisibleSpace]", "3823974"}],
  
  SequenceForm["80%, Vectors generated:", 3823974],
  Editable->False]], "Print",
 CellChangeTimes->{3.913376905774295*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"323492e4-eb83-4930-b6b2-5fb0316eb4e6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"90%, Vectors generated:\"\>", "\[InvisibleSpace]", "4297901"}],
  
  SequenceForm["90%, Vectors generated:", 4297901],
  Editable->False]], "Print",
 CellChangeTimes->{3.913377025189748*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"0b948419-a29e-4238-8095-d263f897752b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1154.904643`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9133771365509043`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"dcd923fd-b5d2-4580-87bc-8ab20c327667"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total number of generated vectors: \"\>", "\[InvisibleSpace]", 
   "4773609"}],
  SequenceForm["Total number of generated vectors: ", 4773609],
  Editable->False]], "Print",
 CellChangeTimes->{3.913377136555317*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"39eeb4e2-c383-4715-9ebf-c59df1ffce24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"N4\[Gamma]s", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{
        RowBox[{"N4NMvList", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "N4NMvList", "]"}]}], "}"}]}], "]"}]}], ";", 
   RowBox[{"N4\[Gamma]mean", "=", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"Mean", "[", "N4\[Gamma]s", "]"}], ",", "4"}], "]"}]}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.912853418936201*^9, 3.912853434566123*^9}, {
  3.912854743515724*^9, 3.912854746481557*^9}, {3.9128551723758707`*^9, 
  3.912855179879786*^9}, {3.91285534451293*^9, 3.9128553539298077`*^9}, {
  3.912858425281423*^9, 3.9128584337586*^9}, {3.913358880397889*^9, 
  3.913358880632045*^9}, {3.913375053288334*^9, 3.9133750642576427`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"5f30d294-d90c-41cd-bc83-ec674b6f6238"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"334.124153`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9133774707070913`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"e7ed94a1-5f5a-43e9-81a0-d29a48b2413f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate 100,000 NM-violating probability vectors for N=6", \
"Subsubsection",
 CellChangeTimes->{{3.913024361152204*^9, 3.9130243617104673`*^9}, {
  3.913358756460251*^9, 3.913358756641714*^9}, {3.913374417013289*^9, 
  3.913374417094078*^9}, {3.913374837529975*^9, 3.913374837598302*^9}, {
  3.9143819430626507`*^9, 3.914381952782362*^9}, {3.914381987320526*^9, 
  3.914381987363802*^9}},ExpressionUUID->"00a405bd-f568-424d-b92d-\
d0449789a1c2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMvList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";", 
  RowBox[{"\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "=", "0"}], 
  ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMvTDG", "[", 
   RowBox[{"6", ",", "100000"}], "]"}], "]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Total number of generated vectors: \>\"", ",", " ", 
   "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"N6NMvList", "=", "NMvList"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.910483621114415*^9, 3.9104839891474237`*^9, {3.91225175770501*^9, 
   3.912251757833654*^9}, {3.9122528931301413`*^9, 3.912252894132311*^9}, {
   3.912668830939842*^9, 3.9126688825282907`*^9}, 3.912848050763171*^9, 
   3.91284823926624*^9, {3.9128506533863*^9, 3.912850653457776*^9}, {
   3.912851256927294*^9, 3.912851257060966*^9}, 3.9128533577981853`*^9, {
   3.913019611941432*^9, 3.913019618630384*^9}, {3.9130227710563183`*^9, 
   3.913022773470311*^9}, {3.913023048718837*^9, 3.913023096419396*^9}, {
   3.913023128790296*^9, 3.9130231379479713`*^9}, {3.913358778782126*^9, 
   3.913358787709393*^9}, {3.9133744252860823`*^9, 3.91337443256503*^9}, {
   3.913374634476364*^9, 3.913374669734806*^9}, {3.913374745988554*^9, 
   3.913374748148232*^9}, {3.913374848435338*^9, 3.91337489415912*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->
  "In[100]:=",ExpressionUUID->"563c7f24-e27f-4854-8427-8253cb778828"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"10%, Vectors generated:\"\>", "\[InvisibleSpace]", "9623137"}],
  
  SequenceForm["10%, Vectors generated:", 9623137],
  Editable->False]], "Print",
 CellChangeTimes->{3.9133892027406797`*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"61564658-091b-45f5-afad-6a84c67558de"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"20%, Vectors generated:\"\>", "\[InvisibleSpace]", "19471278"}],
  SequenceForm["20%, Vectors generated:", 19471278],
  Editable->False]], "Print",
 CellChangeTimes->{3.9133967009145613`*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"5d1579c8-2b83-4439-b70e-8f0d5b373bca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"30%, Vectors generated:\"\>", "\[InvisibleSpace]", "29106932"}],
  SequenceForm["30%, Vectors generated:", 29106932],
  Editable->False]], "Print",
 CellChangeTimes->{3.9134036945345573`*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"fb51ccf5-cc05-4b6b-8426-15fbfb7ffd9a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"40%, Vectors generated:\"\>", "\[InvisibleSpace]", "38589715"}],
  SequenceForm["40%, Vectors generated:", 38589715],
  Editable->False]], "Print",
 CellChangeTimes->{3.9134102713498497`*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"2b6bf9f9-cc3b-4d0b-b45b-62d0d68cbe6e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"50%, Vectors generated:\"\>", "\[InvisibleSpace]", "48006158"}],
  SequenceForm["50%, Vectors generated:", 48006158],
  Editable->False]], "Print",
 CellChangeTimes->{3.913416782543343*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"610b647a-603b-4e2f-8c95-5778a33cc2be"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"60%, Vectors generated:\"\>", "\[InvisibleSpace]", "57379267"}],
  SequenceForm["60%, Vectors generated:", 57379267],
  Editable->False]], "Print",
 CellChangeTimes->{3.913423274339716*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"ae89b78f-9385-4146-931e-5e735093e806"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"70%, Vectors generated:\"\>", "\[InvisibleSpace]", "66875179"}],
  SequenceForm["70%, Vectors generated:", 66875179],
  Editable->False]], "Print",
 CellChangeTimes->{3.9134298609047203`*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"149ad734-3af4-4778-93d8-81dd17eba1b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"80%, Vectors generated:\"\>", "\[InvisibleSpace]", "76316206"}],
  SequenceForm["80%, Vectors generated:", 76316206],
  Editable->False]], "Print",
 CellChangeTimes->{3.913437132099288*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"3ab8a8b3-8e4a-433c-bcb2-dd694d9e48f9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"90%, Vectors generated:\"\>", "\[InvisibleSpace]", "85963790"}],
  SequenceForm["90%, Vectors generated:", 85963790],
  Editable->False]], "Print",
 CellChangeTimes->{3.913445374893564*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"a3173cd3-f4a6-4355-816c-41c92f56320c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"69850.041412`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9134519895711107`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"0f449d0a-70d7-4eae-b3bf-57793b79aad4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total number of generated vectors: \"\>", "\[InvisibleSpace]", 
   "95459668"}],
  SequenceForm["Total number of generated vectors: ", 95459668],
  Editable->False]], "Print",
 CellChangeTimes->{3.913451989770116*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"7e9ef4c4-13c0-4571-b8ca-9d645454aa26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"N6\[Gamma]s", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{
        RowBox[{"N6NMvList", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "N6NMvList", "]"}]}], "}"}]}], "]"}]}], ";", 
   RowBox[{"N6\[Gamma]mean", "=", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"Mean", "[", "N6\[Gamma]s", "]"}], ",", "4"}], "]"}]}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.912853418936201*^9, 3.912853434566123*^9}, {
  3.912854743515724*^9, 3.912854746481557*^9}, {3.9128551723758707`*^9, 
  3.912855179879786*^9}, {3.91285534451293*^9, 3.9128553539298077`*^9}, {
  3.912858425281423*^9, 3.9128584337586*^9}, {3.913358880397889*^9, 
  3.913358880632045*^9}, {3.913375053288334*^9, 3.913375091507725*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"49dba586-c89e-49dd-b893-c621d9289e53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"398.594901`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9134579983431797`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"f4c16982-fde0-4ad9-9a45-9fa44f9d81b5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Generate NM-violating probability vectors for N=7 [evaluation aborted due to \
long computation time]\
\>", "Subsubsection",
 CellChangeTimes->{{3.913024361152204*^9, 3.9130243617104673`*^9}, {
  3.913358756460251*^9, 3.913358756641714*^9}, {3.913374417013289*^9, 
  3.913374417094078*^9}, {3.913374837529975*^9, 3.913374837598302*^9}, {
  3.9143819430626507`*^9, 3.914381952782362*^9}, {3.9143819941018353`*^9, 
  3.91438203917791*^9}},ExpressionUUID->"4900004c-9fe8-4c92-ab8f-\
427f691392de"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMvList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";", 
  RowBox[{"\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "=", "0"}], 
  ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMvTDG", "[", 
   RowBox[{"7", ",", "100000"}], "]"}], "]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Total number of generated vectors: \>\"", ",", " ", 
   "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"N7NMvList", "=", "NMvList"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.910483621114415*^9, 3.9104839891474237`*^9, {3.91225175770501*^9, 
   3.912251757833654*^9}, {3.9122528931301413`*^9, 3.912252894132311*^9}, {
   3.912668830939842*^9, 3.9126688825282907`*^9}, 3.912848050763171*^9, 
   3.91284823926624*^9, {3.9128506533863*^9, 3.912850653457776*^9}, {
   3.912851256927294*^9, 3.912851257060966*^9}, 3.9128533577981853`*^9, {
   3.913019611941432*^9, 3.913019618630384*^9}, {3.9130227710563183`*^9, 
   3.913022773470311*^9}, {3.913023048718837*^9, 3.913023096419396*^9}, {
   3.913023128790296*^9, 3.9130231379479713`*^9}, {3.913358778782126*^9, 
   3.913358787709393*^9}, {3.9133744252860823`*^9, 3.91337443256503*^9}, {
   3.913374634476364*^9, 3.913374669734806*^9}, {3.913374745988554*^9, 
   3.913374748148232*^9}, {3.913374848435338*^9, 3.91337489415912*^9}, {
   3.913463325516938*^9, 3.913463325657329*^9}, {3.9134637075085382`*^9, 
   3.913463707586749*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->
  "In[116]:=",ExpressionUUID->"a486f61b-e78f-4261-ba1f-25ddbdd29ae5"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.913739149609356*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"e96dd2c3-6484-4e55-b079-28c1c727bf2d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total number of generated vectors: \"\>", "\[InvisibleSpace]", 
   "27019566"}],
  SequenceForm["Total number of generated vectors: ", 27019566],
  Editable->False]], "Print",
 CellChangeTimes->{3.913739149651511*^9},
 CellLabel->
  "During evaluation of \
In[116]:=",ExpressionUUID->"f1c08c33-c0f6-41ef-8f23-48253a821b7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "NMvList", "]"}]], "Input",
 CellChangeTimes->{{3.9137391593819847`*^9, 3.913739160977077*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"0addf24c-29c6-4eba-97bd-d7c8ec27d29c"],

Cell[BoxData["4538"], "Output",
 CellChangeTimes->{3.913739161763253*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"d90a773f-ca58-4dcc-ae59-6c371c6f3104"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellLabel->
  "In[121]:=",ExpressionUUID->"2fb71e79-845d-42ae-8b30-0f718065189a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N7NMvList[4538].mx\>\"", ",", "NMvList"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.913739186750646*^9, 3.913739195029448*^9}, {
  3.913739238665989*^9, 3.913739240815405*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"f48668a2-0335-4ecb-a693-8f1aa8c5949d"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"N7\[Gamma]s", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{
        RowBox[{"N7NMvList", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "N7NMvList", "]"}]}], "}"}]}], "]"}]}], ";", 
   RowBox[{"N7\[Gamma]mean", "=", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"Mean", "[", "N7\[Gamma]s", "]"}], ",", "4"}], "]"}]}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.912853418936201*^9, 3.912853434566123*^9}, {
  3.912854743515724*^9, 3.912854746481557*^9}, {3.9128551723758707`*^9, 
  3.912855179879786*^9}, {3.91285534451293*^9, 3.9128553539298077`*^9}, {
  3.912858425281423*^9, 3.9128584337586*^9}, {3.913358880397889*^9, 
  3.913358880632045*^9}, {3.913375053288334*^9, 3.913375091507725*^9}, {
  3.913463719071506*^9, 
  3.9134637301267443`*^9}},ExpressionUUID->"4b9247e5-a9fc-41cc-819e-\
edec39435cb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export lists", "Subsubsection",
 CellChangeTimes->{{3.913024361152204*^9, 3.9130243617104673`*^9}, {
  3.913358756460251*^9, 3.913358756641714*^9}, {3.913374417013289*^9, 
  3.913374417094078*^9}, {3.913374837529975*^9, 3.913374837598302*^9}, {
  3.913374872556991*^9, 3.913374890441546*^9}, {3.913462982610034*^9, 
  3.913462994953085*^9}, {3.9134631509122*^9, 
  3.913463151829279*^9}},ExpressionUUID->"fdb7d554-d53e-4119-9bb4-\
505da889c286"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.908690601480736*^9, 3.908690611036413*^9}, {
  3.9087707182617407`*^9, 3.908770728366908*^9}, {3.909456857685276*^9, 
  3.909456873640235*^9}, {3.909459751477572*^9, 3.9094597579538097`*^9}, {
  3.9095293710148067`*^9, 3.909529371194326*^9}, {3.910484098292221*^9, 
  3.9104841038119926`*^9}, {3.910484204872611*^9, 3.910484237918084*^9}, {
  3.912670040010648*^9, 3.9126700512197943`*^9}, {3.91267021200352*^9, 
  3.9126702303245487`*^9}, {3.91268129363735*^9, 3.912681295537278*^9}, {
  3.9126875357609377`*^9, 3.912687551054615*^9}, {3.913462909213986*^9, 
  3.913462934187519*^9}, {3.91346302212702*^9, 3.913463022875766*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"f64133a1-8c1f-4773-85dd-f8b35f7388ef"],

Cell["Export lists of \[Gamma] values", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463168462963*^9}, {
  3.913463228784935*^9, 
  3.913463229780937*^9}},ExpressionUUID->"aab6b124-adb8-4091-8588-\
e6b98dc77356"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N2\[Gamma]s.mx\>\"", ",", "N2\[Gamma]s"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N3\[Gamma]s.mx\>\"", ",", "N3\[Gamma]s"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N4\[Gamma]s.mx\>\"", ",", "N4\[Gamma]s"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N6\[Gamma]s.mx\>\"", ",", "N6\[Gamma]s"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.913463029570057*^9},
 CellLabel->
  "In[108]:=",ExpressionUUID->"f66c58b6-39c7-453e-a238-8c89cb75d833"],

Cell[TextData[{
 "Export master lists including all probability tuples, density operators, \
and state vectors\n(",
 StyleBox["Note:",
  FontSlant->"Italic"],
 " Large file sizes for large N)"
}], "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}},ExpressionUUID->"f5fcfe14-9e3d-482e-9dc3-\
37693293dd6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N2NMvList.mx\>\"", ",", "N2NMvList"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N3NMvList.mx\>\"", ",", "N3NMvList"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N4NMvList.mx\>\"", ",", "N4NMvList"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N6NMvList.mx\>\"", ",", "N6NMvList"}], "]"}], ";"}]}], "Input",\

 CellChangeTimes->{{3.913463069637929*^9, 3.9134631013906593`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"318f1a69-7e58-401e-af3c-d70ae49b98d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["[4.2] Plotting histogram data", "Section",
 CellChangeTimes->{{3.913374356446274*^9, 3.91337436704274*^9}, {
  3.91337481169993*^9, 
  3.9133748323812513`*^9}},ExpressionUUID->"b6f7afa7-a10d-465c-9b73-\
a29767d647ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"66845923-aeb8-4789-9417-7e10f6bada41"],

Cell["Import lists of \[Gamma] values for N \[Element] {2,4,6}", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 
  3.914382104992938*^9}},ExpressionUUID->"942a7398-8abb-4426-bcd6-\
89e4423fe5e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N2\[Gamma]s", "=", 
   RowBox[{"Import", "[", "\"\<N2\[Gamma]s.mx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N4\[Gamma]s", "=", 
   RowBox[{"Import", "[", "\"\<N4\[Gamma]s.mx\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"N6\[Gamma]s", "=", 
   RowBox[{"Import", "[", "\"\<N6\[Gamma]s.mx\>\"", "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.913925197401449*^9, 3.913925197957809*^9}, {
  3.9139252392430058`*^9, 3.91392524894843*^9}, {3.913925428240979*^9, 
  3.9139255138932962`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"49e73329-81c5-4551-993f-627dd8e4a2d2"],

Cell["Calculate mean \[Gamma] values", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 
  3.914382102684359*^9}},ExpressionUUID->"75c15670-9797-4b15-905f-\
36ee2e382369"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N2\[Gamma]mean", "=", 
   RowBox[{"NumberForm", "[", 
    RowBox[{
     RowBox[{"Mean", "[", "N2\[Gamma]s", "]"}], ",", "4"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"N4\[Gamma]mean", "=", 
   RowBox[{"NumberForm", "[", 
    RowBox[{
     RowBox[{"Mean", "[", "N4\[Gamma]s", "]"}], ",", "4"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"N6\[Gamma]mean", "=", 
   RowBox[{"NumberForm", "[", 
    RowBox[{
     RowBox[{"Mean", "[", "N6\[Gamma]s", "]"}], ",", "4"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.913925580592267*^9, 3.913925606271432*^9}, {
   3.91392728003666*^9, 3.9139273299186783`*^9}, 3.9139274454588614`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"1d2b1d05-93c3-4ea2-b42a-de1c296b0fe6"],

Cell["Plot histogram data for N=2", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 3.914382102684359*^9}, {
  3.91438218799876*^9, 
  3.9143821962824507`*^9}},ExpressionUUID->"9fd6a88f-51b7-4069-8be3-\
514a131b6f8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HistN2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Histogram", "[", 
     RowBox[{"N2\[Gamma]s", ",", "100", ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*StyleBox[\\\"\[Gamma]\\\",FontFamily->\\\"Times New \
Roman\\\",FontSize->19,FontWeight->\\\"Regular\\\",FontSlant->\\\"Italic\\\"]\
\)\>\"", ",", "None"}], "}"}]}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Arrowheads", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.03"}], "}"}], "]"}], ",", "Automatic"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"ChartStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Opacity", "[", 
         RowBox[{"0.6", ",", 
          RowBox[{"Darker", "[", 
           RowBox[{"Green", ",", "0.5"}], "]"}]}], "]"}], "}"}]}]}], "]"}], 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "13"}], ",", "Black"}], "]"}]}], ",", 
    RowBox[{"Epilog", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<Mean:\>\"", " ", 
              RowBox[{"ToExpression", "[", 
               RowBox[{
               "\"\<\\\\overline\\\\gamma_2\>\"", ",", "TeXForm", ",", 
                "HoldForm"}], "]"}], " ", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<=\>\"", "N2\[Gamma]mean"}], "]"}]}], ",", "14"}], 
            "]"}], ",", 
           RowBox[{"RoundingRadius", "->", "2"}]}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0.85", ",", "0.70"}], "}"}], "]"}]}], "]"}], ",", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<N=2\>\"", ",", "14"}], "]"}], ",", 
           RowBox[{"RoundingRadius", "->", "2"}]}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0.96", ",", "0.85"}], "}"}], "]"}]}], "]"}]}], "}"}]}], 
    ",", 
    RowBox[{"ImagePadding", "->", "36"}], ",", 
    RowBox[{"PlotRangeClipping", "->", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.912848074947414*^9, 3.9128480818235397`*^9}, {
   3.912848129871973*^9, 3.912848144576858*^9}, {3.912848204383685*^9, 
   3.9128482557286577`*^9}, {3.9128483583069897`*^9, 
   3.9128483761451597`*^9}, {3.912848665382761*^9, 3.9128486750523577`*^9}, {
   3.9128489108744173`*^9, 3.912848964272994*^9}, {3.912848994530858*^9, 
   3.91284901888015*^9}, {3.91284910838828*^9, 3.912849186474043*^9}, {
   3.912849356375401*^9, 3.9128493911918697`*^9}, {3.912849466748839*^9, 
   3.912849499634416*^9}, {3.9128496990468197`*^9, 3.912849728418953*^9}, {
   3.912849935321817*^9, 3.9128499451006937`*^9}, 3.9128534421179943`*^9, 
   3.912853564808416*^9, {3.912853848347824*^9, 3.912853857365426*^9}, {
   3.912858589182871*^9, 3.9128585964451447`*^9}, {3.912859390312504*^9, 
   3.912859447120531*^9}, {3.912859564101124*^9, 3.9128595750559607`*^9}, {
   3.914374277227832*^9, 3.914374283116828*^9}, 3.914374483770257*^9, {
   3.914376033348154*^9, 3.9143760875182123`*^9}, {3.914376941933259*^9, 
   3.914376945987084*^9}, {3.914376991506816*^9, 3.914377002526943*^9}, {
   3.9143781924213142`*^9, 3.9143782318766603`*^9}, {3.91437834133241*^9, 
   3.9143783415048103`*^9}, {3.9143784196751623`*^9, 3.914378422777841*^9}, {
   3.914378502756267*^9, 3.914378507322521*^9}, {3.914379130494417*^9, 
   3.914379154716799*^9}, {3.914380479483095*^9, 3.914380479751491*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e0b1b0a8-2aa8-423b-a8c0-a85ddeac8fd3"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
    Opacity[0.]], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
     Opacity[0.]], 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0., 0}, {0.002, 3049.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.002, 0}, {0.004, 2941.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.004, 0}, {0.006, 2843.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.006, 0}, {0.008, 2595.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.008, 0}, {0.01, 2563.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.01, 0}, {0.012, 2529.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.012, 0}, {0.014, 2423.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.014, 0}, {0.016, 2310.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.016, 0}, {0.018, 2234.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.018, 0}, {0.02, 2123.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.02, 0}, {0.022, 2158.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.022, 0}, {0.024, 2076.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.024, 0}, {0.026, 2018.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.026, 0}, {0.028, 1880.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.028, 0}, {0.03, 1921.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.03, 0}, {0.032, 1863.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.032, 0}, {0.034, 1835.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.034, 0}, {0.036, 1739.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.036, 0}, {0.038, 1794.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.038, 0}, {0.04, 1752.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.04, 0}, {0.042, 1590.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.042, 0}, {0.044, 1603.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.044, 0}, {0.046, 1550.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.046, 0}, {0.048, 1496.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.048, 0}, {0.05, 1425.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.05, 0}, {0.052, 1415.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.052, 0}, {0.054, 1434.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.054, 0}, {0.056, 1365.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.056, 0}, {0.058, 1363.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.058, 0}, {0.06, 1337.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.06, 0}, {0.062, 1282.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.062, 0}, {0.064, 1260.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.064, 0}, {0.066, 1237.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.066, 0}, {0.068, 1179.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.068, 0}, {0.07, 1199.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.07, 0}, {0.072, 1186.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.072, 0}, {0.074, 1140.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.074, 0}, {0.076, 1127.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.076, 0}, {0.078, 1127.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.078, 0}, {0.08, 941.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.08, 0}, {0.082, 1055.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.082, 0}, {0.084, 1012.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.084, 0}, {0.086, 1001.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.086, 0}, {0.088, 976.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.088, 0}, {0.09, 952.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.09, 0}, {0.092, 874.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.092, 0}, {0.094, 880.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.094, 0}, {0.096, 859.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.096, 0}, {0.098, 812.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.098, 0}, {0.1, 860.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.1, 0}, {0.102, 816.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.102, 0}, {0.104, 788.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.104, 0}, {0.106, 770.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.106, 0}, {0.108, 786.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.108, 0}, {0.11, 733.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.11, 0}, {0.112, 744.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.112, 0}, {0.114, 738.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.114, 0}, {0.116, 669.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.116, 0}, {0.118, 630.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.118, 0}, {0.12, 645.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.12, 0}, {0.122, 585.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.122, 0}, {0.124, 642.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.124, 0}, {0.126, 577.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.126, 0}, {0.128, 570.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.128, 0}, {0.13, 520.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.13, 0}, {0.132, 534.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.132, 0}, {0.134, 482.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.134, 0}, {0.136, 470.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.136, 0}, {0.138, 490.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.138, 0}, {0.14, 474.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.14, 0}, {0.142, 427.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.142, 0}, {0.144, 447.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.144, 0}, {0.146, 371.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.146, 0}, {0.148, 394.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.148, 0}, {0.15, 384.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.15, 0}, {0.152, 380.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.152, 0}, {0.154, 337.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.154, 0}, {0.156, 349.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.156, 0}, {0.158, 309.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.158, 0}, {0.16, 304.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.16, 0}, {0.162, 309.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.162, 0}, {0.164, 274.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.164, 0}, {0.166, 269.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.166, 0}, {0.168, 260.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.168, 0}, {0.17, 257.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.17, 0}, {0.172, 236.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.172, 0}, {0.174, 204.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.174, 0}, {0.176, 172.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.176, 0}, {0.178, 190.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.178, 0}, {0.18, 192.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.18, 0}, {0.182, 160.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.182, 0}, {0.184, 133.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.184, 0}, {0.186, 143.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.186, 0}, {0.188, 123.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.188, 0}, {0.19, 94.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.19, 0}, {0.192, 96.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.192, 0}, {0.194, 88.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.194, 0}, {0.196, 72.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.196, 0}, {0.198, 65.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.198, 0}, {0.2, 50.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.2, 0}, {0.202, 32.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.202, 0}, {0.204, 21.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.204, 0}, {0.206, 11.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.6], 
      RectangleBox[{0.206, 0}, {0.208, 1.},
       RoundingRadius->
        0]}}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*StyleBox[\\\"\[Gamma]\\\",FontFamily->\\\"Times New \
Roman\\\",FontSize->19,FontWeight->\\\"Regular\\\",FontSlant->\\\"Italic\\\"]\
\\)\"", TraditionalForm], None},
  AxesOrigin->{-0.00416, 0},
  AxesStyle->{
    Arrowheads[{0, 0.03}], Automatic},
  Epilog->{
    InsetBox[
     BoxData[
      FormBox[
       FrameBox[
        StyleBox[
         RowBox[{"\"Mean:\"", " ", 
           TagBox[
            SubscriptBox[
             OverscriptBox["\[Gamma]", "_"], "2"], HoldForm], " ", 
           InterpretationBox[
            Cell[
             BoxData[
              FormBox[
               RowBox[{"\"=\"", " ", 
                 TagBox[
                  InterpretationBox[
                   StyleBox["\"0.05822\"", ShowStringCharacters -> False], 
                   0.05822300975523658, AutoDelete -> True], 
                  NumberForm[#, 4]& ]}], TextForm]], "InlineText"], 
            Text["=" NumberForm[0.05822300975523658, 4]]]}], 14, StripOnInput -> 
         False], RoundingRadius -> 2, StripOnInput -> False], 
       TraditionalForm]], 
     Scaled[{0.85, 0.7}]], 
    InsetBox[
     BoxData[
      FormBox[
       FrameBox[
        StyleBox["\"N=2\"", 14, StripOnInput -> False], RoundingRadius -> 2, 
        StripOnInput -> False], TraditionalForm]], 
     Scaled[{0.96, 0.85}]]},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->36,
  ImageSize->500,
  LabelStyle->Directive[FontFamily -> "Times New Roman", FontSize -> 13, 
    GrayLevel[0]],
  PlotRange->{{0., 0.208}, {All, All}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9143742837376127`*^9, 3.914374485469747*^9, {3.914376039829356*^9, 
   3.914376088727661*^9}, 3.914376946579288*^9, 3.9143770351289663`*^9, {
   3.914378194451437*^9, 3.914378232875647*^9}, 3.9143783421368504`*^9, 
   3.91437842345164*^9, 3.914378508188168*^9, 3.914380418992697*^9, 
   3.914380480427065*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"090ba765-2832-45c3-8fa6-d8004f2481cd"]
}, Open  ]],

Cell["Plot histogram data for N=4", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 3.914382102684359*^9}, {
  3.91438218799876*^9, 
  3.9143822029921303`*^9}},ExpressionUUID->"3ecbb773-8661-463e-a515-\
6c4aa60acb3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HistN4", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Histogram", "[", 
     RowBox[{"N4\[Gamma]s", ",", "100", ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*StyleBox[\\\"\[Gamma]\\\",FontFamily->\\\"Times New \
Roman\\\",FontSize->19,FontWeight->\\\"Regular\\\",FontSlant->\\\"Italic\\\"]\
\)\>\"", ",", "None"}], "}"}]}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Arrowheads", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.03"}], "}"}], "]"}], ",", "Automatic"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"ChartStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Opacity", "[", 
         RowBox[{"0.65", ",", 
          RowBox[{"Darker", "[", 
           RowBox[{"Blue", ",", "0.2"}], "]"}]}], "]"}], "}"}]}]}], "]"}], 
    ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "13"}], ",", "Black"}], "]"}]}], ",", 
    RowBox[{"Ticks", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.10", ",", "\"\<0.10\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.20", ",", "\"\<0.20\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.30", ",", "\"\<0.30\>\""}], "}"}]}], "}"}], ",", 
       "Automatic"}], "}"}]}], ",", 
    RowBox[{"Epilog", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<Mean:\>\"", " ", 
              RowBox[{"ToExpression", "[", 
               RowBox[{
               "\"\<\\\\overline\\\\gamma_4\>\"", ",", "TeXForm", ",", 
                "HoldForm"}], "]"}], " ", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<=\>\"", "N4\[Gamma]mean"}], "]"}]}], ",", "14"}], 
            "]"}], ",", 
           RowBox[{"RoundingRadius", "->", "2"}]}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0.85", ",", "0.70"}], "}"}], "]"}]}], "]"}], ",", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<N=4\>\"", ",", "14"}], "]"}], ",", 
           RowBox[{"RoundingRadius", "->", "2"}]}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0.96", ",", "0.85"}], "}"}], "]"}]}], "]"}]}], "}"}]}], 
    ",", 
    RowBox[{"ImagePadding", "->", "36"}], ",", 
    RowBox[{"PlotRangeClipping", "->", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.912848074947414*^9, 3.9128480818235397`*^9}, {
   3.912848129871973*^9, 3.912848144576858*^9}, {3.912848204383685*^9, 
   3.9128482557286577`*^9}, {3.9128483583069897`*^9, 
   3.9128483761451597`*^9}, {3.912848665382761*^9, 3.9128486750523577`*^9}, {
   3.9128489108744173`*^9, 3.912848964272994*^9}, {3.912848994530858*^9, 
   3.91284901888015*^9}, {3.91284910838828*^9, 3.912849186474043*^9}, {
   3.912849356375401*^9, 3.9128493911918697`*^9}, {3.912849466748839*^9, 
   3.912849499634416*^9}, {3.9128496990468197`*^9, 3.912849728418953*^9}, {
   3.912849935321817*^9, 3.9128499451006937`*^9}, 3.9128534421179943`*^9, 
   3.912853564808416*^9, {3.912853848347824*^9, 3.912853857365426*^9}, {
   3.912858589182871*^9, 3.9128585964451447`*^9}, {3.912859390312504*^9, 
   3.912859447120531*^9}, {3.912859564101124*^9, 3.9128595750559607`*^9}, {
   3.914374277227832*^9, 3.914374304396802*^9}, {3.9143743773602953`*^9, 
   3.914374388728182*^9}, 3.914374474561296*^9, 3.9143760296710253`*^9, {
   3.914376109233429*^9, 3.914376175181608*^9}, {3.9143762792194643`*^9, 
   3.914376312537734*^9}, {3.9143769237975197`*^9, 3.9143769286152287`*^9}, {
   3.914378147829908*^9, 3.914378175078856*^9}, {3.914378236031522*^9, 
   3.9143782367896214`*^9}, {3.914378333819104*^9, 3.914378413582428*^9}, {
   3.914378511676705*^9, 3.914378514673781*^9}, {3.914379158370566*^9, 
   3.914379250415804*^9}, {3.914380484847217*^9, 3.914380485070291*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"693fc02d-6541-471d-bb34-2a924c19eb70"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.13999999999999999`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.13999999999999999`], Thickness[Small]}], 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0., 0}, {0.005, 5922.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.005, 0}, {0.01, 5918.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.01, 0}, {0.015, 5798.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.015, 0}, {0.02, 5625.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.02, 0}, {0.025, 5321.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.025, 0}, {0.03, 5065.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.03, 0}, {0.035, 4739.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.035, 0}, {0.04, 4582.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.04, 0}, {0.045, 4412.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.045, 0}, {0.05, 4162.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.05, 0}, {0.055, 3845.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.055, 0}, {0.06, 3678.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.06, 0}, {0.065, 3401.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.065, 0}, {0.07, 3032.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.07, 0}, {0.075, 2960.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.075, 0}, {0.08, 2731.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.08, 0}, {0.085, 2588.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.085, 0}, {0.09, 2432.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.09, 0}, {0.095, 2164.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.095, 0}, {0.1, 2026.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.1, 0}, {0.105, 1822.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.105, 0}, {0.11, 1645.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.11, 0}, {0.115, 1573.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.115, 0}, {0.12, 1481.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.12, 0}, {0.125, 1299.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.125, 0}, {0.13, 1182.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.13, 0}, {0.135, 1052.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.135, 0}, {0.14, 1023.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.14, 0}, {0.145, 872.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.145, 0}, {0.15, 792.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.15, 0}, {0.155, 740.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.155, 0}, {0.16, 634.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.16, 0}, {0.165, 589.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.165, 0}, {0.17, 521.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.17, 0}, {0.175, 449.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.175, 0}, {0.18, 434.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.18, 0}, {0.185, 397.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.185, 0}, {0.19, 354.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.19, 0}, {0.195, 321.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.195, 0}, {0.2, 302.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.2, 0}, {0.205, 250.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.205, 0}, {0.21, 241.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.21, 0}, {0.215, 204.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.215, 0}, {0.22, 182.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.22, 0}, {0.225, 168.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.225, 0}, {0.23, 146.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.23, 0}, {0.235, 107.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.235, 0}, {0.24, 101.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.24, 0}, {0.245, 99.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.245, 0}, {0.25, 78.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.25, 0}, {0.255, 68.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.255, 0}, {0.26, 72.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.26, 0}, {0.265, 44.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.265, 0}, {0.27, 39.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.27, 0}, {0.275, 32.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.275, 0}, {0.28, 38.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.28, 0}, {0.285, 42.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.285, 0}, {0.29, 32.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.29, 0}, {0.295, 23.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.295, 0}, {0.3, 24.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.3, 0}, {0.305, 16.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.305, 0}, {0.31, 16.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.31, 0}, {0.315, 17.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.315, 0}, {0.32, 15.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.32, 0}, {0.325, 8.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.325, 0}, {0.33, 7.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.33, 0}, {0.335, 16.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.335, 0}, {0.34, 6.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.34, 0}, {0.345, 7.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.345, 0}, {0.35, 3.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.35, 0}, {0.355, 3.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.355, 0}, {0.36, 6.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.36, 0}, {0.365, 2.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.365, 0}, {0.37, 1.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.37, 0}, {0.375, 1.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.385, 0}, {0.39, 1.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.39, 0}, {0.395, 1.},
       RoundingRadius->0]}, 
     {RGBColor[0., 0., 0.8], Opacity[0.65], 
      RectangleBox[{0.395, 0}, {0.4, 1.},
       RoundingRadius->
        0]}}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*StyleBox[\\\"\[Gamma]\\\",FontFamily->\\\"Times New \
Roman\\\",FontSize->19,FontWeight->\\\"Regular\\\",FontSlant->\\\"Italic\\\"]\
\\)\"", TraditionalForm], None},
  AxesOrigin->{-0.008, 0},
  AxesStyle->{
    Arrowheads[{0, 0.03}], Automatic},
  Epilog->{
    InsetBox[
     BoxData[
      FormBox[
       FrameBox[
        StyleBox[
         RowBox[{"\"Mean:\"", " ", 
           TagBox[
            SubscriptBox[
             OverscriptBox["\[Gamma]", "_"], "4"], HoldForm], " ", 
           InterpretationBox[
            Cell[
             BoxData[
              FormBox[
               RowBox[{"\"=\"", " ", 
                 TagBox[
                  InterpretationBox[
                   StyleBox["\"0.06135\"", ShowStringCharacters -> False], 
                   0.061347748830346396`, AutoDelete -> True], 
                  NumberForm[#, 4]& ]}], TextForm]], "InlineText"], 
            Text["=" NumberForm[0.061347748830346396`, 4]]]}], 14, 
         StripOnInput -> False], RoundingRadius -> 2, StripOnInput -> False], 
       TraditionalForm]], 
     Scaled[{0.85, 0.7}]], 
    InsetBox[
     BoxData[
      FormBox[
       FrameBox[
        StyleBox["\"N=4\"", 14, StripOnInput -> False], RoundingRadius -> 2, 
        StripOnInput -> False], TraditionalForm]], 
     Scaled[{0.96, 0.85}]]},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->36,
  ImageSize->500,
  LabelStyle->Directive[FontFamily -> "Times New Roman", FontSize -> 13, 
    GrayLevel[0]],
  PlotRange->{{0., 0.4}, {All, All}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{0.1, 
      FormBox["\"0.10\"", TraditionalForm]}, {0.2, 
      FormBox["\"0.20\"", TraditionalForm]}, {0.3, 
      FormBox["\"0.30\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.914378155983411*^9, 3.91437817542058*^9}, 
   3.9143782375844803`*^9, {3.914378334614665*^9, 3.914378414148569*^9}, 
   3.914378515319771*^9, {3.914379171731268*^9, 3.914379186078621*^9}, 
   3.914379251952427*^9, 3.914380422635434*^9, 3.914380485530464*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"c141bb8c-895e-4dfb-8e4f-ef315865f6cb"]
}, Open  ]],

Cell["Plot histogram data for N=6", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 3.914382102684359*^9}, {
  3.91438218799876*^9, 
  3.914382208171488*^9}},ExpressionUUID->"ab0e90cd-8e4a-4a38-9b6e-\
8af11bd84533"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HistN6", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Histogram", "[", 
     RowBox[{"N6\[Gamma]s", ",", "100", ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*StyleBox[\\\"\[Gamma]\\\",FontFamily->\\\"Times New \
Roman\\\",FontSize->19,FontWeight->\\\"Regular\\\",FontSlant->\\\"Italic\\\"]\
\)\>\"", ",", "None"}], "}"}]}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Arrowheads", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.03"}], "}"}], "]"}], ",", "Automatic"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"ChartStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Opacity", "[", 
         RowBox[{"0.5", ",", 
          RowBox[{"Darker", "[", 
           RowBox[{"Red", ",", "0.3"}], "]"}]}], "]"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "13"}], ",", "Black"}], "]"}]}], ",", 
    RowBox[{"Ticks", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.10", ",", "\"\<0.10\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.20", ",", "\"\<0.20\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.30", ",", "\"\<0.30\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.40", ",", "\"\<0.40\>\""}], "}"}]}], "}"}], ",", 
       "Automatic"}], "}"}]}], ",", 
    RowBox[{"Epilog", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<Mean:\>\"", " ", 
              RowBox[{"ToExpression", "[", 
               RowBox[{
               "\"\<\\\\overline\\\\gamma_6\>\"", ",", "TeXForm", ",", 
                "HoldForm"}], "]"}], " ", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<=\>\"", "N6\[Gamma]mean"}], "]"}]}], ",", "14"}], 
            "]"}], ",", 
           RowBox[{"RoundingRadius", "->", "2"}]}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0.85", ",", "0.70"}], "}"}], "]"}]}], "]"}], ",", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Framed", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<N=6\>\"", ",", "14"}], "]"}], ",", 
           RowBox[{"RoundingRadius", "->", "2"}]}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0.96", ",", "0.85"}], "}"}], "]"}]}], "]"}]}], "}"}]}], 
    ",", 
    RowBox[{"ImagePadding", "->", "36"}], ",", 
    RowBox[{"PlotRangeClipping", "->", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.912848074947414*^9, 3.9128480818235397`*^9}, {
   3.912848129871973*^9, 3.912848144576858*^9}, {3.912848204383685*^9, 
   3.9128482557286577`*^9}, {3.9128483583069897`*^9, 
   3.9128483761451597`*^9}, {3.912848665382761*^9, 3.9128486750523577`*^9}, {
   3.9128489108744173`*^9, 3.912848964272994*^9}, {3.912848994530858*^9, 
   3.91284901888015*^9}, {3.91284910838828*^9, 3.912849186474043*^9}, {
   3.912849356375401*^9, 3.9128493911918697`*^9}, {3.912849466748839*^9, 
   3.912849499634416*^9}, {3.9128496990468197`*^9, 3.912849728418953*^9}, {
   3.912849935321817*^9, 3.9128499451006937`*^9}, 3.9128534421179943`*^9, 
   3.912853564808416*^9, {3.912853848347824*^9, 3.912853857365426*^9}, {
   3.912858589182871*^9, 3.9128585964451447`*^9}, {3.912859390312504*^9, 
   3.912859447120531*^9}, {3.912859564101124*^9, 3.9128595750559607`*^9}, {
   3.914374277227832*^9, 3.914374326447363*^9}, {3.914374406874728*^9, 
   3.914374462110779*^9}, {3.9143761035363827`*^9, 3.914376115865149*^9}, {
   3.914376163511086*^9, 3.914376216685705*^9}, {3.914376263754675*^9, 
   3.914376265471065*^9}, {3.91437632235225*^9, 3.914376327012989*^9}, {
   3.914376522757288*^9, 3.914376554791132*^9}, 3.9143766110520372`*^9, {
   3.914376643302393*^9, 3.914376900743548*^9}, {3.9143779476844387`*^9, 
   3.914377964862164*^9}, {3.914378009636918*^9, 3.9143781323600397`*^9}, {
   3.914378241330203*^9, 3.914378241657702*^9}, {3.914378325106983*^9, 
   3.914378326743659*^9}, {3.9143784295428534`*^9, 3.914378431636157*^9}, {
   3.914378518249411*^9, 3.914378520161682*^9}, {3.914379015679947*^9, 
   3.9143790611323233`*^9}, {3.914379263245137*^9, 3.914379276977275*^9}, {
   3.914380488867524*^9, 3.914380489130106*^9}, {3.914380552687338*^9, 
   3.91438055611698*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"0c122d0a-6651-4dc6-93c2-8e907ba18f99"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.08399999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.08399999999999999], Thickness[Small]}], 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0., 0}, {0.005, 3747.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.005, 0}, {0.01, 4157.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.01, 0}, {0.015, 4255.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.015, 0}, {0.02, 4488.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.02, 0}, {0.025, 4413.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.025, 0}, {0.03, 4539.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.03, 0}, {0.035, 4489.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.035, 0}, {0.04, 4466.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.04, 0}, {0.045, 4438.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.045, 0}, {0.05, 4167.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.05, 0}, {0.055, 4206.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.055, 0}, {0.06, 4035.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.06, 0}, {0.065, 3917.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.065, 0}, {0.07, 3761.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.07, 0}, {0.075, 3532.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.075, 0}, {0.08, 3358.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.08, 0}, {0.085, 3116.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.085, 0}, {0.09, 2865.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.09, 0}, {0.095, 2658.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.095, 0}, {0.1, 2477.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.1, 0}, {0.105, 2313.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.105, 0}, {0.11, 2107.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.11, 0}, {0.115, 1926.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.115, 0}, {0.12, 1821.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.12, 0}, {0.125, 1565.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.125, 0}, {0.13, 1438.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.13, 0}, {0.135, 1240.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.135, 0}, {0.14, 1143.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.14, 0}, {0.145, 1154.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.145, 0}, {0.15, 992.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.15, 0}, {0.155, 847.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.155, 0}, {0.16, 777.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.16, 0}, {0.165, 674.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.165, 0}, {0.17, 620.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.17, 0}, {0.175, 580.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.175, 0}, {0.18, 461.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.18, 0}, {0.185, 436.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.185, 0}, {0.19, 385.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.19, 0}, {0.195, 344.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.195, 0}, {0.2, 308.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.2, 0}, {0.205, 264.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.205, 0}, {0.21, 226.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.21, 0}, {0.215, 175.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.215, 0}, {0.22, 156.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.22, 0}, {0.225, 128.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.225, 0}, {0.23, 129.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.23, 0}, {0.235, 106.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.235, 0}, {0.24, 108.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.24, 0}, {0.245, 81.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.245, 0}, {0.25, 49.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.25, 0}, {0.255, 53.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.255, 0}, {0.26, 45.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.26, 0}, {0.265, 46.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.265, 0}, {0.27, 41.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.27, 0}, {0.275, 28.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.275, 0}, {0.28, 27.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.28, 0}, {0.285, 28.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.285, 0}, {0.29, 17.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.29, 0}, {0.295, 14.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.295, 0}, {0.3, 11.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.3, 0}, {0.305, 11.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.305, 0}, {0.31, 8.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.31, 0}, {0.315, 5.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.315, 0}, {0.32, 5.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.32, 0}, {0.325, 7.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.325, 0}, {0.33, 6.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.335, 0}, {0.34, 1.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.34, 0}, {0.345, 1.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.345, 0}, {0.35, 3.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.35, 0}, {0.355, 2.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.355, 0}, {0.36, 1.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.365, 0}, {0.37, 1.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.39, 0}, {0.395, 1.},
       RoundingRadius->0]}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], 
      RectangleBox[{0.435, 0}, {0.44, 1.},
       RoundingRadius->
        0]}}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*StyleBox[\\\"\[Gamma]\\\",FontFamily->\\\"Times New \
Roman\\\",FontSize->19,FontWeight->\\\"Regular\\\",FontSlant->\\\"Italic\\\"]\
\\)\"", TraditionalForm], None},
  AxesOrigin->{-0.0088, 0},
  AxesStyle->{
    Arrowheads[{0, 0.03}], Automatic},
  Epilog->{
    InsetBox[
     BoxData[
      FormBox[
       FrameBox[
        StyleBox[
         RowBox[{"\"Mean:\"", " ", 
           TagBox[
            SubscriptBox[
             OverscriptBox["\[Gamma]", "_"], "6"], HoldForm], " ", 
           InterpretationBox[
            Cell[
             BoxData[
              FormBox[
               RowBox[{"\"=\"", " ", 
                 TagBox[
                  InterpretationBox[
                   StyleBox["\"0.06797\"", ShowStringCharacters -> False], 
                   0.06797099143192283, AutoDelete -> True], 
                  NumberForm[#, 4]& ]}], TextForm]], "InlineText"], 
            Text["=" NumberForm[0.06797099143192283, 4]]]}], 14, StripOnInput -> 
         False], RoundingRadius -> 2, StripOnInput -> False], 
       TraditionalForm]], 
     Scaled[{0.85, 0.7}]], 
    InsetBox[
     BoxData[
      FormBox[
       FrameBox[
        StyleBox["\"N=6\"", 14, StripOnInput -> False], RoundingRadius -> 2, 
        StripOnInput -> False], TraditionalForm]], 
     Scaled[{0.96, 0.85}]]},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->36,
  ImageSize->500,
  LabelStyle->Directive[FontFamily -> "Times New Roman", FontSize -> 13, 
    GrayLevel[0]],
  PlotRange->{{0., 0.44}, {All, All}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{0.1, 
      FormBox["\"0.10\"", TraditionalForm]}, {0.2, 
      FormBox["\"0.20\"", TraditionalForm]}, {0.3, 
      FormBox["\"0.30\"", TraditionalForm]}, {0.4, 
      FormBox["\"0.40\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.914378021570656*^9, 3.9143781330787907`*^9}, 
   3.914378242395487*^9, 3.914378328328086*^9, 3.9143784322355022`*^9, 
   3.914378520852824*^9, {3.9143790304250793`*^9, 3.914379061535611*^9}, 
   3.9143792778491583`*^9, 3.914380425870432*^9, 3.914380489638341*^9, {
   3.914380553486622*^9, 3.9143805565377483`*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"5681f1b8-a58b-4595-ad74-57dd189dc043"]
}, Open  ]],

Cell["Plot histogram data for N \[Element] {2,4,6} in a single histogram", \
"Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 3.914382102684359*^9}, {
  3.91438218799876*^9, 3.9143822557065773`*^9}, {3.914382349737118*^9, 
  3.914382350073126*^9}},ExpressionUUID->"3278a815-7654-4e73-8f62-\
4cc89f34aa3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HistN246", "=", 
  RowBox[{"Histogram", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"N2\[Gamma]s", ",", "N4\[Gamma]s", ",", "N6\[Gamma]s"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Raw\>\"", ",", "100"}], "}"}], ",", 
    RowBox[{"ChartStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Darker", "[", 
        RowBox[{"Green", ",", "0.5"}], "]"}], ",", 
       RowBox[{"Darker", "[", 
        RowBox[{"Blue", ",", "0.2"}], "]"}], ",", 
       RowBox[{"Darker", "[", 
        RowBox[{"Red", ",", "0.3"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*StyleBox[\\\"\[Gamma]\\\",FontFamily->\\\"Times New \
Roman\\\",FontSize->19,FontWeight->\\\"Regular\\\",FontSlant->\\\"Italic\\\"]\
\)\>\"", ",", "None"}], "}"}]}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.02"}], "}"}], "]"}], ",", "Automatic"}], 
      "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "13"}], ",", "Black"}], "]"}]}], ",", 
    RowBox[{"Ticks", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.10", ",", "\"\<0.10\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.20", ",", "\"\<0.20\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.30", ",", "\"\<0.30\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.40", ",", "\"\<0.40\>\""}], "}"}]}], "}"}], ",", 
       "Automatic"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Framed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SwatchLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "[", 
               RowBox[{"Green", ",", "0.5"}], "]"}], ",", 
              RowBox[{"Darker", "[", 
               RowBox[{"Blue", ",", "0.2"}], "]"}], ",", 
              RowBox[{"Darker", "[", 
               RowBox[{"Red", ",", "0.3"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<N=2\>\"", ",", "15"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<N=4\>\"", ",", "15"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<N=6\>\"", ",", "15"}], "]"}]}], "}"}], ",", 
            RowBox[{"LegendMarkerSize", "->", 
             RowBox[{"{", 
              RowBox[{"14", ",", "14"}], "}"}]}]}], "]"}], 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", 
                   RowBox[{
                   "\"\<\\\\overline\\\\gamma_2\>\"", ",", "TeXForm", ",", 
                    "HoldForm"}], "]"}], ",", "14"}], "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<=\>\"", "N2\[Gamma]mean"}], ",", "14"}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", 
                   RowBox[{
                   "\"\<\\\\overline\\\\gamma_4\>\"", ",", "TeXForm", ",", 
                    "HoldForm"}], "]"}], ",", "14"}], "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<=\>\"", "N4\[Gamma]mean"}], ",", "14"}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", 
                   RowBox[{
                   "\"\<\\\\overline\\\\gamma_6\>\"", ",", "TeXForm", ",", 
                    "HoldForm"}], "]"}], ",", "14"}], "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<=\>\"", "N6\[Gamma]mean"}], ",", "14"}], 
                 "]"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], ",", 
         RowBox[{"RoundingRadius", "\[Rule]", "1"}]}], "]"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"0.78", ",", "0.66"}], "}"}], "]"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9139277581485357`*^9, 3.913927788912848*^9}, {
  3.9139278265459642`*^9, 3.913927866208659*^9}, {3.913928072724904*^9, 
  3.913928099578237*^9}, {3.9139281336594*^9, 3.913928234249155*^9}, {
  3.9139306469010553`*^9, 3.9139307119206257`*^9}, {3.9139307894201097`*^9, 
  3.913930815718617*^9}, {3.9143750986038303`*^9, 3.9143751316631603`*^9}, {
  3.9143752346799192`*^9, 3.914375250269802*^9}, {3.914375498027308*^9, 
  3.914375531714128*^9}, {3.914375567800362*^9, 3.914375639378665*^9}, {
  3.914375671561329*^9, 3.9143756802861013`*^9}, {3.914377102459947*^9, 
  3.9143771258153133`*^9}, {3.914378245658702*^9, 3.914378304367715*^9}, {
  3.914378447326517*^9, 3.9143784550104237`*^9}, {3.9143785239091377`*^9, 
  3.9143785264275703`*^9}, {3.9143792875120707`*^9, 3.914379299211055*^9}, {
  3.9143805136933804`*^9, 3.9143805394428596`*^9}, {3.914380574727045*^9, 
  3.9143806346052437`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"825c9a37-0c9a-45e2-99e0-37b0625405f2"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
    Opacity[0.]], {{}, 
     {RGBColor[0., 0.5, 0.], Opacity[0.5], EdgeForm[Opacity[0.]], 
      RectangleBox[{0., 0.}, {0.004416841933896094, 6613},
       RoundingRadius->0], 
      RectangleBox[{0.004416841933896094, 0.}, {0.008833683867792187, 5909},
       RoundingRadius->0], 
      RectangleBox[{0.008833683867792187, 0.}, {0.01325052580168828, 5535},
       RoundingRadius->0], 
      RectangleBox[{0.01325052580168828, 0.}, {0.017667367735584374, 5070},
       RoundingRadius->0], 
      RectangleBox[{0.017667367735584374, 0.}, {0.022084209669480468, 4716},
       RoundingRadius->0], 
      RectangleBox[{0.022084209669480468, 0.}, {0.02650105160337656, 4503},
       RoundingRadius->0], 
      RectangleBox[{0.02650105160337656, 0.}, {0.030917893537272655, 4186},
       RoundingRadius->0], 
      RectangleBox[{0.030917893537272655, 0.}, {0.03533473547116875, 4003},
       RoundingRadius->0], 
      RectangleBox[{0.03533473547116875, 0.}, {0.03975157740506484, 3896},
       RoundingRadius->0], 
      RectangleBox[{0.03975157740506484, 0.}, {0.044168419338960936, 3540},
       RoundingRadius->0], 
      RectangleBox[{0.044168419338960936, 0.}, {0.04858526127285703, 3347},
       RoundingRadius->0], 
      RectangleBox[{0.04858526127285703, 0.}, {0.05300210320675312, 3138},
       RoundingRadius->0], 
      RectangleBox[{0.05300210320675312, 0.}, {0.057418945140649214, 3029},
       RoundingRadius->0], 
      RectangleBox[{0.057418945140649214, 0.}, {0.06183578707454531, 2916},
       RoundingRadius->0], 
      RectangleBox[{0.06183578707454531, 0.}, {0.06625262900844141, 2738},
       RoundingRadius->0], 
      RectangleBox[{0.06625262900844141, 0.}, {0.0706694709423375, 2595},
       RoundingRadius->0], 
      RectangleBox[{0.0706694709423375, 0.}, {0.07508631287623359, 2582},
       RoundingRadius->0], 
      RectangleBox[{0.07508631287623359, 0.}, {0.07950315481012968, 2348},
       RoundingRadius->0], 
      RectangleBox[{0.07950315481012968, 0.}, {0.08391999674402578, 2260},
       RoundingRadius->0], 
      RectangleBox[{0.08391999674402578, 0.}, {0.08833683867792187, 2196},
       RoundingRadius->0], 
      RectangleBox[{0.08833683867792187, 0.}, {0.09275368061181796, 1991},
       RoundingRadius->0], 
      RectangleBox[{0.09275368061181796, 0.}, {0.09717052254571407, 1893},
       RoundingRadius->0], 
      RectangleBox[{0.09717052254571407, 0.}, {0.10158736447961016, 1818},
       RoundingRadius->0], 
      RectangleBox[{0.10158736447961016, 0.}, {0.10600420641350625, 1737},
       RoundingRadius->0], 
      RectangleBox[{0.10600420641350625, 0.}, {0.11042104834740234, 1673},
       RoundingRadius->0], 
      RectangleBox[{0.11042104834740234, 0.}, {0.11483789028129843, 1595},
       RoundingRadius->0], 
      RectangleBox[{0.11483789028129843, 0.}, {0.11925473221519453, 1420},
       RoundingRadius->0], 
      RectangleBox[{0.11925473221519453, 0.}, {0.12367157414909062, 1378},
       RoundingRadius->0], 
      RectangleBox[{0.12367157414909062, 0.}, {0.1280884160829867, 1270},
       RoundingRadius->0], 
      RectangleBox[{0.1280884160829867, 0.}, {0.13250525801688282, 1169},
       RoundingRadius->0], 
      RectangleBox[{0.13250525801688282, 0.}, {0.1369220999507789, 1047},
       RoundingRadius->0], 
      RectangleBox[{0.1369220999507789, 0.}, {0.141338941884675, 1025},
       RoundingRadius->0], 
      RectangleBox[{0.141338941884675, 0.}, {0.1457557838185711, 904},
       RoundingRadius->0], 
      RectangleBox[{0.1457557838185711, 0.}, {0.15017262575246718, 858},
       RoundingRadius->0], 
      RectangleBox[{0.15017262575246718, 0.}, {0.15458946768636328, 786},
       RoundingRadius->0], 
      RectangleBox[{0.15458946768636328, 0.}, {0.15900630962025936, 721},
       RoundingRadius->0], 
      RectangleBox[{0.15900630962025936, 0.}, {0.16342315155415546, 642},
       RoundingRadius->0], 
      RectangleBox[{0.16342315155415546, 0.}, {0.16783999348805156, 593},
       RoundingRadius->0], 
      RectangleBox[{0.16783999348805156, 0.}, {0.17225683542194764, 550},
       RoundingRadius->0], 
      RectangleBox[{0.17225683542194764, 0.}, {0.17667367735584374, 413},
       RoundingRadius->0], 
      RectangleBox[{0.17667367735584374, 0.}, {0.18109051928973985, 389},
       RoundingRadius->0], 
      RectangleBox[{0.18109051928973985, 0.}, {0.18550736122363592, 321},
       RoundingRadius->0], 
      RectangleBox[{0.18550736122363592, 0.}, {0.18992420315753203, 249},
       RoundingRadius->0], 
      RectangleBox[{0.18992420315753203, 0.}, {0.19434104509142813, 199},
       RoundingRadius->0], 
      RectangleBox[{0.19434104509142813, 0.}, {0.1987578870253242, 144},
       RoundingRadius->0], 
      RectangleBox[{0.1987578870253242, 0.}, {0.2031747289592203, 78},
       RoundingRadius->0], 
      RectangleBox[{0.2031747289592203, 0.}, {0.2075915708931164, 17},
       RoundingRadius->0]}, {}, {}}, {{}, 
     {RGBColor[0., 0., 0.8], Opacity[0.5], EdgeForm[Opacity[0.]], 
      RectangleBox[{0., 0.}, {0.004416841933896094, 5273},
       RoundingRadius->0], 
      RectangleBox[{0.004416841933896094, 0.}, {0.008833683867792187, 5140},
       RoundingRadius->0], 
      RectangleBox[{0.008833683867792187, 0.}, {0.01325052580168828, 5242},
       RoundingRadius->0], 
      RectangleBox[{0.01325052580168828, 0.}, {0.017667367735584374, 5006},
       RoundingRadius->0], 
      RectangleBox[{0.017667367735584374, 0.}, {0.022084209669480468, 4883},
       RoundingRadius->0], 
      RectangleBox[{0.022084209669480468, 0.}, {0.02650105160337656, 4505},
       RoundingRadius->0], 
      RectangleBox[{0.02650105160337656, 0.}, {0.030917893537272655, 4498},
       RoundingRadius->0], 
      RectangleBox[{0.030917893537272655, 0.}, {0.03533473547116875, 4171},
       RoundingRadius->0], 
      RectangleBox[{0.03533473547116875, 0.}, {0.03975157740506484, 4017},
       RoundingRadius->0], 
      RectangleBox[{0.03975157740506484, 0.}, {0.044168419338960936, 3948},
       RoundingRadius->0], 
      RectangleBox[{0.044168419338960936, 0.}, {0.04858526127285703, 3676},
       RoundingRadius->0], 
      RectangleBox[{0.04858526127285703, 0.}, {0.05300210320675312, 3539},
       RoundingRadius->0], 
      RectangleBox[{0.05300210320675312, 0.}, {0.057418945140649214, 3277},
       RoundingRadius->0], 
      RectangleBox[{0.057418945140649214, 0.}, {0.06183578707454531, 3152},
       RoundingRadius->0], 
      RectangleBox[{0.06183578707454531, 0.}, {0.06625262900844141, 2901},
       RoundingRadius->0], 
      RectangleBox[{0.06625262900844141, 0.}, {0.0706694709423375, 2707},
       RoundingRadius->0], 
      RectangleBox[{0.0706694709423375, 0.}, {0.07508631287623359, 2582},
       RoundingRadius->0], 
      RectangleBox[{0.07508631287623359, 0.}, {0.07950315481012968, 2418},
       RoundingRadius->0], 
      RectangleBox[{0.07950315481012968, 0.}, {0.08391999674402578, 2306},
       RoundingRadius->0], 
      RectangleBox[{0.08391999674402578, 0.}, {0.08833683867792187, 2170},
       RoundingRadius->0], 
      RectangleBox[{0.08833683867792187, 0.}, {0.09275368061181796, 2002},
       RoundingRadius->0], 
      RectangleBox[{0.09275368061181796, 0.}, {0.09717052254571407, 1845},
       RoundingRadius->0], 
      RectangleBox[{0.09717052254571407, 0.}, {0.10158736447961016, 1737},
       RoundingRadius->0], 
      RectangleBox[{0.10158736447961016, 0.}, {0.10600420641350625, 1567},
       RoundingRadius->0], 
      RectangleBox[{0.10600420641350625, 0.}, {0.11042104834740234, 1462},
       RoundingRadius->0], 
      RectangleBox[{0.11042104834740234, 0.}, {0.11483789028129843, 1376},
       RoundingRadius->0], 
      RectangleBox[{0.11483789028129843, 0.}, {0.11925473221519453, 1315},
       RoundingRadius->0], 
      RectangleBox[{0.11925473221519453, 0.}, {0.12367157414909062, 1174},
       RoundingRadius->0], 
      RectangleBox[{0.12367157414909062, 0.}, {0.1280884160829867, 1062},
       RoundingRadius->0], 
      RectangleBox[{0.1280884160829867, 0.}, {0.13250525801688282, 978},
       RoundingRadius->0], 
      RectangleBox[{0.13250525801688282, 0.}, {0.1369220999507789, 926},
       RoundingRadius->0], 
      RectangleBox[{0.1369220999507789, 0.}, {0.141338941884675, 852},
       RoundingRadius->0], 
      RectangleBox[{0.141338941884675, 0.}, {0.1457557838185711, 757},
       RoundingRadius->0], 
      RectangleBox[{0.1457557838185711, 0.}, {0.15017262575246718, 698},
       RoundingRadius->0], 
      RectangleBox[{0.15017262575246718, 0.}, {0.15458946768636328, 653},
       RoundingRadius->0], 
      RectangleBox[{0.15458946768636328, 0.}, {0.15900630962025936, 583},
       RoundingRadius->0], 
      RectangleBox[{0.15900630962025936, 0.}, {0.16342315155415546, 542},
       RoundingRadius->0], 
      RectangleBox[{0.16342315155415546, 0.}, {0.16783999348805156, 465},
       RoundingRadius->0], 
      RectangleBox[{0.16783999348805156, 0.}, {0.17225683542194764, 423},
       RoundingRadius->0], 
      RectangleBox[{0.17225683542194764, 0.}, {0.17667367735584374, 404},
       RoundingRadius->0], 
      RectangleBox[{0.17667367735584374, 0.}, {0.18109051928973985, 369},
       RoundingRadius->0], 
      RectangleBox[{0.18109051928973985, 0.}, {0.18550736122363592, 338},
       RoundingRadius->0], 
      RectangleBox[{0.18550736122363592, 0.}, {0.18992420315753203, 315},
       RoundingRadius->0], 
      RectangleBox[{0.18992420315753203, 0.}, {0.19434104509142813, 283},
       RoundingRadius->0], 
      RectangleBox[{0.19434104509142813, 0.}, {0.1987578870253242, 262},
       RoundingRadius->0], 
      RectangleBox[{0.1987578870253242, 0.}, {0.2031747289592203, 239},
       RoundingRadius->0], 
      RectangleBox[{0.2031747289592203, 0.}, {0.2075915708931164, 232},
       RoundingRadius->0], 
      RectangleBox[{0.2075915708931164, 0.}, {0.2120084128270125, 197},
       RoundingRadius->0], 
      RectangleBox[{0.2120084128270125, 0.}, {0.2164252547609086, 166},
       RoundingRadius->0], 
      RectangleBox[{0.2164252547609086, 0.}, {0.22084209669480467, 154},
       RoundingRadius->0], 
      RectangleBox[{0.22084209669480467, 0.}, {0.22525893862870078, 150},
       RoundingRadius->0], 
      RectangleBox[{0.22525893862870078, 0.}, {0.22967578056259685, 131},
       RoundingRadius->0], 
      RectangleBox[{0.22967578056259685, 0.}, {0.23409262249649296, 90},
       RoundingRadius->0], 
      RectangleBox[{0.23409262249649296, 0.}, {0.23850946443038906, 92},
       RoundingRadius->0], 
      RectangleBox[{0.23850946443038906, 0.}, {0.24292630636428514, 82},
       RoundingRadius->0], 
      RectangleBox[{0.24292630636428514, 0.}, {0.24734314829818124, 88},
       RoundingRadius->0], 
      RectangleBox[{0.24734314829818124, 0.}, {0.25175999023207735, 63},
       RoundingRadius->0], 
      RectangleBox[{0.25175999023207735, 0.}, {0.2561768321659734, 65},
       RoundingRadius->0], 
      RectangleBox[{0.2561768321659734, 0.}, {0.2605936740998695, 54},
       RoundingRadius->0], 
      RectangleBox[{0.2605936740998695, 0.}, {0.26501051603376563, 42},
       RoundingRadius->0], 
      RectangleBox[{0.26501051603376563, 0.}, {0.2694273579676617, 32},
       RoundingRadius->0], 
      RectangleBox[{0.2694273579676617, 0.}, {0.2738441999015578, 28},
       RoundingRadius->0], 
      RectangleBox[{0.2738441999015578, 0.}, {0.2782610418354539, 35},
       RoundingRadius->0], 
      RectangleBox[{0.2782610418354539, 0.}, {0.28267788376935, 32},
       RoundingRadius->0], 
      RectangleBox[{0.28267788376935, 0.}, {0.28709472570324607, 42},
       RoundingRadius->0], 
      RectangleBox[{0.28709472570324607, 0.}, {0.2915115676371422, 21},
       RoundingRadius->0], 
      RectangleBox[{0.2915115676371422, 0.}, {0.2959284095710383, 17},
       RoundingRadius->0], 
      RectangleBox[{0.2959284095710383, 0.}, {0.30034525150493435, 24},
       RoundingRadius->0], 
      RectangleBox[{0.30034525150493435, 0.}, {0.3047620934388305, 14},
       RoundingRadius->0], 
      RectangleBox[{0.3047620934388305, 0.}, {0.30917893537272656, 13},
       RoundingRadius->0], 
      RectangleBox[{0.30917893537272656, 0.}, {0.31359577730662264, 18},
       RoundingRadius->0], 
      RectangleBox[{0.31359577730662264, 0.}, {0.3180126192405187, 10},
       RoundingRadius->0], 
      RectangleBox[{0.3180126192405187, 0.}, {0.32242946117441484, 11},
       RoundingRadius->0], 
      RectangleBox[{0.32242946117441484, 0.}, {0.3268463031083109, 5},
       RoundingRadius->0], 
      RectangleBox[{0.3268463031083109, 0.}, {0.331263145042207, 14},
       RoundingRadius->0], 
      RectangleBox[{0.331263145042207, 0.}, {0.33567998697610313, 10},
       RoundingRadius->0], 
      RectangleBox[{0.33567998697610313, 0.}, {0.3400968289099992, 4},
       RoundingRadius->0], 
      RectangleBox[{0.3400968289099992, 0.}, {0.3445136708438953, 5},
       RoundingRadius->0], 
      RectangleBox[{0.3445136708438953, 0.}, {0.3489305127777914, 4},
       RoundingRadius->0], 
      RectangleBox[{0.3489305127777914, 0.}, {0.3533473547116875, 2},
       RoundingRadius->0], 
      RectangleBox[{0.3533473547116875, 0.}, {0.35776419664558357, 3},
       RoundingRadius->0], 
      RectangleBox[{0.35776419664558357, 0.}, {0.3621810385794797, 7},
       RoundingRadius->0], 
      RectangleBox[{0.3665978805133758, 0.}, {0.37101472244727185, 1},
       RoundingRadius->0], 
      RectangleBox[{0.37101472244727185, 0.}, {0.375431564381168, 1},
       RoundingRadius->0], 
      RectangleBox[{0.38426524824896013, 0.}, {0.38868209018285627, 1},
       RoundingRadius->0], 
      RectangleBox[{0.39309893211675234, 0.}, {0.3975157740506484, 2},
       RoundingRadius->0]}, {}, {}}, {{}, 
     {RGBColor[0.7, 0., 0.], Opacity[0.5], EdgeForm[Opacity[0.]], 
      RectangleBox[{0., 0.}, {0.004416841933896094, 3293},
       RoundingRadius->0], 
      RectangleBox[{0.004416841933896094, 0.}, {0.008833683867792187, 3631},
       RoundingRadius->0], 
      RectangleBox[{0.008833683867792187, 0.}, {0.01325052580168828, 3672},
       RoundingRadius->0], 
      RectangleBox[{0.01325052580168828, 0.}, {0.017667367735584374, 3936},
       RoundingRadius->0], 
      RectangleBox[{0.017667367735584374, 0.}, {0.022084209669480468, 3994},
       RoundingRadius->0], 
      RectangleBox[{0.022084209669480468, 0.}, {0.02650105160337656, 3853},
       RoundingRadius->0], 
      RectangleBox[{0.02650105160337656, 0.}, {0.030917893537272655, 4032},
       RoundingRadius->0], 
      RectangleBox[{0.030917893537272655, 0.}, {0.03533473547116875, 3947},
       RoundingRadius->0], 
      RectangleBox[{0.03533473547116875, 0.}, {0.03975157740506484, 3963},
       RoundingRadius->0], 
      RectangleBox[{0.03975157740506484, 0.}, {0.044168419338960936, 3955},
       RoundingRadius->0], 
      RectangleBox[{0.044168419338960936, 0.}, {0.04858526127285703, 3727},
       RoundingRadius->0], 
      RectangleBox[{0.04858526127285703, 0.}, {0.05300210320675312, 3745},
       RoundingRadius->0], 
      RectangleBox[{0.05300210320675312, 0.}, {0.057418945140649214, 3570},
       RoundingRadius->0], 
      RectangleBox[{0.057418945140649214, 0.}, {0.06183578707454531, 3545},
       RoundingRadius->0], 
      RectangleBox[{0.06183578707454531, 0.}, {0.06625262900844141, 3394},
       RoundingRadius->0], 
      RectangleBox[{0.06625262900844141, 0.}, {0.0706694709423375, 3314},
       RoundingRadius->0], 
      RectangleBox[{0.0706694709423375, 0.}, {0.07508631287623359, 3099},
       RoundingRadius->0], 
      RectangleBox[{0.07508631287623359, 0.}, {0.07950315481012968, 2941},
       RoundingRadius->0], 
      RectangleBox[{0.07950315481012968, 0.}, {0.08391999674402578, 2808},
       RoundingRadius->0], 
      RectangleBox[{0.08391999674402578, 0.}, {0.08833683867792187, 2622},
       RoundingRadius->0], 
      RectangleBox[{0.08833683867792187, 0.}, {0.09275368061181796, 2425},
       RoundingRadius->0], 
      RectangleBox[{0.09275368061181796, 0.}, {0.09717052254571407, 2200},
       RoundingRadius->0], 
      RectangleBox[{0.09717052254571407, 0.}, {0.10158736447961016, 2158},
       RoundingRadius->0], 
      RectangleBox[{0.10158736447961016, 0.}, {0.10600420641350625, 2037},
       RoundingRadius->0], 
      RectangleBox[{0.10600420641350625, 0.}, {0.11042104834740234, 1804},
       RoundingRadius->0], 
      RectangleBox[{0.11042104834740234, 0.}, {0.11483789028129843, 1713},
       RoundingRadius->0], 
      RectangleBox[{0.11483789028129843, 0.}, {0.11925473221519453, 1601},
       RoundingRadius->0], 
      RectangleBox[{0.11925473221519453, 0.}, {0.12367157414909062, 1408},
       RoundingRadius->0], 
      RectangleBox[{0.12367157414909062, 0.}, {0.1280884160829867, 1334},
       RoundingRadius->0], 
      RectangleBox[{0.1280884160829867, 0.}, {0.13250525801688282, 1183},
       RoundingRadius->0], 
      RectangleBox[{0.13250525801688282, 0.}, {0.1369220999507789, 1073},
       RoundingRadius->0], 
      RectangleBox[{0.1369220999507789, 0.}, {0.141338941884675, 1021},
       RoundingRadius->0], 
      RectangleBox[{0.141338941884675, 0.}, {0.1457557838185711, 934},
       RoundingRadius->0], 
      RectangleBox[{0.1457557838185711, 0.}, {0.15017262575246718, 889},
       RoundingRadius->0], 
      RectangleBox[{0.15017262575246718, 0.}, {0.15458946768636328, 752},
       RoundingRadius->0], 
      RectangleBox[{0.15458946768636328, 0.}, {0.15900630962025936, 685},
       RoundingRadius->0], 
      RectangleBox[{0.15900630962025936, 0.}, {0.16342315155415546, 611},
       RoundingRadius->0], 
      RectangleBox[{0.16342315155415546, 0.}, {0.16783999348805156, 563},
       RoundingRadius->0], 
      RectangleBox[{0.16783999348805156, 0.}, {0.17225683542194764, 547},
       RoundingRadius->0], 
      RectangleBox[{0.17225683542194764, 0.}, {0.17667367735584374, 444},
       RoundingRadius->0], 
      RectangleBox[{0.17667367735584374, 0.}, {0.18109051928973985, 418},
       RoundingRadius->0], 
      RectangleBox[{0.18109051928973985, 0.}, {0.18550736122363592, 367},
       RoundingRadius->0], 
      RectangleBox[{0.18550736122363592, 0.}, {0.18992420315753203, 348},
       RoundingRadius->0], 
      RectangleBox[{0.18992420315753203, 0.}, {0.19434104509142813, 305},
       RoundingRadius->0], 
      RectangleBox[{0.19434104509142813, 0.}, {0.1987578870253242, 277},
       RoundingRadius->0], 
      RectangleBox[{0.1987578870253242, 0.}, {0.2031747289592203, 249},
       RoundingRadius->0], 
      RectangleBox[{0.2031747289592203, 0.}, {0.2075915708931164, 197},
       RoundingRadius->0], 
      RectangleBox[{0.2075915708931164, 0.}, {0.2120084128270125, 185},
       RoundingRadius->0], 
      RectangleBox[{0.2120084128270125, 0.}, {0.2164252547609086, 162},
       RoundingRadius->0], 
      RectangleBox[{0.2164252547609086, 0.}, {0.22084209669480467, 122},
       RoundingRadius->0], 
      RectangleBox[{0.22084209669480467, 0.}, {0.22525893862870078, 115},
       RoundingRadius->0], 
      RectangleBox[{0.22525893862870078, 0.}, {0.22967578056259685, 113},
       RoundingRadius->0], 
      RectangleBox[{0.22967578056259685, 0.}, {0.23409262249649296, 90},
       RoundingRadius->0], 
      RectangleBox[{0.23409262249649296, 0.}, {0.23850946443038906, 100},
       RoundingRadius->0], 
      RectangleBox[{0.23850946443038906, 0.}, {0.24292630636428514, 88},
       RoundingRadius->0], 
      RectangleBox[{0.24292630636428514, 0.}, {0.24734314829818124, 53},
       RoundingRadius->0], 
      RectangleBox[{0.24734314829818124, 0.}, {0.25175999023207735, 40},
       RoundingRadius->0], 
      RectangleBox[{0.25175999023207735, 0.}, {0.2561768321659734, 47},
       RoundingRadius->0], 
      RectangleBox[{0.2561768321659734, 0.}, {0.2605936740998695, 40},
       RoundingRadius->0], 
      RectangleBox[{0.2605936740998695, 0.}, {0.26501051603376563, 42},
       RoundingRadius->0], 
      RectangleBox[{0.26501051603376563, 0.}, {0.2694273579676617, 37},
       RoundingRadius->0], 
      RectangleBox[{0.2694273579676617, 0.}, {0.2738441999015578, 27},
       RoundingRadius->0], 
      RectangleBox[{0.2738441999015578, 0.}, {0.2782610418354539, 23},
       RoundingRadius->0], 
      RectangleBox[{0.2782610418354539, 0.}, {0.28267788376935, 28},
       RoundingRadius->0], 
      RectangleBox[{0.28267788376935, 0.}, {0.28709472570324607, 17},
       RoundingRadius->0], 
      RectangleBox[{0.28709472570324607, 0.}, {0.2915115676371422, 12},
       RoundingRadius->0], 
      RectangleBox[{0.2915115676371422, 0.}, {0.2959284095710383, 15},
       RoundingRadius->0], 
      RectangleBox[{0.2959284095710383, 0.}, {0.30034525150493435, 8},
       RoundingRadius->0], 
      RectangleBox[{0.30034525150493435, 0.}, {0.3047620934388305, 10},
       RoundingRadius->0], 
      RectangleBox[{0.3047620934388305, 0.}, {0.30917893537272656, 8},
       RoundingRadius->0], 
      RectangleBox[{0.30917893537272656, 0.}, {0.31359577730662264, 4},
       RoundingRadius->0], 
      RectangleBox[{0.31359577730662264, 0.}, {0.3180126192405187, 3},
       RoundingRadius->0], 
      RectangleBox[{0.3180126192405187, 0.}, {0.32242946117441484, 8},
       RoundingRadius->0], 
      RectangleBox[{0.32242946117441484, 0.}, {0.3268463031083109, 5},
       RoundingRadius->0], 
      RectangleBox[{0.3268463031083109, 0.}, {0.331263145042207, 3},
       RoundingRadius->0], 
      RectangleBox[{0.33567998697610313, 0.}, {0.3400968289099992, 1},
       RoundingRadius->0], 
      RectangleBox[{0.3445136708438953, 0.}, {0.3489305127777914, 2},
       RoundingRadius->0], 
      RectangleBox[{0.3489305127777914, 0.}, {0.3533473547116875, 4},
       RoundingRadius->0], 
      RectangleBox[{0.35776419664558357, 0.}, {0.3621810385794797, 1},
       RoundingRadius->0], 
      RectangleBox[{0.3665978805133758, 0.}, {0.37101472244727185, 1},
       RoundingRadius->0], 
      RectangleBox[{0.38868209018285627, 0.}, {0.39309893211675234, 1},
       RoundingRadius->0], 
      RectangleBox[{0.43726735145571327, 0.}, {0.44168419338960935, 1},
       RoundingRadius->
        0]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}, {{{}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {}}, {{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*StyleBox[\\\"\[Gamma]\\\",FontFamily->\\\"Times New \
Roman\\\",FontSize->19,FontWeight->\\\"Regular\\\",FontSlant->\\\"Italic\\\"]\
\\)\"", TraditionalForm], None},
  AxesOrigin->{-0.008833683867792187, 0.},
  AxesStyle->{
    Arrowheads[{0, 0.02}], Automatic},
  Epilog->InsetBox[
    BoxData[
     FormBox[
      FrameBox[
       RowBox[{
         TagBox[
          GridBox[{{
             StyleBox[
              TagBox[
               SubscriptBox[
                OverscriptBox["\[Gamma]", "_"], "2"], HoldForm], 14, 
              StripOnInput -> False], 
             StyleBox[
              RowBox[{"\"=\"", " ", 
                TagBox[
                 InterpretationBox[
                  StyleBox["\"0.05822\"", ShowStringCharacters -> False], 
                  0.05822300975523658, AutoDelete -> True], 
                 NumberForm[#, 4]& ]}], 14, StripOnInput -> False]}, {
             StyleBox[
              TagBox[
               SubscriptBox[
                OverscriptBox["\[Gamma]", "_"], "4"], HoldForm], 14, 
              StripOnInput -> False], 
             StyleBox[
              RowBox[{"\"=\"", " ", 
                TagBox[
                 InterpretationBox[
                  StyleBox["\"0.06135\"", ShowStringCharacters -> False], 
                  0.061347748830346396`, AutoDelete -> True], 
                 NumberForm[#, 4]& ]}], 14, StripOnInput -> False]}, {
             StyleBox[
              TagBox[
               SubscriptBox[
                OverscriptBox["\[Gamma]", "_"], "6"], HoldForm], 14, 
              StripOnInput -> False], 
             StyleBox[
              RowBox[{"\"=\"", " ", 
                TagBox[
                 InterpretationBox[
                  StyleBox["\"0.06797\"", ShowStringCharacters -> False], 
                  0.06797099143192283, AutoDelete -> True], 
                 NumberForm[#, 4]& ]}], 14, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         " ", 
         TemplateBox[{
           StyleBox["\"N=2\"", 15, StripOnInput -> False], 
           StyleBox["\"N=4\"", 15, StripOnInput -> False], 
           StyleBox["\"N=6\"", 15, StripOnInput -> False]}, "SwatchLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {14, 14}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {14, 14}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.2142857142857143] -> 
                    Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.8]], 
                    RectangleBox[{0, 0}, {14, 14}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {14, 14}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.2142857142857143] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0., 0.]], 
                    RectangleBox[{0, 0}, {14, 14}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {14, 14}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.2142857142857143] -> 
                    Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0., 0.5, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0., 0., 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.7, 0., 0.]|>, 
                    "RGBColorSwatchTemplate"]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"14", ",", "14"}], "}"}]}]}], "]"}]& ), Editable -> 
          True]}], RoundingRadius -> 1, StripOnInput -> False], 
      TraditionalForm]], 
    Scaled[{0.78, 0.66}]],
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->500,
  LabelStyle->Directive[FontFamily -> "Times New Roman", FontSize -> 13, 
    GrayLevel[0]],
  PlotRange->{{0., 0.44168419338960935`}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{0.1, 
      FormBox["\"0.10\"", TraditionalForm]}, {0.2, 
      FormBox["\"0.20\"", TraditionalForm]}, {0.3, 
      FormBox["\"0.30\"", TraditionalForm]}, {0.4, 
      FormBox["\"0.40\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.914375681935129*^9, 3.914376229001719*^9, {3.914377104173044*^9, 
   3.9143771271407413`*^9}, 3.914378247137583*^9, {3.914378281421322*^9, 
   3.91437830614605*^9}, {3.914378448946068*^9, 3.914378456359304*^9}, 
   3.914378527629513*^9, 3.9143793005378857`*^9, 3.914380433610503*^9, {
   3.914380502277673*^9, 3.914380635713181*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"01f433de-5ada-4050-8b71-eb1aa3dd3598"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Fig. 2 of ",
  FontWeight->"Bold"],
 StyleBox[ButtonBox["arXiv:2312.16281 [quant-ph]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://arxiv.org/abs/2312.16281"], None},
  ButtonNote->"https://arxiv.org/abs/2312.16281"],
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.908495668579028*^9, 3.9084957146491632`*^9}, {
  3.908505406435141*^9, 3.908505414412047*^9}, {3.908506503455553*^9, 
  3.908506780873376*^9}, {3.908506836569005*^9, 3.908506878472286*^9}, {
  3.908507172364501*^9, 3.908507213851144*^9}, {3.908509624179714*^9, 
  3.9085096377566767`*^9}, {3.908586730051643*^9, 3.908586748461673*^9}, {
  3.912666716272735*^9, 3.912666739136765*^9}, {3.91275542491562*^9, 
  3.912755425461276*^9}, {3.914373372368024*^9, 3.9143733755972843`*^9}, {
  3.9143734059908323`*^9, 3.9143734327140017`*^9}, {3.914374192227314*^9, 
  3.914374192323492*^9}},ExpressionUUID->"34c8a57b-e78a-428d-837f-\
51af8852e631"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"HistN2", ",", "HistN4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"HistN6", ",", "HistN246"}], "}"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1040"}], ",", 
   RowBox[{"Spacings", "->", 
    RowBox[{"-", "35"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.914378497513255*^9, 3.914378497516946*^9}, {
  3.914378530000739*^9, 3.914378540631261*^9}, {3.914379310047608*^9, 
  3.914379331391795*^9}, {3.914379458466731*^9, 3.914379496552573*^9}, {
  3.914379606105616*^9, 3.914379619483322*^9}, {3.9143796690279837`*^9, 
  3.91437974174916*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"7ff41ec0-c1c2-412a-b376-28953097efe6"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[Opacity[0.]], {}, 
         {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
          EdgeForm[Opacity[0.]], 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0., 0}, {0.002, 3049.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.002, 0}, {0.004, 2941.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.004, 0}, {0.006, 2843.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.006, 0}, {0.008, 2595.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.008, 0}, {0.01, 2563.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.01, 0}, {0.012, 2529.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.012, 0}, {0.014, 2423.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.014, 0}, {0.016, 2310.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.016, 0}, {0.018, 2234.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.018, 0}, {0.02, 2123.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.02, 0}, {0.022, 2158.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.022, 0}, {0.024, 2076.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.024, 0}, {0.026, 2018.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.026, 0}, {0.028, 1880.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.028, 0}, {0.03, 1921.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.03, 0}, {0.032, 1863.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.032, 0}, {0.034, 1835.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.034, 0}, {0.036, 1739.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.036, 0}, {0.038, 1794.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.038, 0}, {0.04, 1752.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.04, 0}, {0.042, 1590.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.042, 0}, {0.044, 1603.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.044, 0}, {0.046, 1550.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.046, 0}, {0.048, 1496.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.048, 0}, {0.05, 1425.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.05, 0}, {0.052, 1415.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.052, 0}, {0.054, 1434.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.054, 0}, {0.056, 1365.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.056, 0}, {0.058, 1363.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.058, 0}, {0.06, 1337.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.06, 0}, {0.062, 1282.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.062, 0}, {0.064, 1260.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.064, 0}, {0.066, 1237.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.066, 0}, {0.068, 1179.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.068, 0}, {0.07, 1199.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.07, 0}, {0.072, 1186.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.072, 0}, {0.074, 1140.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.074, 0}, {0.076, 1127.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.076, 0}, {0.078, 1127.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.078, 0}, {0.08, 941.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.08, 0}, {0.082, 1055.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.082, 0}, {0.084, 1012.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.084, 0}, {0.086, 1001.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.086, 0}, {0.088, 976.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.088, 0}, {0.09, 952.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.09, 0}, {0.092, 874.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.092, 0}, {0.094, 880.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.094, 0}, {0.096, 859.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.096, 0}, {0.098, 812.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.098, 0}, {0.1, 860.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.1, 0}, {0.102, 816.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.102, 0}, {0.104, 788.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.104, 0}, {0.106, 770.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.106, 0}, {0.108, 786.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.108, 0}, {0.11, 733.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.11, 0}, {0.112, 744.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.112, 0}, {0.114, 738.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.114, 0}, {0.116, 669.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.116, 0}, {0.118, 630.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.118, 0}, {0.12, 645.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.12, 0}, {0.122, 585.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.122, 0}, {0.124, 642.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.124, 0}, {0.126, 577.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.126, 0}, {0.128, 570.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.128, 0}, {0.13, 520.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.13, 0}, {0.132, 534.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.132, 0}, {0.134, 482.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.134, 0}, {0.136, 470.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.136, 0}, {0.138, 490.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.138, 0}, {0.14, 474.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.14, 0}, {0.142, 427.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.142, 0}, {0.144, 447.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.144, 0}, {0.146, 371.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.146, 0}, {0.148, 394.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.148, 0}, {0.15, 384.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.15, 0}, {0.152, 380.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.152, 0}, {0.154, 337.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.154, 0}, {0.156, 349.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.156, 0}, {0.158, 309.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.158, 0}, {0.16, 304.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.16, 0}, {0.162, 309.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.162, 0}, {0.164, 274.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.164, 0}, {0.166, 269.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.166, 0}, {0.168, 260.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.168, 0}, {0.17, 257.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.17, 0}, {0.172, 236.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.172, 0}, {0.174, 204.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.174, 0}, {0.176, 172.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.176, 0}, {0.178, 190.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.178, 0}, {0.18, 192.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.18, 0}, {0.182, 160.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.182, 0}, {0.184, 133.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.184, 0}, {0.186, 143.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.186, 0}, {0.188, 123.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.188, 0}, {0.19, 94.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.19, 0}, {0.192, 96.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.192, 0}, {0.194, 88.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.194, 0}, {0.196, 72.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.196, 0}, {0.198, 65.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.198, 0}, {0.2, 50.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.2, 0}, {0.202, 32.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.202, 0}, {0.204, 21.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.204, 0}, {0.206, 11.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.6], 
           RectangleBox[{0.206, 0}, {0.208, 1.},
            
            RoundingRadius->
             0]}}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
         "\"\\!\\(\\*StyleBox[\\\"\[Gamma]\\\",FontFamily->\\\"Times New \
Roman\\\",FontSize->19,FontWeight->\\\"Regular\\\",FontSlant->\\\"Italic\\\"]\
\\)\"", TraditionalForm], None},
       AxesOrigin->{-0.00416, 0},
       AxesStyle->{
         Arrowheads[{0, 0.03}], Automatic},
       DisplayFunction->Identity,
       Epilog->{
         InsetBox[
          BoxData[
           FormBox[
            FrameBox[
             StyleBox[
              RowBox[{"\"Mean:\"", " ", 
                TagBox[
                 SubscriptBox[
                  OverscriptBox["\[Gamma]", "_"], "2"], HoldForm], " ", 
                InterpretationBox[
                 Cell[
                  BoxData[
                   FormBox[
                    RowBox[{"\"=\"", " ", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.05822\"", ShowStringCharacters -> False], 
                    0.05822300975523658, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}], TextForm]], "InlineText"], 
                 Text["=" NumberForm[0.05822300975523658, 4]]]}], 14, 
              StripOnInput -> False], RoundingRadius -> 2, StripOnInput -> 
             False], TraditionalForm]], 
          Scaled[{0.85, 0.7}]], 
         InsetBox[
          BoxData[
           FormBox[
            FrameBox[
             StyleBox["\"N=2\"", 14, StripOnInput -> False], RoundingRadius -> 
             2, StripOnInput -> False], TraditionalForm]], 
          Scaled[{0.96, 0.85}]]},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{36., 36.}, {36., 36.}},
       ImageSize->500,
       LabelStyle->Directive[
        FontFamily -> "Times New Roman", FontSize -> 13, 
         GrayLevel[0]],
       PlotRange->{{0., 0.208}, {All, All}},
       PlotRangeClipping->False,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], 
      NCache[{Rational[465, 2], -137.0084971874737}, {
       232.5, -137.0084971874737}], 
      ImageScaled[{0.5, 0.5}], {500, 309.0169943749474}], InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.13999999999999999`], Thickness[Small]}], {}, 
         {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
          EdgeForm[{Opacity[0.13999999999999999`], Thickness[Small]}], 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0., 0}, {0.005, 5922.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.005, 0}, {0.01, 5918.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.01, 0}, {0.015, 5798.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.015, 0}, {0.02, 5625.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.02, 0}, {0.025, 5321.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.025, 0}, {0.03, 5065.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.03, 0}, {0.035, 4739.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.035, 0}, {0.04, 4582.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.04, 0}, {0.045, 4412.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.045, 0}, {0.05, 4162.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.05, 0}, {0.055, 3845.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.055, 0}, {0.06, 3678.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.06, 0}, {0.065, 3401.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.065, 0}, {0.07, 3032.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.07, 0}, {0.075, 2960.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.075, 0}, {0.08, 2731.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.08, 0}, {0.085, 2588.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.085, 0}, {0.09, 2432.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.09, 0}, {0.095, 2164.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.095, 0}, {0.1, 2026.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.1, 0}, {0.105, 1822.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.105, 0}, {0.11, 1645.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.11, 0}, {0.115, 1573.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.115, 0}, {0.12, 1481.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.12, 0}, {0.125, 1299.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.125, 0}, {0.13, 1182.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.13, 0}, {0.135, 1052.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.135, 0}, {0.14, 1023.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.14, 0}, {0.145, 872.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.145, 0}, {0.15, 792.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.15, 0}, {0.155, 740.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.155, 0}, {0.16, 634.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.16, 0}, {0.165, 589.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.165, 0}, {0.17, 521.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.17, 0}, {0.175, 449.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.175, 0}, {0.18, 434.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.18, 0}, {0.185, 397.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.185, 0}, {0.19, 354.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.19, 0}, {0.195, 321.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.195, 0}, {0.2, 302.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.2, 0}, {0.205, 250.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.205, 0}, {0.21, 241.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.21, 0}, {0.215, 204.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.215, 0}, {0.22, 182.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.22, 0}, {0.225, 168.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.225, 0}, {0.23, 146.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.23, 0}, {0.235, 107.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.235, 0}, {0.24, 101.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.24, 0}, {0.245, 99.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.245, 0}, {0.25, 78.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.25, 0}, {0.255, 68.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.255, 0}, {0.26, 72.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.26, 0}, {0.265, 44.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.265, 0}, {0.27, 39.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.27, 0}, {0.275, 32.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.275, 0}, {0.28, 38.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.28, 0}, {0.285, 42.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.285, 0}, {0.29, 32.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.29, 0}, {0.295, 23.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.295, 0}, {0.3, 24.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.3, 0}, {0.305, 16.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.305, 0}, {0.31, 16.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.31, 0}, {0.315, 17.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.315, 0}, {0.32, 15.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.32, 0}, {0.325, 8.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.325, 0}, {0.33, 7.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.33, 0}, {0.335, 16.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.335, 0}, {0.34, 6.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.34, 0}, {0.345, 7.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.345, 0}, {0.35, 3.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.35, 0}, {0.355, 3.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.355, 0}, {0.36, 6.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.36, 0}, {0.365, 2.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.365, 0}, {0.37, 1.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.37, 0}, {0.375, 1.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.385, 0}, {0.39, 1.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.39, 0}, {0.395, 1.},
            RoundingRadius->0]}, 
          {RGBColor[0., 0., 0.8], Opacity[0.65], 
           RectangleBox[{0.395, 0}, {0.4, 1.},
            
            RoundingRadius->
             0]}}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
         "\"\\!\\(\\*StyleBox[\\\"\[Gamma]\\\",FontFamily->\\\"Times New \
Roman\\\",FontSize->19,FontWeight->\\\"Regular\\\",FontSlant->\\\"Italic\\\"]\
\\)\"", TraditionalForm], None},
       AxesOrigin->{-0.008, 0},
       AxesStyle->{
         Arrowheads[{0, 0.03}], Automatic},
       DisplayFunction->Identity,
       Epilog->{
         InsetBox[
          BoxData[
           FormBox[
            FrameBox[
             StyleBox[
              RowBox[{"\"Mean:\"", " ", 
                TagBox[
                 SubscriptBox[
                  OverscriptBox["\[Gamma]", "_"], "4"], HoldForm], " ", 
                InterpretationBox[
                 Cell[
                  BoxData[
                   FormBox[
                    RowBox[{"\"=\"", " ", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.06135\"", ShowStringCharacters -> False], 
                    0.061347748830346396`, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}], TextForm]], "InlineText"], 
                 Text["=" NumberForm[0.061347748830346396`, 4]]]}], 14, 
              StripOnInput -> False], RoundingRadius -> 2, StripOnInput -> 
             False], TraditionalForm]], 
          Scaled[{0.85, 0.7}]], 
         InsetBox[
          BoxData[
           FormBox[
            FrameBox[
             StyleBox["\"N=4\"", 14, StripOnInput -> False], RoundingRadius -> 
             2, StripOnInput -> False], TraditionalForm]], 
          Scaled[{0.96, 0.85}]]},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{36., 36.}, {36., 36.}},
       ImageSize->500,
       LabelStyle->Directive[
        FontFamily -> "Times New Roman", FontSize -> 13, 
         GrayLevel[0]],
       PlotRange->{{0., 0.4}, {All, All}},
       PlotRangeClipping->False,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{{{0.1, 
           FormBox["\"0.10\"", TraditionalForm]}, {0.2, 
           FormBox["\"0.20\"", TraditionalForm]}, {0.3, 
           FormBox["\"0.30\"", TraditionalForm]}}, Automatic}], 
      NCache[{Rational[1395, 2], -137.0084971874737}, {
       697.5, -137.0084971874737}], 
      ImageScaled[{0.5, 0.5}], {500, 309.0169943749474}]}, {InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.08399999999999999], Thickness[Small]}], {}, 
         {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
          EdgeForm[{Opacity[0.08399999999999999], Thickness[Small]}], 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0., 0}, {0.005, 3747.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.005, 0}, {0.01, 4157.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.01, 0}, {0.015, 4255.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.015, 0}, {0.02, 4488.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.02, 0}, {0.025, 4413.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.025, 0}, {0.03, 4539.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.03, 0}, {0.035, 4489.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.035, 0}, {0.04, 4466.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.04, 0}, {0.045, 4438.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.045, 0}, {0.05, 4167.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.05, 0}, {0.055, 4206.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.055, 0}, {0.06, 4035.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.06, 0}, {0.065, 3917.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.065, 0}, {0.07, 3761.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.07, 0}, {0.075, 3532.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.075, 0}, {0.08, 3358.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.08, 0}, {0.085, 3116.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.085, 0}, {0.09, 2865.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.09, 0}, {0.095, 2658.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.095, 0}, {0.1, 2477.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.1, 0}, {0.105, 2313.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.105, 0}, {0.11, 2107.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.11, 0}, {0.115, 1926.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.115, 0}, {0.12, 1821.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.12, 0}, {0.125, 1565.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.125, 0}, {0.13, 1438.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.13, 0}, {0.135, 1240.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.135, 0}, {0.14, 1143.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.14, 0}, {0.145, 1154.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.145, 0}, {0.15, 992.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.15, 0}, {0.155, 847.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.155, 0}, {0.16, 777.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.16, 0}, {0.165, 674.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.165, 0}, {0.17, 620.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.17, 0}, {0.175, 580.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.175, 0}, {0.18, 461.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.18, 0}, {0.185, 436.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.185, 0}, {0.19, 385.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.19, 0}, {0.195, 344.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.195, 0}, {0.2, 308.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.2, 0}, {0.205, 264.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.205, 0}, {0.21, 226.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.21, 0}, {0.215, 175.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.215, 0}, {0.22, 156.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.22, 0}, {0.225, 128.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.225, 0}, {0.23, 129.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.23, 0}, {0.235, 106.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.235, 0}, {0.24, 108.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.24, 0}, {0.245, 81.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.245, 0}, {0.25, 49.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.25, 0}, {0.255, 53.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.255, 0}, {0.26, 45.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.26, 0}, {0.265, 46.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.265, 0}, {0.27, 41.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.27, 0}, {0.275, 28.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.275, 0}, {0.28, 27.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.28, 0}, {0.285, 28.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.285, 0}, {0.29, 17.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.29, 0}, {0.295, 14.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.295, 0}, {0.3, 11.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.3, 0}, {0.305, 11.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.305, 0}, {0.31, 8.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.31, 0}, {0.315, 5.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.315, 0}, {0.32, 5.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.32, 0}, {0.325, 7.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.325, 0}, {0.33, 6.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.335, 0}, {0.34, 1.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.34, 0}, {0.345, 1.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.345, 0}, {0.35, 3.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.35, 0}, {0.355, 2.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.355, 0}, {0.36, 1.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.365, 0}, {0.37, 1.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.39, 0}, {0.395, 1.},
            RoundingRadius->0]}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], 
           RectangleBox[{0.435, 0}, {0.44, 1.},
            
            RoundingRadius->
             0]}}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
         "\"\\!\\(\\*StyleBox[\\\"\[Gamma]\\\",FontFamily->\\\"Times New \
Roman\\\",FontSize->19,FontWeight->\\\"Regular\\\",FontSlant->\\\"Italic\\\"]\
\\)\"", TraditionalForm], None},
       AxesOrigin->{-0.0088, 0},
       AxesStyle->{
         Arrowheads[{0, 0.03}], Automatic},
       DisplayFunction->Identity,
       Epilog->{
         InsetBox[
          BoxData[
           FormBox[
            FrameBox[
             StyleBox[
              RowBox[{"\"Mean:\"", " ", 
                TagBox[
                 SubscriptBox[
                  OverscriptBox["\[Gamma]", "_"], "6"], HoldForm], " ", 
                InterpretationBox[
                 Cell[
                  BoxData[
                   FormBox[
                    RowBox[{"\"=\"", " ", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.06797\"", ShowStringCharacters -> False], 
                    0.06797099143192283, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}], TextForm]], "InlineText"], 
                 Text["=" NumberForm[0.06797099143192283, 4]]]}], 14, 
              StripOnInput -> False], RoundingRadius -> 2, StripOnInput -> 
             False], TraditionalForm]], 
          Scaled[{0.85, 0.7}]], 
         InsetBox[
          BoxData[
           FormBox[
            FrameBox[
             StyleBox["\"N=6\"", 14, StripOnInput -> False], RoundingRadius -> 
             2, StripOnInput -> False], TraditionalForm]], 
          Scaled[{0.96, 0.85}]]},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{36., 36.}, {36., 36.}},
       ImageSize->500,
       LabelStyle->Directive[
        FontFamily -> "Times New Roman", FontSize -> 13, 
         GrayLevel[0]],
       PlotRange->{{0., 0.44}, {All, All}},
       PlotRangeClipping->False,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{{{0.1, 
           FormBox["\"0.10\"", TraditionalForm]}, {0.2, 
           FormBox["\"0.20\"", TraditionalForm]}, {0.3, 
           FormBox["\"0.30\"", TraditionalForm]}, {0.4, 
           FormBox["\"0.40\"", TraditionalForm]}}, Automatic}], 
      NCache[{Rational[465, 2], -411.02549156242105`}, {
       232.5, -411.02549156242105`}], 
      ImageScaled[{0.5, 0.5}], {500, 309.0169943749474}], InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[Opacity[0.]], {{}, 
          {RGBColor[0., 0.5, 0.], Opacity[0.5], EdgeForm[Opacity[0.]], 
           RectangleBox[{0., 0.}, {0.004416841933896094, 6613},
            RoundingRadius->0], 
           RectangleBox[{0.004416841933896094, 0.}, {0.008833683867792187, 5909},
            
            RoundingRadius->0], 
           RectangleBox[{0.008833683867792187, 0.}, {0.01325052580168828, 5535},
            
            RoundingRadius->0], 
           RectangleBox[{0.01325052580168828, 0.}, {0.017667367735584374, 5070},
            
            RoundingRadius->0], 
           RectangleBox[{0.017667367735584374, 0.}, {0.022084209669480468, 4716},
            
            RoundingRadius->0], 
           RectangleBox[{0.022084209669480468, 0.}, {0.02650105160337656, 4503},
            
            RoundingRadius->0], 
           RectangleBox[{0.02650105160337656, 0.}, {0.030917893537272655, 4186},
            
            RoundingRadius->0], 
           RectangleBox[{0.030917893537272655, 0.}, {0.03533473547116875, 4003},
            
            RoundingRadius->0], 
           RectangleBox[{0.03533473547116875, 0.}, {0.03975157740506484, 3896},
            
            RoundingRadius->0], 
           RectangleBox[{0.03975157740506484, 0.}, {0.044168419338960936, 3540},
            
            RoundingRadius->0], 
           RectangleBox[{0.044168419338960936, 0.}, {0.04858526127285703, 3347},
            
            RoundingRadius->0], 
           RectangleBox[{0.04858526127285703, 0.}, {0.05300210320675312, 3138},
            
            RoundingRadius->0], 
           RectangleBox[{0.05300210320675312, 0.}, {0.057418945140649214, 3029},
            
            RoundingRadius->0], 
           RectangleBox[{0.057418945140649214, 0.}, {0.06183578707454531, 2916},
            
            RoundingRadius->0], 
           RectangleBox[{0.06183578707454531, 0.}, {0.06625262900844141, 2738},
            
            RoundingRadius->0], 
           RectangleBox[{0.06625262900844141, 0.}, {0.0706694709423375, 2595},
            
            RoundingRadius->0], 
           RectangleBox[{0.0706694709423375, 0.}, {0.07508631287623359, 2582},
            
            RoundingRadius->0], 
           RectangleBox[{0.07508631287623359, 0.}, {0.07950315481012968, 2348},
            
            RoundingRadius->0], 
           RectangleBox[{0.07950315481012968, 0.}, {0.08391999674402578, 2260},
            
            RoundingRadius->0], 
           RectangleBox[{0.08391999674402578, 0.}, {0.08833683867792187, 2196},
            
            RoundingRadius->0], 
           RectangleBox[{0.08833683867792187, 0.}, {0.09275368061181796, 1991},
            
            RoundingRadius->0], 
           RectangleBox[{0.09275368061181796, 0.}, {0.09717052254571407, 1893},
            
            RoundingRadius->0], 
           RectangleBox[{0.09717052254571407, 0.}, {0.10158736447961016, 1818},
            
            RoundingRadius->0], 
           RectangleBox[{0.10158736447961016, 0.}, {0.10600420641350625, 1737},
            
            RoundingRadius->0], 
           RectangleBox[{0.10600420641350625, 0.}, {0.11042104834740234, 1673},
            
            RoundingRadius->0], 
           RectangleBox[{0.11042104834740234, 0.}, {0.11483789028129843, 1595},
            
            RoundingRadius->0], 
           RectangleBox[{0.11483789028129843, 0.}, {0.11925473221519453, 1420},
            
            RoundingRadius->0], 
           RectangleBox[{0.11925473221519453, 0.}, {0.12367157414909062, 1378},
            
            RoundingRadius->0], 
           RectangleBox[{0.12367157414909062, 0.}, {0.1280884160829867, 1270},
            
            RoundingRadius->0], 
           RectangleBox[{0.1280884160829867, 0.}, {0.13250525801688282, 1169},
            
            RoundingRadius->0], 
           RectangleBox[{0.13250525801688282, 0.}, {0.1369220999507789, 1047},
            
            RoundingRadius->0], 
           RectangleBox[{0.1369220999507789, 0.}, {0.141338941884675, 1025},
            RoundingRadius->0], 
           RectangleBox[{0.141338941884675, 0.}, {0.1457557838185711, 904},
            RoundingRadius->0], 
           RectangleBox[{0.1457557838185711, 0.}, {0.15017262575246718, 858},
            RoundingRadius->0], 
           RectangleBox[{0.15017262575246718, 0.}, {0.15458946768636328, 786},
            
            RoundingRadius->0], 
           RectangleBox[{0.15458946768636328, 0.}, {0.15900630962025936, 721},
            
            RoundingRadius->0], 
           RectangleBox[{0.15900630962025936, 0.}, {0.16342315155415546, 642},
            
            RoundingRadius->0], 
           RectangleBox[{0.16342315155415546, 0.}, {0.16783999348805156, 593},
            
            RoundingRadius->0], 
           RectangleBox[{0.16783999348805156, 0.}, {0.17225683542194764, 550},
            
            RoundingRadius->0], 
           RectangleBox[{0.17225683542194764, 0.}, {0.17667367735584374, 413},
            
            RoundingRadius->0], 
           RectangleBox[{0.17667367735584374, 0.}, {0.18109051928973985, 389},
            
            RoundingRadius->0], 
           RectangleBox[{0.18109051928973985, 0.}, {0.18550736122363592, 321},
            
            RoundingRadius->0], 
           RectangleBox[{0.18550736122363592, 0.}, {0.18992420315753203, 249},
            
            RoundingRadius->0], 
           RectangleBox[{0.18992420315753203, 0.}, {0.19434104509142813, 199},
            
            RoundingRadius->0], 
           RectangleBox[{0.19434104509142813, 0.}, {0.1987578870253242, 144},
            RoundingRadius->0], 
           RectangleBox[{0.1987578870253242, 0.}, {0.2031747289592203, 78},
            RoundingRadius->0], 
           RectangleBox[{0.2031747289592203, 0.}, {0.2075915708931164, 17},
            RoundingRadius->0]}, {}, {}}, {{}, 
          {RGBColor[0., 0., 0.8], Opacity[0.5], EdgeForm[Opacity[0.]], 
           RectangleBox[{0., 0.}, {0.004416841933896094, 5273},
            RoundingRadius->0], 
           RectangleBox[{0.004416841933896094, 0.}, {0.008833683867792187, 5140},
            
            RoundingRadius->0], 
           RectangleBox[{0.008833683867792187, 0.}, {0.01325052580168828, 5242},
            
            RoundingRadius->0], 
           RectangleBox[{0.01325052580168828, 0.}, {0.017667367735584374, 5006},
            
            RoundingRadius->0], 
           RectangleBox[{0.017667367735584374, 0.}, {0.022084209669480468, 4883},
            
            RoundingRadius->0], 
           RectangleBox[{0.022084209669480468, 0.}, {0.02650105160337656, 4505},
            
            RoundingRadius->0], 
           RectangleBox[{0.02650105160337656, 0.}, {0.030917893537272655, 4498},
            
            RoundingRadius->0], 
           RectangleBox[{0.030917893537272655, 0.}, {0.03533473547116875, 4171},
            
            RoundingRadius->0], 
           RectangleBox[{0.03533473547116875, 0.}, {0.03975157740506484, 4017},
            
            RoundingRadius->0], 
           RectangleBox[{0.03975157740506484, 0.}, {0.044168419338960936, 3948},
            
            RoundingRadius->0], 
           RectangleBox[{0.044168419338960936, 0.}, {0.04858526127285703, 3676},
            
            RoundingRadius->0], 
           RectangleBox[{0.04858526127285703, 0.}, {0.05300210320675312, 3539},
            
            RoundingRadius->0], 
           RectangleBox[{0.05300210320675312, 0.}, {0.057418945140649214, 3277},
            
            RoundingRadius->0], 
           RectangleBox[{0.057418945140649214, 0.}, {0.06183578707454531, 3152},
            
            RoundingRadius->0], 
           RectangleBox[{0.06183578707454531, 0.}, {0.06625262900844141, 2901},
            
            RoundingRadius->0], 
           RectangleBox[{0.06625262900844141, 0.}, {0.0706694709423375, 2707},
            
            RoundingRadius->0], 
           RectangleBox[{0.0706694709423375, 0.}, {0.07508631287623359, 2582},
            
            RoundingRadius->0], 
           RectangleBox[{0.07508631287623359, 0.}, {0.07950315481012968, 2418},
            
            RoundingRadius->0], 
           RectangleBox[{0.07950315481012968, 0.}, {0.08391999674402578, 2306},
            
            RoundingRadius->0], 
           RectangleBox[{0.08391999674402578, 0.}, {0.08833683867792187, 2170},
            
            RoundingRadius->0], 
           RectangleBox[{0.08833683867792187, 0.}, {0.09275368061181796, 2002},
            
            RoundingRadius->0], 
           RectangleBox[{0.09275368061181796, 0.}, {0.09717052254571407, 1845},
            
            RoundingRadius->0], 
           RectangleBox[{0.09717052254571407, 0.}, {0.10158736447961016, 1737},
            
            RoundingRadius->0], 
           RectangleBox[{0.10158736447961016, 0.}, {0.10600420641350625, 1567},
            
            RoundingRadius->0], 
           RectangleBox[{0.10600420641350625, 0.}, {0.11042104834740234, 1462},
            
            RoundingRadius->0], 
           RectangleBox[{0.11042104834740234, 0.}, {0.11483789028129843, 1376},
            
            RoundingRadius->0], 
           RectangleBox[{0.11483789028129843, 0.}, {0.11925473221519453, 1315},
            
            RoundingRadius->0], 
           RectangleBox[{0.11925473221519453, 0.}, {0.12367157414909062, 1174},
            
            RoundingRadius->0], 
           RectangleBox[{0.12367157414909062, 0.}, {0.1280884160829867, 1062},
            
            RoundingRadius->0], 
           RectangleBox[{0.1280884160829867, 0.}, {0.13250525801688282, 978},
            RoundingRadius->0], 
           RectangleBox[{0.13250525801688282, 0.}, {0.1369220999507789, 926},
            RoundingRadius->0], 
           RectangleBox[{0.1369220999507789, 0.}, {0.141338941884675, 852},
            RoundingRadius->0], 
           RectangleBox[{0.141338941884675, 0.}, {0.1457557838185711, 757},
            RoundingRadius->0], 
           RectangleBox[{0.1457557838185711, 0.}, {0.15017262575246718, 698},
            RoundingRadius->0], 
           RectangleBox[{0.15017262575246718, 0.}, {0.15458946768636328, 653},
            
            RoundingRadius->0], 
           RectangleBox[{0.15458946768636328, 0.}, {0.15900630962025936, 583},
            
            RoundingRadius->0], 
           RectangleBox[{0.15900630962025936, 0.}, {0.16342315155415546, 542},
            
            RoundingRadius->0], 
           RectangleBox[{0.16342315155415546, 0.}, {0.16783999348805156, 465},
            
            RoundingRadius->0], 
           RectangleBox[{0.16783999348805156, 0.}, {0.17225683542194764, 423},
            
            RoundingRadius->0], 
           RectangleBox[{0.17225683542194764, 0.}, {0.17667367735584374, 404},
            
            RoundingRadius->0], 
           RectangleBox[{0.17667367735584374, 0.}, {0.18109051928973985, 369},
            
            RoundingRadius->0], 
           RectangleBox[{0.18109051928973985, 0.}, {0.18550736122363592, 338},
            
            RoundingRadius->0], 
           RectangleBox[{0.18550736122363592, 0.}, {0.18992420315753203, 315},
            
            RoundingRadius->0], 
           RectangleBox[{0.18992420315753203, 0.}, {0.19434104509142813, 283},
            
            RoundingRadius->0], 
           RectangleBox[{0.19434104509142813, 0.}, {0.1987578870253242, 262},
            RoundingRadius->0], 
           RectangleBox[{0.1987578870253242, 0.}, {0.2031747289592203, 239},
            RoundingRadius->0], 
           RectangleBox[{0.2031747289592203, 0.}, {0.2075915708931164, 232},
            RoundingRadius->0], 
           RectangleBox[{0.2075915708931164, 0.}, {0.2120084128270125, 197},
            RoundingRadius->0], 
           RectangleBox[{0.2120084128270125, 0.}, {0.2164252547609086, 166},
            RoundingRadius->0], 
           RectangleBox[{0.2164252547609086, 0.}, {0.22084209669480467, 154},
            RoundingRadius->0], 
           RectangleBox[{0.22084209669480467, 0.}, {0.22525893862870078, 150},
            
            RoundingRadius->0], 
           RectangleBox[{0.22525893862870078, 0.}, {0.22967578056259685, 131},
            
            RoundingRadius->0], 
           RectangleBox[{0.22967578056259685, 0.}, {0.23409262249649296, 90},
            RoundingRadius->0], 
           RectangleBox[{0.23409262249649296, 0.}, {0.23850946443038906, 92},
            RoundingRadius->0], 
           RectangleBox[{0.23850946443038906, 0.}, {0.24292630636428514, 82},
            RoundingRadius->0], 
           RectangleBox[{0.24292630636428514, 0.}, {0.24734314829818124, 88},
            RoundingRadius->0], 
           RectangleBox[{0.24734314829818124, 0.}, {0.25175999023207735, 63},
            RoundingRadius->0], 
           RectangleBox[{0.25175999023207735, 0.}, {0.2561768321659734, 65},
            RoundingRadius->0], 
           RectangleBox[{0.2561768321659734, 0.}, {0.2605936740998695, 54},
            RoundingRadius->0], 
           RectangleBox[{0.2605936740998695, 0.}, {0.26501051603376563, 42},
            RoundingRadius->0], 
           RectangleBox[{0.26501051603376563, 0.}, {0.2694273579676617, 32},
            RoundingRadius->0], 
           RectangleBox[{0.2694273579676617, 0.}, {0.2738441999015578, 28},
            RoundingRadius->0], 
           RectangleBox[{0.2738441999015578, 0.}, {0.2782610418354539, 35},
            RoundingRadius->0], 
           RectangleBox[{0.2782610418354539, 0.}, {0.28267788376935, 32},
            RoundingRadius->0], 
           RectangleBox[{0.28267788376935, 0.}, {0.28709472570324607, 42},
            RoundingRadius->0], 
           RectangleBox[{0.28709472570324607, 0.}, {0.2915115676371422, 21},
            RoundingRadius->0], 
           RectangleBox[{0.2915115676371422, 0.}, {0.2959284095710383, 17},
            RoundingRadius->0], 
           RectangleBox[{0.2959284095710383, 0.}, {0.30034525150493435, 24},
            RoundingRadius->0], 
           RectangleBox[{0.30034525150493435, 0.}, {0.3047620934388305, 14},
            RoundingRadius->0], 
           RectangleBox[{0.3047620934388305, 0.}, {0.30917893537272656, 13},
            RoundingRadius->0], 
           RectangleBox[{0.30917893537272656, 0.}, {0.31359577730662264, 18},
            RoundingRadius->0], 
           RectangleBox[{0.31359577730662264, 0.}, {0.3180126192405187, 10},
            RoundingRadius->0], 
           RectangleBox[{0.3180126192405187, 0.}, {0.32242946117441484, 11},
            RoundingRadius->0], 
           RectangleBox[{0.32242946117441484, 0.}, {0.3268463031083109, 5},
            RoundingRadius->0], 
           RectangleBox[{0.3268463031083109, 0.}, {0.331263145042207, 14},
            RoundingRadius->0], 
           RectangleBox[{0.331263145042207, 0.}, {0.33567998697610313, 10},
            RoundingRadius->0], 
           RectangleBox[{0.33567998697610313, 0.}, {0.3400968289099992, 4},
            RoundingRadius->0], 
           RectangleBox[{0.3400968289099992, 0.}, {0.3445136708438953, 5},
            RoundingRadius->0], 
           RectangleBox[{0.3445136708438953, 0.}, {0.3489305127777914, 4},
            RoundingRadius->0], 
           RectangleBox[{0.3489305127777914, 0.}, {0.3533473547116875, 2},
            RoundingRadius->0], 
           RectangleBox[{0.3533473547116875, 0.}, {0.35776419664558357, 3},
            RoundingRadius->0], 
           RectangleBox[{0.35776419664558357, 0.}, {0.3621810385794797, 7},
            RoundingRadius->0], 
           RectangleBox[{0.3665978805133758, 0.}, {0.37101472244727185, 1},
            RoundingRadius->0], 
           RectangleBox[{0.37101472244727185, 0.}, {0.375431564381168, 1},
            RoundingRadius->0], 
           RectangleBox[{0.38426524824896013, 0.}, {0.38868209018285627, 1},
            RoundingRadius->0], 
           RectangleBox[{0.39309893211675234, 0.}, {0.3975157740506484, 2},
            RoundingRadius->0]}, {}, {}}, {{}, 
          {RGBColor[0.7, 0., 0.], Opacity[0.5], EdgeForm[Opacity[0.]], 
           RectangleBox[{0., 0.}, {0.004416841933896094, 3293},
            RoundingRadius->0], 
           RectangleBox[{0.004416841933896094, 0.}, {0.008833683867792187, 3631},
            
            RoundingRadius->0], 
           RectangleBox[{0.008833683867792187, 0.}, {0.01325052580168828, 3672},
            
            RoundingRadius->0], 
           RectangleBox[{0.01325052580168828, 0.}, {0.017667367735584374, 3936},
            
            RoundingRadius->0], 
           RectangleBox[{0.017667367735584374, 0.}, {0.022084209669480468, 3994},
            
            RoundingRadius->0], 
           RectangleBox[{0.022084209669480468, 0.}, {0.02650105160337656, 3853},
            
            RoundingRadius->0], 
           RectangleBox[{0.02650105160337656, 0.}, {0.030917893537272655, 4032},
            
            RoundingRadius->0], 
           RectangleBox[{0.030917893537272655, 0.}, {0.03533473547116875, 3947},
            
            RoundingRadius->0], 
           RectangleBox[{0.03533473547116875, 0.}, {0.03975157740506484, 3963},
            
            RoundingRadius->0], 
           RectangleBox[{0.03975157740506484, 0.}, {0.044168419338960936, 3955},
            
            RoundingRadius->0], 
           RectangleBox[{0.044168419338960936, 0.}, {0.04858526127285703, 3727},
            
            RoundingRadius->0], 
           RectangleBox[{0.04858526127285703, 0.}, {0.05300210320675312, 3745},
            
            RoundingRadius->0], 
           RectangleBox[{0.05300210320675312, 0.}, {0.057418945140649214, 3570},
            
            RoundingRadius->0], 
           RectangleBox[{0.057418945140649214, 0.}, {0.06183578707454531, 3545},
            
            RoundingRadius->0], 
           RectangleBox[{0.06183578707454531, 0.}, {0.06625262900844141, 3394},
            
            RoundingRadius->0], 
           RectangleBox[{0.06625262900844141, 0.}, {0.0706694709423375, 3314},
            
            RoundingRadius->0], 
           RectangleBox[{0.0706694709423375, 0.}, {0.07508631287623359, 3099},
            
            RoundingRadius->0], 
           RectangleBox[{0.07508631287623359, 0.}, {0.07950315481012968, 2941},
            
            RoundingRadius->0], 
           RectangleBox[{0.07950315481012968, 0.}, {0.08391999674402578, 2808},
            
            RoundingRadius->0], 
           RectangleBox[{0.08391999674402578, 0.}, {0.08833683867792187, 2622},
            
            RoundingRadius->0], 
           RectangleBox[{0.08833683867792187, 0.}, {0.09275368061181796, 2425},
            
            RoundingRadius->0], 
           RectangleBox[{0.09275368061181796, 0.}, {0.09717052254571407, 2200},
            
            RoundingRadius->0], 
           RectangleBox[{0.09717052254571407, 0.}, {0.10158736447961016, 2158},
            
            RoundingRadius->0], 
           RectangleBox[{0.10158736447961016, 0.}, {0.10600420641350625, 2037},
            
            RoundingRadius->0], 
           RectangleBox[{0.10600420641350625, 0.}, {0.11042104834740234, 1804},
            
            RoundingRadius->0], 
           RectangleBox[{0.11042104834740234, 0.}, {0.11483789028129843, 1713},
            
            RoundingRadius->0], 
           RectangleBox[{0.11483789028129843, 0.}, {0.11925473221519453, 1601},
            
            RoundingRadius->0], 
           RectangleBox[{0.11925473221519453, 0.}, {0.12367157414909062, 1408},
            
            RoundingRadius->0], 
           RectangleBox[{0.12367157414909062, 0.}, {0.1280884160829867, 1334},
            
            RoundingRadius->0], 
           RectangleBox[{0.1280884160829867, 0.}, {0.13250525801688282, 1183},
            
            RoundingRadius->0], 
           RectangleBox[{0.13250525801688282, 0.}, {0.1369220999507789, 1073},
            
            RoundingRadius->0], 
           RectangleBox[{0.1369220999507789, 0.}, {0.141338941884675, 1021},
            RoundingRadius->0], 
           RectangleBox[{0.141338941884675, 0.}, {0.1457557838185711, 934},
            RoundingRadius->0], 
           RectangleBox[{0.1457557838185711, 0.}, {0.15017262575246718, 889},
            RoundingRadius->0], 
           RectangleBox[{0.15017262575246718, 0.}, {0.15458946768636328, 752},
            
            RoundingRadius->0], 
           RectangleBox[{0.15458946768636328, 0.}, {0.15900630962025936, 685},
            
            RoundingRadius->0], 
           RectangleBox[{0.15900630962025936, 0.}, {0.16342315155415546, 611},
            
            RoundingRadius->0], 
           RectangleBox[{0.16342315155415546, 0.}, {0.16783999348805156, 563},
            
            RoundingRadius->0], 
           RectangleBox[{0.16783999348805156, 0.}, {0.17225683542194764, 547},
            
            RoundingRadius->0], 
           RectangleBox[{0.17225683542194764, 0.}, {0.17667367735584374, 444},
            
            RoundingRadius->0], 
           RectangleBox[{0.17667367735584374, 0.}, {0.18109051928973985, 418},
            
            RoundingRadius->0], 
           RectangleBox[{0.18109051928973985, 0.}, {0.18550736122363592, 367},
            
            RoundingRadius->0], 
           RectangleBox[{0.18550736122363592, 0.}, {0.18992420315753203, 348},
            
            RoundingRadius->0], 
           RectangleBox[{0.18992420315753203, 0.}, {0.19434104509142813, 305},
            
            RoundingRadius->0], 
           RectangleBox[{0.19434104509142813, 0.}, {0.1987578870253242, 277},
            RoundingRadius->0], 
           RectangleBox[{0.1987578870253242, 0.}, {0.2031747289592203, 249},
            RoundingRadius->0], 
           RectangleBox[{0.2031747289592203, 0.}, {0.2075915708931164, 197},
            RoundingRadius->0], 
           RectangleBox[{0.2075915708931164, 0.}, {0.2120084128270125, 185},
            RoundingRadius->0], 
           RectangleBox[{0.2120084128270125, 0.}, {0.2164252547609086, 162},
            RoundingRadius->0], 
           RectangleBox[{0.2164252547609086, 0.}, {0.22084209669480467, 122},
            RoundingRadius->0], 
           RectangleBox[{0.22084209669480467, 0.}, {0.22525893862870078, 115},
            
            RoundingRadius->0], 
           RectangleBox[{0.22525893862870078, 0.}, {0.22967578056259685, 113},
            
            RoundingRadius->0], 
           RectangleBox[{0.22967578056259685, 0.}, {0.23409262249649296, 90},
            RoundingRadius->0], 
           RectangleBox[{0.23409262249649296, 0.}, {0.23850946443038906, 100},
            
            RoundingRadius->0], 
           RectangleBox[{0.23850946443038906, 0.}, {0.24292630636428514, 88},
            RoundingRadius->0], 
           RectangleBox[{0.24292630636428514, 0.}, {0.24734314829818124, 53},
            RoundingRadius->0], 
           RectangleBox[{0.24734314829818124, 0.}, {0.25175999023207735, 40},
            RoundingRadius->0], 
           RectangleBox[{0.25175999023207735, 0.}, {0.2561768321659734, 47},
            RoundingRadius->0], 
           RectangleBox[{0.2561768321659734, 0.}, {0.2605936740998695, 40},
            RoundingRadius->0], 
           RectangleBox[{0.2605936740998695, 0.}, {0.26501051603376563, 42},
            RoundingRadius->0], 
           RectangleBox[{0.26501051603376563, 0.}, {0.2694273579676617, 37},
            RoundingRadius->0], 
           RectangleBox[{0.2694273579676617, 0.}, {0.2738441999015578, 27},
            RoundingRadius->0], 
           RectangleBox[{0.2738441999015578, 0.}, {0.2782610418354539, 23},
            RoundingRadius->0], 
           RectangleBox[{0.2782610418354539, 0.}, {0.28267788376935, 28},
            RoundingRadius->0], 
           RectangleBox[{0.28267788376935, 0.}, {0.28709472570324607, 17},
            RoundingRadius->0], 
           RectangleBox[{0.28709472570324607, 0.}, {0.2915115676371422, 12},
            RoundingRadius->0], 
           RectangleBox[{0.2915115676371422, 0.}, {0.2959284095710383, 15},
            RoundingRadius->0], 
           RectangleBox[{0.2959284095710383, 0.}, {0.30034525150493435, 8},
            RoundingRadius->0], 
           RectangleBox[{0.30034525150493435, 0.}, {0.3047620934388305, 10},
            RoundingRadius->0], 
           RectangleBox[{0.3047620934388305, 0.}, {0.30917893537272656, 8},
            RoundingRadius->0], 
           RectangleBox[{0.30917893537272656, 0.}, {0.31359577730662264, 4},
            RoundingRadius->0], 
           RectangleBox[{0.31359577730662264, 0.}, {0.3180126192405187, 3},
            RoundingRadius->0], 
           RectangleBox[{0.3180126192405187, 0.}, {0.32242946117441484, 8},
            RoundingRadius->0], 
           RectangleBox[{0.32242946117441484, 0.}, {0.3268463031083109, 5},
            RoundingRadius->0], 
           RectangleBox[{0.3268463031083109, 0.}, {0.331263145042207, 3},
            RoundingRadius->0], 
           RectangleBox[{0.33567998697610313, 0.}, {0.3400968289099992, 1},
            RoundingRadius->0], 
           RectangleBox[{0.3445136708438953, 0.}, {0.3489305127777914, 2},
            RoundingRadius->0], 
           RectangleBox[{0.3489305127777914, 0.}, {0.3533473547116875, 4},
            RoundingRadius->0], 
           RectangleBox[{0.35776419664558357, 0.}, {0.3621810385794797, 1},
            RoundingRadius->0], 
           RectangleBox[{0.3665978805133758, 0.}, {0.37101472244727185, 1},
            RoundingRadius->0], 
           RectangleBox[{0.38868209018285627, 0.}, {0.39309893211675234, 1},
            RoundingRadius->0], 
           RectangleBox[{0.43726735145571327, 0.}, {0.44168419338960935, 1},
            
            RoundingRadius->
             0]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}, \
{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}, {{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
         "\"\\!\\(\\*StyleBox[\\\"\[Gamma]\\\",FontFamily->\\\"Times New \
Roman\\\",FontSize->19,FontWeight->\\\"Regular\\\",FontSlant->\\\"Italic\\\"]\
\\)\"", TraditionalForm], None},
       AxesOrigin->{-0.008833683867792187, 0.},
       AxesStyle->{
         Arrowheads[{0, 0.02}], Automatic},
       DisplayFunction->Identity,
       Epilog->InsetBox[
         BoxData[
          FormBox[
           FrameBox[
            RowBox[{
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    SubscriptBox[
                    OverscriptBox["\[Gamma]", "_"], "2"], HoldForm], 14, 
                   StripOnInput -> False], 
                  StyleBox[
                   RowBox[{"\"=\"", " ", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.05822\"", ShowStringCharacters -> False], 
                    0.05822300975523658, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}], 14, StripOnInput -> False]}, {
                  StyleBox[
                   TagBox[
                    SubscriptBox[
                    OverscriptBox["\[Gamma]", "_"], "4"], HoldForm], 14, 
                   StripOnInput -> False], 
                  StyleBox[
                   RowBox[{"\"=\"", " ", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.06135\"", ShowStringCharacters -> False], 
                    0.061347748830346396`, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}], 14, StripOnInput -> False]}, {
                  StyleBox[
                   TagBox[
                    SubscriptBox[
                    OverscriptBox["\[Gamma]", "_"], "6"], HoldForm], 14, 
                   StripOnInput -> False], 
                  StyleBox[
                   RowBox[{"\"=\"", " ", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.06797\"", ShowStringCharacters -> False], 
                    0.06797099143192283, AutoDelete -> True], 
                    NumberForm[#, 4]& ]}], 14, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], " ", 
              TemplateBox[{
                StyleBox["\"N=2\"", 15, StripOnInput -> False], 
                StyleBox["\"N=4\"", 15, StripOnInput -> False], 
                StyleBox["\"N=6\"", 15, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {14, 14}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {14, 14}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.2142857142857143] -> 
                    Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.8]], 
                    RectangleBox[{0, 0}, {14, 14}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {14, 14}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.2142857142857143] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0., 0.]], 
                    RectangleBox[{0, 0}, {14, 14}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {14, 14}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.2142857142857143] -> 
                    Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> RGBColor[0., 0.5, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0., 0., 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.7, 0., 0.]|>, 
                    "RGBColorSwatchTemplate"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"14", ",", "14"}], "}"}]}]}], "]"}]& ), Editable -> 
               True]}], RoundingRadius -> 1, StripOnInput -> False], 
           TraditionalForm]], 
         Scaled[{0.78, 0.66}]],
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{36., 36.}, {36., 36.}},
       ImageSize->500,
       LabelStyle->Directive[
        FontFamily -> "Times New Roman", FontSize -> 13, 
         GrayLevel[0]],
       PlotRange->{{0., 0.44168419338960935`}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{{{0.1, 
           FormBox["\"0.10\"", TraditionalForm]}, {0.2, 
           FormBox["\"0.20\"", TraditionalForm]}, {0.3, 
           FormBox["\"0.30\"", TraditionalForm]}, {0.4, 
           FormBox["\"0.40\"", TraditionalForm]}}, Automatic}], 
      NCache[{Rational[1395, 2], -411.02549156242105`}, {
       697.5, -411.02549156242105`}], 
      ImageScaled[{0.5, 0.5}], {500, 309.0169943749474}]}}, {}},
  ImageSize->1040,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.914378543081511*^9, {3.914379305048073*^9, 3.914379332867655*^9}, {
   3.914379462379737*^9, 3.914379498462528*^9}, {3.914379608940557*^9, 
   3.9143796210970917`*^9}, {3.914379670914873*^9, 3.914379743216221*^9}, 
   3.914380440720006*^9, {3.914380506840551*^9, 3.914380530513406*^9}, {
   3.914380562822179*^9, 3.914380639796918*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"72f254b8-3601-4302-bf45-bd3537264bd4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["[5] State classification with machine learning", "Chapter",
 CellChangeTimes->{{3.909436200546693*^9, 3.909436209874395*^9}, {
  3.9094536696647367`*^9, 3.909453674029413*^9}, {3.909458052126433*^9, 
  3.9094580527684107`*^9}, {3.912669058786016*^9, 3.912669069744149*^9}, {
  3.9143803567717943`*^9, 
  3.914380357820188*^9}},ExpressionUUID->"b0a3d582-7c0f-4256-accc-\
bb963fbd0a4d"],

Cell[CellGroupData[{

Cell["[N=2] (500,000) Single-qubit system", "Section",
 CellChangeTimes->{{3.910483630337904*^9, 3.910483651650279*^9}, 
   3.9104843687705793`*^9, {3.912669744807241*^9, 3.912669768382608*^9}, {
   3.912669999962676*^9, 3.9126700006509237`*^9}, 
   3.9126812761503057`*^9},ExpressionUUID->"9be498c6-e288-4aef-9581-\
083a526f88cc"],

Cell["Generate 500,000 NM-conforming probability vectors for N=2", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 3.914382102684359*^9}, {
  3.91438218799876*^9, 3.9143822557065773`*^9}, {3.914382349737118*^9, 
  3.9143823798525753`*^9}},ExpressionUUID->"3d0abcc1-5428-41ff-a768-\
0a353b4d6726"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMcList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMcTDG", "[", 
   RowBox[{"2", ",", "500000"}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"N2NMcML", "=", "NMcList"}], ";"}]}], "Input",
 CellChangeTimes->{{3.910483009274996*^9, 3.910483014650721*^9}, 
   3.9104836161791067`*^9, 3.910483973746859*^9, {3.9126698151746264`*^9, 
   3.9126698666241293`*^9}, {3.912670003874763*^9, 3.9126700041464777`*^9}, {
   3.912670193156889*^9, 3.912670205685875*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[52]:=",ExpressionUUID->"0c264647-3221-4751-bf3a-a224dde5caf8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3588.392255`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.912674026208918*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"72ced89e-6c7d-4400-a60f-a5b46a3c4e26"]
}, Open  ]],

Cell["Generate 500,000 NM-violating probability vectors for N=2", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 3.914382102684359*^9}, {
  3.91438218799876*^9, 3.9143822557065773`*^9}, {3.914382349737118*^9, 
  3.914382388627337*^9}},ExpressionUUID->"9711bdb3-5c7b-4d99-a642-\
bd2004814767"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMvList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";", 
  RowBox[{"\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "=", "0"}], 
  ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMvTDG", "[", 
   RowBox[{"2", ",", "500000"}], "]"}], 
  "]"}], "\n", "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "\n", 
 RowBox[{
  RowBox[{"N2NMvML", "=", "NMvList"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.910483621114415*^9, 3.9104839891474237`*^9, {3.912669899245468*^9, 
   3.912669946002523*^9}, {3.912670006040786*^9, 3.912670006245411*^9}, {
   3.912670195614608*^9, 3.91267019595757*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->"In[55]:=",ExpressionUUID->"f9dc5bf2-fc41-4f53-87f9-6cac50dfe03a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3563.554669`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.912677589838788*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"f1137d62-d272-41db-b5ea-5e0d1b2c4927"],

Cell[BoxData["17420571"], "Output",
 CellChangeTimes->{3.912677589845415*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"3f6f4a46-6504-4693-9433-604a96aaa4f3"]
}, Open  ]],

Cell["Export the generated lists", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 3.914382102684359*^9}, {
  3.91438218799876*^9, 3.9143822557065773`*^9}, {3.914382349737118*^9, 
  3.914382411968302*^9}},ExpressionUUID->"6a330692-52fd-49bf-a954-\
8c81788ce900"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N2NMcML.mx\>\"", ",", "N2NMcML"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N2NMvML.mx\>\"", ",", "N2NMvML"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.908690601480736*^9, 3.908690611036413*^9}, {
  3.9087707182617407`*^9, 3.908770728366908*^9}, {3.909456857685276*^9, 
  3.909456873640235*^9}, {3.909459751477572*^9, 3.9094597579538097`*^9}, {
  3.9095293710148067`*^9, 3.909529371194326*^9}, {3.910484098292221*^9, 
  3.9104841038119926`*^9}, {3.910484204872611*^9, 3.910484237918084*^9}, {
  3.912670040010648*^9, 3.9126700512197943`*^9}, {3.91267021200352*^9, 
  3.9126702303245487`*^9}, {3.91268129363735*^9, 
  3.912681295537278*^9}},ExpressionUUID->"a1f2242a-0ec7-470a-a364-\
5d156864b6bc"],

Cell["\<\
Store the corresponding probability vectors in a separate list \
\>", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 3.914382102684359*^9}, {
  3.91438218799876*^9, 3.9143822557065773`*^9}, {3.914382349737118*^9, 
  3.914382434030108*^9}, {3.914382496067648*^9, 
  3.9143825094584637`*^9}},ExpressionUUID->"5d0ed8b5-3e34-46dc-890f-\
f31392cde473"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N2NMcMLpvec", "=", 
   RowBox[{"N2NMcML", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"N2NMvMLpvec", "=", 
   RowBox[{"N2NMvML", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.910573162452499*^9, 3.9105731903853893`*^9}, 
   3.910573413743643*^9, {3.912670080851851*^9, 3.912670097555316*^9}, {
   3.912670241107245*^9, 3.912670254973012*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"0f11d82c-953a-42a5-bf51-24d95910d889"],

Cell["\<\
Assign the value 0 [1] to vectors from the NM-conforming [NM-violating] data \
set, then join the two lists. The resulting list is the training data for the \
classifier function.\
\>", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 3.914382102684359*^9}, {
  3.91438218799876*^9, 3.9143822557065773`*^9}, {3.914382349737118*^9, 
  3.914382434030108*^9}, {3.914382496067648*^9, 3.9143825733219843`*^9}, {
  3.914382603830921*^9, 
  3.914382619396796*^9}},ExpressionUUID->"de439cc8-4927-40aa-a4aa-\
ec2ca24c4c3b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N2NMcMLpvecTD", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"N2NMcMLpvec", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "N2NMcMLpvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"N2NMvMLpvecTD", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"N2NMvMLpvec", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "N2NMvMLpvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"N2MLTD", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"N2NMcMLpvecTD", ",", "N2NMvMLpvecTD"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.910573265952787*^9, 3.910573266140539*^9}, {
  3.9105734021208363`*^9, 3.9105734039112997`*^9}, {3.9105734464547443`*^9, 
  3.91057349143458*^9}, {3.912670154899829*^9, 3.912670182407646*^9}, {
  3.9126702658270607`*^9, 3.912670326222733*^9}, {3.912679117494461*^9, 
  3.912679118362091*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"bf8f3f73-66d5-42ca-b5b2-070a6ad9134a"],

Cell["\<\
Train a classifier function based on the training data (i.e. the joined list)\
\
\>", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 3.914382102684359*^9}, {
  3.91438218799876*^9, 3.9143822557065773`*^9}, {3.914382349737118*^9, 
  3.914382434030108*^9}, {3.914382496067648*^9, 
  3.9143826439018803`*^9}},ExpressionUUID->"8a51672c-0235-4cef-9453-\
3d8bce7466ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"C2", "=", 
   RowBox[{"Classify", "[", "N2MLTD", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9104840598378057`*^9, 3.9104840661335297`*^9}, {
  3.912670559292276*^9, 3.9126705602042303`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"4edda312-53f6-47e7-8c4f-eb7cd484fa7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"49.515061`", ",", 
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["ClassifierFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "0", "1"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "0", "1"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["1000000", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               
               BoxForm`EmbedSummaryLabel[ClassifierFunction, 1105192, 
                Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             "Choose", ClassifierFunction, 1105192, 
              11597512018149923164801283218178009991435200120422028828128, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm, 
              ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
            "SummaryEmbedButton", ImageSize -> Inherited, 
            BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
    False,
    BoxID -> 11597512018149923164801283218178009991435200120422028828128,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.9126791847457743`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"85790f08-acea-461b-81c8-86ea23752fad"]
}, Open  ]],

Cell["Export the classifier function", "Text",
 CellChangeTimes->{{3.913463154183373*^9, 3.913463176254376*^9}, {
  3.913463208656643*^9, 3.913463292354041*^9}, {3.9143818621131763`*^9, 
  3.9143818623295937`*^9}, {3.9143820679350433`*^9, 3.914382102684359*^9}, {
  3.91438218799876*^9, 3.9143822557065773`*^9}, {3.914382349737118*^9, 
  3.914382434030108*^9}, {3.914382496067648*^9, 
  3.91438266693486*^9}},ExpressionUUID->"5fabf199-e0a2-43c6-872f-\
9e71e9965887"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<C2[0.5m].wmlf\>\"", ",", "C2"}], "]"}]], "Input",
 CellChangeTimes->{{3.9126705657646933`*^9, 3.912670591203693*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"38b5090d-b1f1-47be-97b3-7c873b3eb3c8"],

Cell[BoxData["\<\"C2[0.5m].wmlf\"\>"], "Output",
 CellChangeTimes->{3.912680611445127*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"db685f2f-5dea-4c7f-9086-69494bf71d5b"]
}, Open  ]],

Cell["\<\
Check classification of state from the NM-conforming data set:\
\>", "Text",
 CellChangeTimes->{{3.9126811082310677`*^9, 
  3.91268111841432*^9}},ExpressionUUID->"c4ffa9f6-57a8-4b17-b7dd-\
e5c143029e78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N2NMcMLpvec", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.912680623130818*^9, 3.912680623644024*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"052f14fe-4d79-4537-aa13-5b0ce6df20a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8064851516254673`", ",", "0.19351484837453273`", ",", "0.5`", ",", 
   "0.5`", ",", "0.5025733652717989`", ",", "0.4974266347282012`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9126806250852737`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"e0ab7159-ba77-48a4-b603-13445944d3e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"C2", "[", 
  RowBox[{"N2NMcMLpvec", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9126806277707453`*^9, 3.912680633691084*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"720aef24-555b-4961-b371-282fcf98853f"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9126806365363407`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"aa0e84c1-6d42-4ed1-aec5-e1992a73d9e5"]
}, Open  ]],

Cell["\<\
Check classification of state from the NM-violating data set:\
\>", "Text",
 CellChangeTimes->{{3.9126811082310677`*^9, 
  3.912681127045835*^9}},ExpressionUUID->"9776787e-554f-46f6-800e-\
115cc8dee8c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N2NMvMLpvec", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.912680685393895*^9, 3.91268068586456*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"80f5369d-bc4a-47a4-8480-14c3b79a545b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9963288288257757`", ",", "0.0036711711742245523`", ",", 
   "0.5000000000000001`", ",", "0.5000000000000001`", ",", 
   "0.3394517022179654`", ",", "0.6605482977820348`"}], "}"}]], "Output",
 CellChangeTimes->{3.912680689132291*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"63d7eb98-363e-4c35-b668-69a66fac7130"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"C2", "[", 
  RowBox[{"N2NMvMLpvec", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.9126806968636093`*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"d40501b6-a726-458f-aac3-320bc5242f5f"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9126806978408546`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"5b355dee-f79d-440b-8bb0-54ed4e0a8d7f"]
}, Open  ]],

Cell["\<\
We can check that this state lies outside of the Bloch sphere to confirm its \
classification as NM-violating:\
\>", "Text",
 CellChangeTimes->{{3.912680877267222*^9, 3.91268088852304*^9}, {
  3.91268095182749*^9, 3.912680955539586*^9}, {3.912681003184506*^9, 
  3.9126810071833344`*^9}, {3.912681041200235*^9, 
  3.91268106245118*^9}},ExpressionUUID->"b0431d26-6a4e-4ce6-9a46-\
e26b4cfd2fea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"N2NMvMLpvec", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"N2NMvMLpvec", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"N2NMvMLpvec", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"N2NMvMLpvec", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], ")"}], "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.912680836063345*^9, 3.9126808556010942`*^9}, {
  3.9126809075696507`*^9, 3.912680921984413*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"8cd265e0-8e2a-4a18-832c-85cab8acfa63"],

Cell[BoxData["1.0884722489770997`"], "Output",
 CellChangeTimes->{3.9126808567294188`*^9, 3.9126809233204613`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"57d4b507-a29c-419a-a998-41cf9307f3a7"]
}, Open  ]],

Cell["\<\
If we slightly adjust its components such that it satisfies the Bloch sphere \
defining inequality, the classifier will correctly identify it as \
NM-conforming:\
\>", "Text",
 CellChangeTimes->{{3.912680877267222*^9, 3.91268088852304*^9}, {
  3.9126809368143044`*^9, 
  3.912681016337852*^9}},ExpressionUUID->"d962e1f7-7994-48a2-9254-\
d026023a0956"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.9663288288257757`", "-", "0.0336711711742245523`"}], ")"}], 
   "^", "2"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.3394517022179654`", "-", "0.6605482977820348`"}], ")"}], "^", 
   "2"}]}]], "Input",
 CellChangeTimes->{{3.912680782534071*^9, 3.912680813785206*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"e16e284a-10ea-4a81-9b45-7669bda1c727"],

Cell[BoxData["0.9729533300589137`"], "Output",
 CellChangeTimes->{3.912680815419298*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"1715d1ee-d3b3-40a3-bfff-41d2a3ef4cec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"C2", "[", 
  RowBox[{"{", 
   RowBox[{
   "0.9663288288257757`", ",", "0.0336711711742245523`", ",", 
    "0.5000000000000001`", ",", "0.5000000000000001`", ",", 
    "0.3394517022179654`", ",", "0.6605482977820348`"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.912680700940732*^9, 3.912680712520693*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"e7e147fd-3103-4901-b6e1-580ec6bdfff2"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9126807135919743`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"149d5e6d-a39e-430e-95c9-2cd17ff45d9c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["[N=3] (500,000) ", "Section",
 CellChangeTimes->{{3.910483630337904*^9, 3.910483651650279*^9}, 
   3.9104843687705793`*^9, {3.912669744807241*^9, 3.912669768382608*^9}, {
   3.912669999962676*^9, 3.9126700006509237`*^9}, {3.9126811586785307`*^9, 
   3.912681164487453*^9}, {3.9126825875072203`*^9, 
   3.912682587592857*^9}},ExpressionUUID->"50d4520f-c4bf-4744-b64a-\
439df9de27f0"],

Cell["\<\
The code for N=3 works analogous to the code for N=2. Note that the input for \
the classifier function is now a 24-dimensional vector (as opposed to \
6-dimensional for N=2).\
\>", "Text",
 CellChangeTimes->{{3.912680877267222*^9, 3.91268088852304*^9}, {
  3.9126809368143044`*^9, 3.912681016337852*^9}, {3.914382684904999*^9, 
  3.9143827415359383`*^9}},ExpressionUUID->"de609a4f-72f1-4562-9211-\
934224d2db5c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMcList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMcTDG", "[", 
   RowBox[{"3", ",", "500000"}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"N3NMcML", "=", "NMcList"}], ";"}]}], "Input",
 CellChangeTimes->{{3.910483009274996*^9, 3.910483014650721*^9}, 
   3.9104836161791067`*^9, 3.910483973746859*^9, {3.9126698151746264`*^9, 
   3.9126698666241293`*^9}, {3.912670003874763*^9, 3.9126700041464777`*^9}, {
   3.912670193156889*^9, 3.912670205685875*^9}, {3.9126812252008467`*^9, 
   3.9126812293719*^9}, {3.912682582133955*^9, 3.9126825822282753`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[92]:=",ExpressionUUID->"94b3a55b-5330-4134-a751-7954fec9aa29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3500.760986`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.912686100278767*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"c32c65e2-9472-4a94-9cba-6372610adde2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMvList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";", 
  RowBox[{"\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "=", "0"}], 
  ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMvTDG", "[", 
   RowBox[{"3", ",", "500000"}], "]"}], 
  "]"}], "\n", "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "\n", 
 RowBox[{
  RowBox[{"N3NMvML", "=", "NMvList"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.910483621114415*^9, 3.9104839891474237`*^9, {3.912669899245468*^9, 
   3.912669946002523*^9}, {3.912670006040786*^9, 3.912670006245411*^9}, {
   3.912670195614608*^9, 3.91267019595757*^9}, {3.912681240878553*^9, 
   3.91268124412292*^9}, {3.912682584891491*^9, 3.9126825849829807`*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->"In[95]:=",ExpressionUUID->"71136a55-0595-4dca-a8ae-6c995bbc1968"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4037.398335`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.912690137804434*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"4fec7ec1-8f09-4dd5-84e5-ffe6ba337d5e"],

Cell[BoxData["9782103"], "Output",
 CellChangeTimes->{3.912690137851039*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"517b8658-9935-4914-aaab-7c87b690e2ce"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N3NMcML.mx\>\"", ",", "N3NMcML"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N3NMvML.mx\>\"", ",", "N3NMvML"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.908690601480736*^9, 3.908690611036413*^9}, {
  3.9087707182617407`*^9, 3.908770728366908*^9}, {3.909456857685276*^9, 
  3.909456873640235*^9}, {3.909459751477572*^9, 3.9094597579538097`*^9}, {
  3.9095293710148067`*^9, 3.909529371194326*^9}, {3.910484098292221*^9, 
  3.9104841038119926`*^9}, {3.910484204872611*^9, 3.910484237918084*^9}, {
  3.912670040010648*^9, 3.9126700512197943`*^9}, {3.91267021200352*^9, 
  3.9126702303245487`*^9}, {3.91268129363735*^9, 3.912681295537278*^9}, {
  3.9126875357609377`*^9, 3.912687551054615*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"138220c8-88e8-47da-9cc2-6f2e62684186"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N3NMcMLpvec", "=", 
   RowBox[{"N3NMcML", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"N3NMvMLpvec", "=", 
   RowBox[{"N3NMvML", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.910573162452499*^9, 3.9105731903853893`*^9}, 
   3.910573413743643*^9, {3.912670080851851*^9, 3.912670097555316*^9}, {
   3.912670241107245*^9, 3.912670254973012*^9}, {3.9126875539386*^9, 
   3.912687570346867*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"2de3c13c-8c7c-48ec-81d9-8e6ef4dee26e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N3NMcMLpvecTD", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"N3NMcMLpvec", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "N3NMcMLpvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"N3NMvMLpvecTD", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"N3NMvMLpvec", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "N3NMvMLpvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"N3MLTD", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"N3NMcMLpvecTD", ",", "N3NMvMLpvecTD"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.910573265952787*^9, 3.910573266140539*^9}, {
  3.9105734021208363`*^9, 3.9105734039112997`*^9}, {3.9105734464547443`*^9, 
  3.91057349143458*^9}, {3.912670154899829*^9, 3.912670182407646*^9}, {
  3.9126702658270607`*^9, 3.912670326222733*^9}, {3.912679117494461*^9, 
  3.912679118362091*^9}, {3.912687592911025*^9, 3.912687628059002*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"2914a8e1-6c2d-4459-aeef-ae724a1b8b58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"C3", "=", 
   RowBox[{"Classify", "[", "N3MLTD", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9104840598378057`*^9, 3.9104840661335297`*^9}, {
  3.912670559292276*^9, 3.9126705602042303`*^9}, {3.912687630431072*^9, 
  3.912687635722947*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"55d16c44-865c-4641-a7d0-38293416ccec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"60.032402`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["ClassifierFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "24", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "0", "1"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "24", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "0", "1"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"GradientBoostedTrees\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["1000000", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ClassifierFunction[<|
     "ExampleNumber" -> 1000000, "ClassNumber" -> 2, 
      "Input" -> <|
       "Preprocessor" -> 
        MachineLearning`MLProcessor[
         "ToMLDataset", <|
          "Input" -> <|
            "f1" -> <|"Type" -> "NumericalVector", "Length" -> 24|>|>, 
           "Output" -> <|
            "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
           "Preprocessor" -> 
           MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                MachineLearning`MLProcessor["List"], 
                MachineLearning`MLProcessor[
                "WrapMLDataset", <|
                 "FeatureTypes" -> {"NumericalVector"}, 
                  "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                  "ExampleWeights" -> Automatic, "RawExample" -> 
                  Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                  False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
           "Perfect", "StructurePreserving" -> False, "Missing" -> 
           "Allowed"|>], "Processor" -> 
        MachineLearning`MLProcessor[
         "Sequence", <|
          "Input" -> <|
            "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
           "Output" -> <|
            "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
           "Processors" -> {
             MachineLearning`MLProcessor[
             "SynthesizeMissingValues", <|
              "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
               "StructurePreserving" -> True, 
               "Input" -> <|
                "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
               "Distribution" -> 
               LearnedDistribution[<|
                 "ExampleNumber" -> 1000000, "Preprocessor" -> 
                  MachineLearning`MLProcessor[
                   "ToMLDataset", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 24|>|>,
                     "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Processor" -> MachineLearning`MLProcessor["Identity"], 
                  "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                  Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["

1: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
SghGxw==
                    "], 
                    "Precisions" -> {5.232300202568245, 5.243036557555044, 
                    13.991262850245688`, 23.721185835450402`, 
                    23.78197818105956, 1.*^6, 1.*^6, 1.*^6, 1.*^6, 1.*^6, 
                    1.*^6, 1.*^6, 1.*^6, 1.*^6, 1.*^6, 1.*^6, 1.*^6, 1.*^6, 
                    1.*^6, 1.*^6, 1.*^6, 1.*^6, 1.*^6, 1.*^6}, 
                    "NoisePrecision" -> None, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.3434048406279399, 0.32330726993994474`, 
                    0.333287889432113, 0.3436042398973681, 
                    0.32323232972988614`, 0.33316343037274954`, 
                    0.3434210323768861, 0.32303028742797485`, 
                    0.33354868019514144`, 0.33335605528394285`, 
                    0.33335605528394285`, 0.333287889432113, 
                    0.333418284813627, 0.333418284813627, 
                    0.33316343037274954`, 0.33322565990243025`, 
                    0.33322565990243025`, 0.33354868019514144`, 
                    0.33316343037274954`, 0.33354868019514144`, 
                    0.333287889432113, 0.333287889432113, 
                    0.33316343037274954`, 0.33354868019514144`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13., 1}, "ID" -> 945492815777004568|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 24, "Options" -> <||>|>|>|>, 
                  "TrainingInformation" -> <|
                   "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.3434048406279414, 0.3233072699399449, 
                    0.33328788943211246`, 0.34360423989736927`, 
                    0.3232323297298851, 0.3331634303727479, 
                    0.3434210323768876, 0.3230302874279739, 0.333548680195139,
                     0.3333560552839419, 0.3333560552839419, 
                    0.33328788943211246`, 0.33341828481362623`, 
                    0.33341828481362623`, 0.3331634303727479, 
                    0.3332256599024292, 0.3332256599024292, 0.333548680195139,
                     0.3331634303727479, 0.333548680195139, 
                    0.33328788943211246`, 0.33328788943211246`, 
                    0.3331634303727479, 0.333548680195139}, 
                    "StandardDeviation" -> {0.19378341400900803`, 
                    0.16974501521516422`, 0.15828059185211135`, 
                    0.19404995242745093`, 0.1696425358309121, 
                    0.1582335686757382, 0.19408222931509234`, 
                    0.16972198927961357`, 0.15835780505113753`, 
                    0.07914029592605852, 0.07914029592605852, 
                    0.15828059185211135`, 0.07911678433787589, 
                    0.07911678433787589, 0.1582335686757382, 
                    0.079178902525567, 0.079178902525567, 
                    0.15835780505113753`, 0.1582335686757382, 
                    0.15835780505113753`, 0.15828059185211135`, 
                    0.15828059185211135`, 0.1582335686757382, 
                    0.15835780505113753`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 24, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    4747808072524423015|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                  "NaiveImputer" -> 
                  MachineLearning`MLProcessor[
                   "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.3434048406279414, 0.3233072699399449, 
                    0.33328788943211246`, 0.34360423989736927`, 
                    0.3232323297298851, 0.3331634303727479, 
                    0.3434210323768876, 0.3230302874279739, 0.333548680195139,
                     0.3333560552839419, 0.3333560552839419, 
                    0.33328788943211246`, 0.33341828481362623`, 
                    0.33341828481362623`, 0.3331634303727479, 
                    0.3332256599024292, 0.3332256599024292, 0.333548680195139,
                     0.3331634303727479, 0.333548680195139, 
                    0.33328788943211246`, 0.33328788943211246`, 
                    0.3331634303727479, 0.333548680195139}, 
                    "StandardDeviation" -> {0.19378341400900803`, 
                    0.16974501521516422`, 0.15828059185211135`, 
                    0.19404995242745093`, 0.1696425358309121, 
                    0.1582335686757382, 0.19408222931509234`, 
                    0.16972198927961357`, 0.15835780505113753`, 
                    0.07914029592605852, 0.07914029592605852, 
                    0.15828059185211135`, 0.07911678433787589, 
                    0.07911678433787589, 0.1582335686757382, 
                    0.079178902525567, 0.079178902525567, 
                    0.15835780505113753`, 0.1582335686757382, 
                    0.15835780505113753`, 0.15828059185211135`, 
                    0.15828059185211135`, 0.1582335686757382, 
                    0.15835780505113753`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 24, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    4747808072524423015|>], "InputDimension" -> 0, 
                  "OutputDimension" -> 24, 
                  "Log" -> <|
                   "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> {{0.21431097984473113`, 0.3596485367073792, 
                    0.42604048344788964`, 0.3031208890960728, 
                    0.3202475265991668, 0.3766315843047604, 
                    0.35769955210407767`, 0.4449725156485723, 
                    0.1973279322473499, 0.28697975827605515`, 
                    0.28697975827605515`, 0.42604048344788964`, 
                    0.31168420784761974`, 0.31168420784761974`, 
                    0.3766315843047604, 0.401336033876325, 0.401336033876325, 
                    0.1973279322473499, 0.3766315843047604, 
                    0.1973279322473499, 0.42604048344788964`, 
                    0.42604048344788964`, 0.3766315843047604, 
                    0.1973279322473499}}, "ID" -> 8695962959994763523|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 4.112139, "MaxTrainingMemory" -> 
                    1016578448, "DataMemory" -> 192001976, "FunctionMemory" -> 
                    39032, "LanguageVersion" -> {13., 1}, "Date" -> 
                    DateObject[{
                    2023, 12, 27, 19, 23, 6.429473`7.5607503644023}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "MacOSX", "SystemWordLength" -> 64, "Evaluations" -> {}|>,
                   "LogPDFDistribution" -> 
                  MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> CompressedData["
1:eJwNkXtQzHEUxbe2WeW13/sTSXbJaFfJKyFTcZqKXpiS8gyxseO1mQhN7Fi9
kWq1DJNHnhnKDqXImlg90ESzWaIxapItYoqSR35/3H/u3Pmce85xjt0VobAS
CAQKfl6ExI/e1z4C/55s8s3wFkO/tfmO7J0Y3ws1ijMODBdS/rpJPRmC+nu7
2vwY7EPPJVrCGNL7fkRK1jNs3aDd83QTw/DWBEXJbobbG1dgupphoOeqfWcG
w9SI3Lz2HIaa4umZ9qcZpgkHPzteZJANO3w4sIhh2aAhbYGeIbtBt6e3lMG/
KuDIUwPDToukdnM1w7y4Z8raOoa/ZUc86uoZRJErJ1peMdS5vR9S9ZrB6aUs
/1sLw4PZkc0drQzWAc3CFgvDXk+ZtekbwwZdxpIFPxmarnj1GX4zNB57c/65
FcHVqUO5UET44KpXzbQjrPMaHLdoOOHLof0WZzHhsqTrXhcRHIKl8Z2jCecn
+5puOBLSjqtDLBLCheT4j6XOBBdXd+F8OUGn/hLx0J2g6XCJ85zF7+XBt4Nn
E0ZpHQ5mzyVUv012rfAhlFeOHOYBgs32ZPkBf4LV2KTw3YsJfx6nnLkfQvDu
ySxavoTnBM965L+cYDKt2xceRfAy2nKFqwktFbEeaTGEg1EnhWtjCTsUvjnl
CsKhAlPNZiXB0W/t0aZtBImLRjpjJ6G3q1v1XUWIPsBEBQmEoQ1NgW2JhBq7
gU/jkghRvfqE7Wo+j7iUvkcaQqqtGKmphPD6RuGzTJ6bzn6cOEYoNt8PNOYQ
BgOU3kYtQWZdUXNRR5jUnlxaepZga9OZl3eOsHSV4bRzIeH1cb85264S5kVX
5S4t4jlZ+aE3igkTbgaV1esJOVd0Ye53CTFznb4qKwgePncCtJX8n33l0dlG
wpqSGFVcLa+XVJYe1sDf35IO+DcS+pXuQfVmArVevnm9hXBL2z1e18b3U8J1
pFoIhrudylPdhCmJY6XvengfIrNA9JugVuevnGHFYcsvuY3GjsMYn+ZL5pEc
/IyVAidHDv9U1aiTc8g6O9PsBg6N/as2ildz8Lm2QnC9gMN/EbhNJw==
                    
                    "], "LeftBoundary" -> 3.918701023601332, "LeftScale" -> 
                    0.08735527386923746, "LeftTailNorm" -> 0.011|>], 
                  "Entropy" -> 
                  Around[-103.50664357235227`, 0.1074767151353553], 
                  "EntropySampleSize" -> 1000|>], 
               "Output" -> <|
                "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
               "EvaluationStrategy" -> "ModeFinding", "Version" -> {13., 1}, 
               "ID" -> 895810465636885430|>], 
             MachineLearning`MLProcessor[
             "Standardize", <|
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
               "StructurePreserving" -> True, 
               "Input" -> <|
                "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
               "Mean" -> {0.3434048406279414, 0.3233072699399449, 
                0.33328788943211246`, 0.34360423989736927`, 
                0.3232323297298851, 0.3331634303727479, 0.3434210323768876, 
                0.3230302874279739, 0.333548680195139, 0.3333560552839419, 
                0.3333560552839419, 0.33328788943211246`, 
                0.33341828481362623`, 0.33341828481362623`, 
                0.3331634303727479, 0.3332256599024292, 0.3332256599024292, 
                0.333548680195139, 0.3331634303727479, 0.333548680195139, 
                0.33328788943211246`, 0.33328788943211246`, 
                0.3331634303727479, 0.333548680195139}, 
               "StandardDeviation" -> {0.19378341400900803`, 
                0.16974501521516422`, 0.15828059185211135`, 
                0.19404995242745093`, 0.1696425358309121, 0.1582335686757382, 
                0.19408222931509234`, 0.16972198927961357`, 
                0.15835780505113753`, 0.07914029592605852, 
                0.07914029592605852, 0.15828059185211135`, 
                0.07911678433787589, 0.07911678433787589, 0.1582335686757382, 
                0.079178902525567, 0.079178902525567, 0.15835780505113753`, 
                0.1582335686757382, 0.15835780505113753`, 
                0.15828059185211135`, 0.15828059185211135`, 
                0.1582335686757382, 0.15835780505113753`}, 
               "Output" -> <|
                "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
               "Version" -> {13., 1}, "ID" -> 1240131875411505080|>]}, 
           "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
           "Missing" -> "Imputed"|>]|>, 
      "Output" -> <|
       "Preprocessor" -> 
        MachineLearning`MLProcessor[
         "ToMLDataset", <|
          "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
           "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
           "Preprocessor" -> 
           MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                MachineLearning`MLProcessor["List"], 
                MachineLearning`MLProcessor[
                "WrapMLDataset", <|
                 "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                  "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                  Automatic, "RawExample" -> 
                  Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                  False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
           "Perfect", "StructurePreserving" -> False, "Missing" -> 
           "Allowed"|>], "Processor" -> 
        MachineLearning`MLProcessor[
         "Sequence", <|
          "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
           "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
           "Processors" -> {
             MachineLearning`MLProcessor[
             "ToVector", <|
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
               "StructurePreserving" -> True, 
               "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
               "Output" -> <|
                "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
               "Version" -> {13., 1}, "ID" -> 4166252685338196627|>], 
             MachineLearning`MLProcessor[
             "IntegerEncodeNominalVector", <|
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
               "StructurePreserving" -> True, 
               "Input" -> <|
                "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
               "Index" -> {<|0 -> 1, 1 -> 2|>}, "MissingCode" -> 0, 
               "Version" -> {13., 1}, "ID" -> 5739454163220239904, 
               "Output" -> <|
                "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
             MachineLearning`MLProcessor[
             "FromVector", <|
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
               "StructurePreserving" -> True, 
               "Input" -> <|
                "f1" -> <|
                  "Type" -> "NominalVector", "Weight" -> 1, 
                   "SetSize" -> {2}|>|>, 
               "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>,
                "Version" -> {13., 1}, "ID" -> 5290102661805438588|>], 
             MachineLearning`MLProcessor[
             "FirstValues", <|
              "Info" -> <|
                "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2|>, "Key" -> 
               "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
               False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
           "Perfect", "StructurePreserving" -> False, "Missing" -> 
           "Allowed"|>], "ProbabilityPostprocessor" -> Identity, "Name" -> 
        "class", "Marginal" -> <|0 -> 0.5, 1 -> 0.5|>|>, "LabelSplitter" -> 
      MachineLearning`MLProcessor[
       "FeatureLabelSplit", <|
        "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
         "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
      "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
      "Prior" -> Automatic, "Utility" -> 
      SparseArray[
       Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
      "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
      Automatic, "BatchProcessing" -> Automatic, "Model" -> <|"Trees" -> {
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{5, 4, 19, 2, 1, 7, 14, 4, 5, 8, 2, 7, 1, 1, 
              2, 8, 1, 2, 1, 7, 8, 4, 5, 14, 2, 8, 7, 1, 7, 16, 12, 8, 2, 8, 
              1, 22, 8, 2, 7, 1, 8, 1, 1, 2, 4, 2, 8, 1, 20, 14, 8, 2, 8, 8, 
              1, 7, 2, 22, 5, 8, 4, 8, 8}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////vf77qzX4gXW9Q8wFEy/ttAtP/n8z6CKL9Ne98
AtHxCy592Q/UJ9Av8cMeyM/flv4VJN5/7c8XEH1+j95HZH3za4qfgej9twTe
g/XvPPEdRPM/mgWm71tcfgcWf1wBNue8TBHYXv9qFrB9+ZtZwPz3P2NegdV5
TfkBFldy/glyxwfLeX9A7uB/K/wSrO+V2luwPF/bbbD9it9vgWj7pnaIu0PY
we7u5y4D2+fvcfopSLwgOKAPLM7s8g0kvj46+ALY3X7LwP76r/R+Gti9SxaA
5c9vunUJbG4U3w+wO+ZbbAXp11+7BOy+/h16l5DV7zc/8gts7oeXD8Du6v3y
CNke+43zwe7bwCfwH2TO+enzwea8T/YEu/98VDBYvqEnYSlYXvr5KTDfUek6
2N47XGB36r/0B4d3fGzwb7D/fj+/CObfOAfm79+/8RNcHADPdG0B
             "], 
            "LeafValues" -> 
            RawArray["Real32",{0.3998802602291107, 0.39434200525283813`, 
              0.35801631212234497`, 0.371734619140625, 0.30570200085639954`, 
              0.17938072979450226`, -0.3401176929473877, 0.3545018136501312, 
              0.34544771909713745`, 0.39967986941337585`, 
              0.39175617694854736`, 0.3799089193344116, 
              0.27501580119132996`, -0.17843729257583618`, 
              0.06606099754571915, 0.31353282928466797`, -0.03267833590507507,
               0.25622978806495667`, -0.06949486583471298, 
              0.18930692970752716`, 
              0.27409258484840393`, -0.07722041010856628, 
              0.36392444372177124`, 0.39853957295417786`, 0.3246989846229553, 
              0.27923545241355896`, 0.3483961522579193, 0.078337661921978, 
              0.18727760016918182`, 0.20586463809013367`, 
              0.27784430980682373`, 0.20600391924381256`, 0.2530675232410431, 
              0.36501649022102356`, 0.35132741928100586`, 
              0.36467409133911133`, -0.004948453512042761, 0.3371485471725464,
               0.11531408876180649`, 0.3440625071525574, 0.15665671229362488`,
               0.35720551013946533`, 0.23557621240615845`, 0.3832496702671051,
               0.2330312728881836, 0.3874301314353943, 0.3568585216999054, 
              0.3850420415401459, 0.25807639956474304`, 0.3229367136955261, 
              0.3747616410255432, 0.25275707244873047`, 0.3861152231693268, 
              0.19188810884952545`, 0.3834074139595032, 0.39409416913986206`, 
              0.3968300223350525, 0.3377777636051178, 0.3854193687438965, 
              0.3470357656478882, 0.364070862531662, 0.3749223053455353, 
              0.3848293423652649, 0.39038336277008057`}], "Children" -> 
            RawArray["Integer16",{{9, 2}, {8, 3}, {7, 4}, {15, 5}, {14, 
              6}, {-6, -7}, {17, 24}, {22, 19}, {23, 10}, {33, 11}, {37, 
              12}, {28, 13}, {-13, -14}, {-5, -15}, {32, 16}, {-16, -17}, {42,
               18}, {-18, -19}, {39, 20}, {35, 21}, {-21, -22}, {45, 30}, {46,
               25}, {29, 50}, {41, 26}, {43, 
              27}, {-27, -28}, {-12, -29}, {-8, -30}, {31, 
              58}, {-23, -32}, {-4, -33}, {52, 34}, {51, 
              36}, {-20, -36}, {-35, -37}, {57, 38}, {-38, -39}, {40, 
              56}, {-9, -41}, {60, 44}, {-3, -43}, {-26, -44}, {-42, -45}, {
              61, 49}, {54, 47}, {55, 
              48}, {-48, -49}, {-46, -50}, {-25, -51}, {-34, -52}, {62, 
              53}, {-53, -54}, {63, 
              59}, {-47, -56}, {-40, -57}, {-11, -58}, {-31, -59}, {-55, \
-60}, {-24, -61}, {-2, -62}, {-10, -63}, {-1, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{8, 7, 24, 2, 1, 4, 7, 8, 18, 1, 10, 1, 2, 2,
               5, 2, 4, 5, 1, 1, 2, 4, 5, 8, 2, 7, 13, 17, 1, 10, 2, 2, 4, 5, 
              12, 10, 5, 1, 5, 2, 23, 21, 8, 7, 1, 8, 4, 5, 18, 2, 4, 10, 2, 
              5, 5, 2, 5, 1, 14, 4, 2, 13, 2}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////LX/F+tx9I+zP7fQDR8nyLP4Lo82KGn0D0/hal
z2Da5eIXsPytid9AdHzowq8g+r61308QbR/F92M/0FyFcxk/7UH8pe1vweo+
L3kMlu/7+gPMX/DtFYh+X9QJtrdfwOQZiK7X4gXbr2/GCxb/v9sAbH6+8T6w
uP8LwT1g+32Sd4Ho+R++ge3tf+EFds98/8SfIPsvbJj93h5If3g1/y/IHft1
em6CxCcY5HwEu4s7AKzf/ummR2D986yugvVfqQLz5yu5Q/wXoHgJpM+gavlS
kL76yO3gcLj/jP0eWPzIlJcg8fj9nyHiN0T/gt2fEfsH7D9O1t9g+obrLZD6
BXZ8D0Hq/U/IHgKH5/NVb8D+rl75H+y/uvmXweqNtI6A1Bf8//EZpP7/k1kf
QfwGVp/zYP7GnBtge+5wfUE25/wWmedgddsdHoPda1ADDjeYfni41F39Zg8A
L09b0g==
             "], "LeafValues" -> 
            RawArray["Real32",{0.3348630964756012, 0.34124335646629333`, 
              0.3133111000061035, 0.31742069125175476`, 0.25812309980392456`, 
              0.13161255419254303`, -0.2914133667945862, 0.15518662333488464`,
               0.3377344608306885, 0.2154788374900818, 0.04757971689105034, 
              0.3442506492137909, 0.2265237420797348, -0.047321055084466934`, 
              0.2554519772529602, -0.014212624169886112`, 0.3670186400413513, 
              0.32280421257019043`, 0.2627233862876892, -0.16760241985321045`,
               0.23012398183345795`, -0.031001606956124306`, 
              0.3280203938484192, 0.23634907603263855`, 
              0.33432361483573914`, -0.0788472518324852, 0.34528225660324097`,
               0.2454969584941864, 0.3620789647102356, 0.06949984282255173, 
              0.3147164285182953, 0.18512678146362305`, 0.37618231773376465`, 
              0.27608007192611694`, 0.051866449415683746`, 0.3129337430000305,
               0.18254943192005157`, 0.3333422839641571, 0.21565937995910645`,
               0.23522283136844635`, 0.32805511355400085`, 0.2173057496547699,
               0.23209083080291748`, 0.3669930398464203, 0.2968619167804718, 
              0.29827451705932617`, 0.3423524498939514, 0.33450478315353394`, 
              0.34258994460105896`, 0.3165271282196045, 0.37207990884780884`, 
              0.27760404348373413`, 0.347819983959198, 0.3980952203273773, 
              0.31458723545074463`, 0.3353400230407715, 0.16181008517742157`, 
              0.36820992827415466`, 0.31571120023727417`, 0.2802276015281677, 
              0.3834024667739868, 0.36740341782569885`, 0.35926514863967896`, 
              0.3198023736476898}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {7, 3}, {9, 4}, {14, 5}, {10, 
              6}, {-6, -7}, {26, 11}, {24, 16}, {28, 20}, {-5, -11}, {12, 
              42}, {22, 13}, {-13, -14}, {39, 15}, {-15, -16}, {23, 17}, {29, 
              18}, {31, 19}, {-19, -20}, {40, 21}, {-21, -22}, {-8, -23}, {55,
               25}, {43, 32}, {47, 27}, {44, 35}, {-26, -28}, {38, 49}, {58, 
              30}, {-30, -31}, {-18, -32}, {37, 33}, {45, 34}, {-34, -35}, {
              59, 36}, {-36, -37}, {57, 
              41}, {-3, -39}, {-4, -40}, {-10, -41}, {-38, -42}, {60, 46}, {
              48, 50}, {62, 52}, {-33, -46}, {-43, -47}, {-24, -48}, {63, 
              53}, {-29, -50}, {54, 
              51}, {-51, -52}, {-45, -53}, {-49, -54}, {-44, -55}, {61, 
              56}, {-56, -57}, {-25, -58}, {-17, -59}, {-27, -60}, {-12, \
-61}, {-9, -62}, {-2, -63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 
            1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{5, 4, 8, 7, 1, 2, 5, 4, 22, 21, 7, 7, 8, 2, 
              7, 1, 1, 8, 2, 1, 1, 1, 5, 8, 2, 4, 2, 7, 8, 8, 21, 16, 1, 2, 9,
               8, 2, 8, 3, 4, 16, 12, 5, 5, 2, 7, 4, 21, 8, 24, 5, 1, 8, 1, 
              21, 5, 8, 8, 8, 2, 2, 4, 1}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////7P3jwcj+Qjj9k+BZE379V+hFE/4+3+wSmdxt8
BdH2/Ixgev1/xi8gOr/D5xuIrnf9+30/0LwPM0We2gP5/GUxn0Hi74W3fQfL
i8SDzTl/bfl7EL1/9rNHINq/mgUsLi9U8gpsf+o8sHr/ycvA/PXXNz8F6/tq
+BNsTsCzuyCa/9PUH2B1Hk0XwO5yDQW7qz9YFazu/AsOsD7/giqwPfGnPZ+B
/aH0fhrInRvkrG+D3Fm/5sVlsD+Eop+AxAuCA/pA4vKe236BzfvwC0zf7z7/
EOzuM65ge/PVD34CqZ8QZnbBHqRPa99HkD772wv/gO0pYfsDkn9wesEDsD3r
t9wBh8fq5Jtg/0qz/Ab749iDzyB1DB4/toHU5X/Y/xxs366uo2B1Zptug/kX
gx6A1adIbgPR87eK/we75/mqN2B1V7zfgeWLGI6D7Z9+/DqI1t/eDLZPvzng
CjgcbpwD29vfqv5sPwDP2GzH
             "], "LeafValues" -> 
            RawArray["Real32",{0.284785658121109, 0.3097515106201172, 
              0.33685147762298584`, 0.2999495267868042, 0.23610138893127441`, 
              0.1317162960767746, -0.2843738794326782, 0.2963085174560547, 
              0.37610548734664917`, 0.2206907421350479, 
              0.3125079870223999, -0.037525251507759094`, 
              0.24365653097629547`, 0.3197275698184967, 0.30449509620666504`, 
              0.20928506553173065`, -0.16531744599342346`, \
-0.022556252777576447`, 0.17408151924610138`, 
              0.2635437846183777, -0.12821443378925323`, 0.054776631295681, 
              0.09961331635713577, 0.31530362367630005`, 
              0.2327907383441925, -0.006754803471267223, 0.2696349024772644, 
              0.32532188296318054`, 0.22213304042816162`, 0.02135534957051277,
               0.13233977556228638`, 0.30337023735046387`, 
              0.13225848972797394`, 0.21102166175842285`, 
              0.22605293989181519`, 0.19913548231124878`, 0.292236864566803, 
              0.17237183451652527`, 
              0.2780354619026184, -0.015846118330955505`, 0.2927287518978119, 
              0.28561636805534363`, 0.16498520970344543`, 0.3146001100540161, 
              0.2999746799468994, 0.32276177406311035`, 0.2145383208990097, 
              0.30863842368125916`, 0.25118860602378845`, 0.2603302597999573, 
              0.22362299263477325`, 0.28959545493125916`, 0.2603038549423218, 
              0.2534824311733246, 0.3114188015460968, 0.3200198709964752, 
              0.3546450138092041, 0.34643036127090454`, 0.31060123443603516`, 
              0.27076148986816406`, 0.27475425601005554`, 
              0.25630444288253784`, 0.2939360439777374, 0.2999429404735565}], 
            "Children" -> 
            RawArray["Integer16",{{7, 2}, {8, 3}, {18, 4}, {12, 5}, {21, 
              6}, {-6, -7}, {23, 13}, {26, 9}, {42, 10}, {11, 
              35}, {-10, -12}, {33, 17}, {34, 14}, {24, 15}, {22, 
              16}, {-16, -17}, {-13, -18}, {36, 19}, {40, 
              20}, {-20, -21}, {-5, -22}, {-15, -23}, {43, 27}, {53, 
              25}, {-25, -26}, {47, 31}, {30, 28}, {52, 29}, {-29, -30}, {59, 
              41}, {32, 50}, {-27, -33}, {-4, -34}, {56, 38}, {-11, -36}, {51,
               37}, {-37, -38}, {54, 
              39}, {-39, -40}, {-19, -41}, {-31, -42}, {55, 44}, {57, 
              45}, {-43, -45}, {49, 46}, {-46, -47}, {62, 
              48}, {-48, -49}, {-44, -50}, {-32, -51}, {-3, -52}, {-28, -53}, \
{-14, -54}, {-35, -55}, {-9, -56}, {61, 60}, {63, 
              58}, {-58, -59}, {-24, -60}, {-57, -61}, {-8, -62}, {-2, -63}, \
{-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
             "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{8, 7, 17, 5, 4, 1, 7, 8, 23, 3, 5, 1, 2, 4, 
              4, 16, 1, 5, 2, 4, 5, 4, 14, 5, 7, 2, 5, 21, 8, 15, 13, 13, 21, 
              5, 2, 4, 5, 16, 5, 15, 4, 4, 2, 7, 8, 12, 5, 1, 21, 1, 1, 1, 16,
               4, 10, 8, 8, 5, 2, 13, 5, 2, 5}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////P57Z/sR9I83udfr0fKJ4w3+qzPYi/tuQTSPx/
1Ekwfb449huI3n9s41cQ3W//5wtIvYA9wwt7ID3BR/wpWN+5to9gdUU/XoLo
fJWPb8HqVURfg+j7DbGfQfoaLI7+Aqnff0vgPUjc/vTk7yD6/b6dYHXzvzZ/
AdOakR/A+uYtuQTS98H96keQvv7Ne0+DzT9w9QeY9v16GET7Z9uD+fWlCRB3
T58P5v9/+RbsbnuxOrA5EzTzfoLMyf+6Fuyv993rfoPo+M9LHoNoff/w22B+
4ulnIPUOq7T+gfy54XFOL0iffaw8JBySlMHujvea8gOkruCj2AOw+2Qrf4HN
0Q8Cm3s/wQnsH3+vVffB4bO5+TxY/IboX5A+BpNdV0DmX1BR2QYOx203b4DE
DySJMTiA1B/Pewg2/7PFcZC8/BXvdyD966/z/wX7v8f5CNi/YoafwOocr0HC
yXHRFbB9Od8ugennq97sBwBNYVSc
             "], "LeafValues" -> 
            RawArray["Real32",{0.27236777544021606`, 0.26002833247184753`, 
              0.2791133224964142, 0.28283780813217163`, 0.26001405715942383`, 
              0.10137785971164703`, -0.246965691447258, 0.20867502689361572`, 
              0.2768093943595886, 0.33834001421928406`, 0.150822713971138, 
              0.3223104178905487, 0.27671611309051514`, 
              0.16157275438308716`, -0.160953089594841, -0.0599084347486496, 
              0.18502086400985718`, 0.03589592128992081, 
              0.2047509402036667, -0.05076783895492554, 
              0.19652321934700012`, -0.026751292869448662`, \
-0.014813363552093506`, 0.2552862763404846, 0.1075173020362854, 
              0.28416547179222107`, 0.20999395847320557`, 
              0.26477673649787903`, -0.0479852594435215, 0.2866745591163635, 
              0.23531582951545715`, 0.08946643769741058, 0.2888623774051666, 
              0.26563864946365356`, 0.1736958920955658, 0.30449438095092773`, 
              0.20008474588394165`, 0.008505338802933693, 0.2664472460746765, 
              0.27150365710258484`, 0.12562119960784912`, 
              0.14168615639209747`, 0.1810080111026764, 0.2733195424079895, 
              0.27617567777633667`, 0.2288137525320053, 0.20589809119701385`, 
              0.29193323850631714`, 0.17701378464698792`, 
              0.25453007221221924`, 0.2881920635700226, 0.3003504276275635, 
              0.22901564836502075`, 0.3110673129558563, 0.25197091698646545`, 
              0.20923349261283875`, 0.2744496464729309, 0.276122123003006, 
              0.24485409259796143`, 0.3298700153827667, 0.28700411319732666`, 
              0.2414269745349884, 0.2346050888299942, 0.2935192883014679}], 
            "Children" -> 
            RawArray["Integer16",{{8, 2}, {7, 3}, {4, 16}, {18, 5}, {17, 
              6}, {-6, -7}, {25, 9}, {29, 11}, {10, 33}, {15, 32}, {26, 12}, {
              22, 13}, {24, 14}, {-14, -15}, {-8, -16}, {20, 38}, {-5, -18}, {
              34, 19}, {-19, -20}, {42, 21}, {-21, -22}, {54, 
              23}, {-23, -24}, {-13, -25}, {44, 30}, {56, 27}, {51, 
              28}, {-28, -29}, {45, 35}, {55, 31}, {-31, -32}, {-11, -33}, {
              49, 41}, {-3, -35}, {39, 36}, {52, 37}, {-37, -38}, {43, 53}, {
              61, 40}, {-40, -41}, {-34, -42}, {-4, -43}, {-17, -44}, {60, 
              46}, {57, 47}, {-45, -47}, {50, 
              48}, {-48, -49}, {-10, -50}, {-46, -51}, {-27, -52}, {-36, \
-53}, {-39, -54}, {-12, -55}, {-26, -56}, {62, 59}, {63, 
              58}, {-58, -59}, {-57, -60}, {-2, -61}, {-30, -62}, {-9, -63}, \
{-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
             "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{2, 1, 10, 8, 7, 5, 3, 2, 1, 6, 6, 5, 7, 8, 
              4, 7, 8, 8, 5, 4, 4, 8, 23, 8, 5, 20, 2, 1, 5, 23, 13, 10, 18, 
              4, 8, 5, 15, 2, 8, 5, 4, 7, 14, 7, 4, 8, 2, 8, 5, 4, 15, 1, 8, 
              20, 4, 8, 8, 20, 7, 8, 5, 5, 5}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////vVxV7tR9I/6+b/G4/UHxBwZ1P9kDu+1CBTyBx
/rKYzyC6furzbyD6vc3S3yD6/pIFYD5/+lswna+67xtY//zpj0D652tGfgDL
rz/0GETv378RYp5g4Eew+gNXf4BoecO2R2C+mf9PEB2fePoZ2D1/+q+A6P4k
5e9g+26VgvXFP94Opv8rvZ8GNu+VDVj+vLX+ezC/iAHsPv8Sj18g9yhIvd4B
co9/TyDYnecXvr0IEp/wU+Y/SFx+YsFXkLh9zuknYHsuBj0Aq3OIBvP3P1/8
G6Te4KbIE5B6+7mvwP6RT9e5C/bv0r7D9kD6wplJy0Hy8X8/g93nz+wH9v/8
VZUQ/7f4PQW7j+3gHxCtv+UY2H/1Z33A9vcHq4L937+E6x/Yn+/Dwf6Qv+L9
DsxfIAeOB/8sb7D7/H8/vwg2r+sqxN1rf76C8NMPgO3ltn8B5q8tgYT7jqZT
YHXP2O/tBwBkc2wk
             "], "LeafValues" -> 
            RawArray["Real32",{0.25556081533432007`, 0.27643561363220215`, 
              0.24502107501029968`, 0.28093647956848145`, 
              0.18046090006828308`, 
              0.12798018753528595`, -0.22602029144763947`, 
              0.25937291979789734`, 0.2572675347328186, 0.32714271545410156`, 
              0.13448050618171692`, 0.25385329127311707`, 0.3326619565486908, 
              0.2640603482723236, 0.19749228656291962`, -0.10985904932022095`,
               0.007447864394634962, -0.029958557337522507`, 
              0.16394096612930298`, -0.04437033832073212, 0.2383379340171814, 
              0.19340744614601135`, 
              0.026720808818936348`, -0.002119968878105283, 
              0.17330507934093475`, 
              0.19197168946266174`, -0.10711202770471573`, 0.2521490156650543,
               0.16402292251586914`, 0.12983810901641846`, 
              0.23611930012702942`, 0.11760418862104416`, 
              0.29899683594703674`, 0.15132135152816772`, 0.1737673133611679, 
              0.20969240367412567`, 0.025797894224524498`, 0.1080712303519249,
               0.2690664827823639, 0.3192695081233978, 0.15851077437400818`, 
              0.2596507668495178, 0.27297815680503845`, 0.1349230408668518, 
              0.3615669906139374, 0.2581305503845215, 0.2310711145401001, 
              0.23078322410583496`, 0.26809751987457275`, 
              0.11748114228248596`, 0.19442026317119598`, 0.2692475914955139, 
              0.27059707045555115`, 0.29494425654411316`, 
              0.22538796067237854`, 0.26512598991394043`, 0.2064271867275238, 
              0.3019126057624817, 0.2752387821674347, 0.27495330572128296`, 
              0.2632443904876709, 0.29337090253829956`, 0.25829017162323, 
              0.27113890647888184`}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {9, 3}, {4, 7}, {18, 5}, {16, 
              6}, {-6, -7}, {32, 21}, {27, 12}, {28, 10}, {37, 11}, {17, 
              33}, {24, 13}, {20, 14}, {29, 
              15}, {-15, -16}, {-5, -17}, {-11, -18}, {40, 19}, {-19, -20}, {
              45, 23}, {50, 22}, {-22, -23}, {-21, -24}, {48, 25}, {42, 
              26}, {-26, -27}, {47, 34}, {52, 30}, {-14, -30}, {58, 
              31}, {-31, -32}, {46, 44}, {-12, -34}, {39, 35}, {41, 
              36}, {-36, -37}, {51, 38}, {-38, -39}, {43, 
              59}, {-3, -41}, {-35, -42}, {-25, -43}, {-28, -44}, {-33, -45}, \
{-13, -46}, {-4, -47}, {60, 55}, {53, 
              49}, {-49, -50}, {-8, -51}, {-10, -52}, {62, 
              54}, {-9, -54}, {-53, -55}, {57, 
              56}, {-56, -57}, {-48, -58}, {-29, -59}, {-40, -60}, {63, 
              61}, {-61, -62}, {-2, -63}, {-1, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{2, 1, 22, 4, 5, 23, 10, 1, 2, 18, 14, 5, 7, 
              8, 4, 4, 4, 5, 4, 7, 7, 5, 7, 8, 5, 5, 1, 18, 18, 9, 2, 12, 14, 
              16, 5, 7, 8, 8, 17, 17, 11, 6, 7, 7, 2, 7, 1, 4, 4, 20, 5, 7, 
              22, 7, 8, 5, 8, 23, 8, 1, 2, 4, 8}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////bc3C82A+k5YVKXoFofYUVH0F0vrDZFxD9f4U1
mD///p5v+4H6HA7f+mkP5Mc/rvgKEo+fuewrSPzAF5PnIPH5B1ifgcWjm96D
aP5khgdg87ucPoDo93WCn8HmHK18DzbHa8oPsLzUzJ9gewKE7oD51v5vwO6Z
euMbiN5/fR7YPvumdrC7/D2aLoDo+9rXLoLo+qnPIeoulvwEma8gynkHZL5+
uD1Y/fr5N8H61xsy/QKb/0nqH1id/8bf9kD6wlOH3yD15x2in4DNMYu+DvaH
R+FjsP+y/68AqTtgvP0DiH6QFPEFRDfU3QGHB/+cNHA4nl/qCg6nBdlHNoLF
2Q7+AYcD/1uw//Zriv4G81Nj74HDl20LJLwWyH0Gu+veq8tgPuP+K2D5hXP+
g8wrePVmK8i89/s0wPrk36wHqz+/Rw8cP/c1eP+Bw8fq9mmwPZ+vg+3Z/6v4
L5i+eRMSrnZnXu4HABcYV9w=
             "], "LeafValues" -> 
            RawArray["Real32",{0.24982860684394836`, 0.25247302651405334`, 
              0.25321853160858154`, 0.1625962108373642, 0.18654541671276093`, 
              0.10405216366052628`, -0.22097733616828918`, 
              0.30723926424980164`, 0.13443413376808167`, 
              0.24352909624576569`, 0.13938573002815247`, -0.0644201785326004,
               0.2988260090351105, 0.26394298672676086`, 
              0.18467628955841064`, -0.13502798974514008`, 
              0.13320229947566986`, 0.2237626165151596, 0.011302150785923004`,
               0.20852555334568024`, -0.05307311564683914, 
              0.1922103613615036, -0.01766245812177658, \
-0.022025274112820625`, 0.1508312225341797, 0.09070268273353577, 
              0.23482419550418854`, 0.2250239998102188, 0.2516009509563446, 
              0.06627136468887329, -0.06001986563205719, 0.25655269622802734`,
               0.2470891773700714, 0.3131815791130066, 0.2607648968696594, 
              0.2931539714336395, 0.16520565748214722`, -0.04592448100447655, 
              0.09440620988607407, 0.26216164231300354`, 0.24632173776626587`,
               0.26338210701942444`, 0.1560940146446228, 0.1680576503276825, 
              0.2504425346851349, 0.2052370011806488, 0.162614643573761, 
              0.24927301704883575`, 0.21260537207126617`, 
              0.21631330251693726`, 0.18318766355514526`, 0.2729732096195221, 
              0.1560681313276291, 0.2530602216720581, 0.2552240192890167, 
              0.2471037358045578, 0.09293356537818909, 0.2821720540523529, 
              0.251251757144928, 0.2129223495721817, 0.23283468186855316`, 
              0.2652681767940521, 0.24118365347385406`, 
              0.26730021834373474`}], "Children" -> 
            RawArray["Integer16",{{9, 2}, {8, 3}, {7, 4}, {17, 5}, {18, 
              6}, {-6, -7}, {21, 32}, {27, 10}, {31, 12}, {11, 33}, {34, 
              16}, {24, 13}, {19, 14}, {25, 15}, {-15, -16}, {-12, -17}, {39, 
              20}, {-5, -19}, {49, 23}, {-18, -21}, {46, 
              22}, {-22, -23}, {-20, -24}, {55, 26}, {-14, -26}, {44, 30}, {
              47, 28}, {29, 42}, {-28, -30}, {-27, -31}, {45, 35}, {53, 43}, {
              41, 58}, {-9, -35}, {38, 36}, {48, 37}, {-37, -38}, {59, 
              40}, {-4, -40}, {-39, -41}, {-11, -42}, {-29, -43}, {-33, -44}, \
{-25, -45}, {61, 51}, {-3, -47}, {60, 
              50}, {-36, -49}, {-13, -50}, {-48, -51}, {54, 
              52}, {-52, -53}, {-8, -54}, {-46, -55}, {57, 
              56}, {-56, -57}, {-10, -58}, {-34, -59}, {-32, -60}, {-2, -61}, \
{63, 62}, {-62, -63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{8, 7, 17, 2, 1, 4, 7, 24, 8, 19, 4, 5, 4, 5,
               1, 2, 11, 4, 4, 5, 4, 5, 2, 13, 2, 10, 5, 5, 16, 7, 11, 13, 8, 
              4, 19, 7, 2, 4, 5, 5, 5, 1, 14, 4, 21, 13, 24, 7, 2, 5, 23, 4, 
              8, 2, 4, 2, 4, 19, 7, 16, 2, 4, 2}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////Hn/Z8th9I5584+mI/UPyA8fYP9kD++WvL34PE
/fkLPoJo/f9+P8D01BvfwOKGx3+C+e+/gfnve2LB/Pnlz8Dq/b1W3QfR8cVr
3oDN13v5DkTzC667B6Llpeo/ge1z/fkDZN//pAV3wfpdpr8C0ecdop+Azb28
7iuI3p9y6BOYtvQ4DdLHcNryqz2QvhDeexpEH+Cd/R5kjn+2Pdid58uWbQSp
m3Bk3l+QOD//W7D7/gu2XAfR9mJ1l8Du1w/6DaLvN8R+Btv/aspfkD6FnVa1
IH36zQFXwO6PiTwPdj870yOw+l1dR0HqPiTcfQVSd9+gFxx+Br6vPoH489lm
vgCr+174AyReELPgCUj8/S4hhgMgmpMVbK99WSvY3/kBEPv57wmB/flfOBHs
//XX+f+C6fPqF8DyxefA9P8nsz6CzH0gIj4dHF9eXGBz1zOehZg7Ze55kPyC
m2rTQOET8MntgD1MHwBYk1TJ
             "], "LeafValues" -> 
            RawArray["Real32",{0.23835667967796326`, 0.2511802315711975, 
              0.2817203402519226, 0.2267419695854187, 0.2031211107969284, 
              0.11199074983596802`, -0.2167961448431015, 0.3109574019908905, 
              0.13637757301330566`, 0.23473411798477173`, 0.2680516242980957, 
              0.1208658441901207, -0.07570198178291321, -0.04810820892453194, 
              0.2881450653076172, 0.23737001419067383`, -0.10338640958070755`,
               0.20985981822013855`, -0.019589805975556374`, 
              0.13438135385513306`, -0.10984522849321365`, 
              0.1337561011314392, -0.05790292099118233, 0.15964293479919434`, 
              0.22322852909564972`, 0.08420523256063461, 
              0.2569142282009125, -0.08722801506519318, 0.09421200305223465, 
              0.2836214303970337, 0.14617030322551727`, 0.20571745932102203`, 
              0.0752321109175682, 0.2582724094390869, 0.1151113510131836, 
              0.23991510272026062`, 0.13448293507099152`, 
              0.26733314990997314`, 0.160291388630867, -0.01844830811023712, 
              0.12098325043916702`, 0.2508886754512787, 0.11251579970121384`, 
              0.22369863092899323`, 0.2017594575881958, 0.14670275151729584`, 
              0.24638666212558746`, 0.22264422476291656`, 
              0.24426694214344025`, 0.2395162582397461, 0.08104180544614792, 
              0.18084095418453217`, 0.19265909492969513`, 0.2067933976650238, 
              0.26439520716667175`, 0.1657901555299759, 0.2695760428905487, 
              0.25201037526130676`, 0.26185572147369385`, 
              0.22684919834136963`, 0.23568382859230042`, 0.2641581594944, 
              0.21754373610019684`, 0.2621460258960724}], "Children" -> 
            RawArray["Integer16",{{9, 2}, {7, 3}, {4, 8}, {19, 5}, {13, 
              6}, {-6, -7}, {30, 10}, {29, 21}, {33, 14}, {35, 11}, {25, 
              12}, {-12, -13}, {-5, -14}, {23, 15}, {18, 16}, {28, 
              17}, {-17, -18}, {44, 24}, {36, 20}, {-20, -21}, {41, 
              22}, {-22, -23}, {49, 26}, {-19, -25}, {-11, -26}, {27, 
              45}, {-24, -28}, {-16, -29}, {34, 47}, {48, 31}, {46, 
              32}, {-32, -33}, {53, 37}, {-4, -35}, {58, 42}, {-3, -37}, {40, 
              38}, {52, 39}, {-39, -40}, {60, 
              43}, {-9, -42}, {-36, -43}, {-41, -44}, {-15, -45}, {-27, -46}, \
{-31, -47}, {-30, -48}, {59, 51}, {56, 
              50}, {-50, -51}, {-49, -52}, {-38, -53}, {61, 54}, {57, 
              55}, {-55, -56}, {-10, -57}, {-54, -58}, {-8, -59}, {-2, -60}, \
{-34, -61}, {63, 62}, {-62, -63}, {-1, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{5, 4, 14, 8, 7, 2, 4, 5, 14, 17, 17, 1, 2, 
              8, 1, 2, 7, 2, 7, 8, 10, 8, 1, 7, 2, 17, 5, 7, 12, 14, 4, 20, 1,
               8, 2, 8, 17, 16, 1, 2, 15, 2, 11, 1, 10, 2, 8, 8, 5, 13, 2, 7, 
              1, 2, 4, 8, 8, 12, 7, 4, 5, 3, 8}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////HJ55+th9I/2eTeLkfKP7BZuVneyD3vN3KzyBx
+Y9nPoHo9Zdm/wDTV7d9B4tLuHwDqQ/4ZfobpJ7fv+8ZiL/h5YFvYP7uhjcg
dfrX4x+C6Pp5Ja/B/KKax2D6DtcXEL3fXhRsT7+F9SUQHc+4/wqYTp33HWTe
gZfvXoPMq7++8BdYn/f05yD6/FLXb3BzgOoKvPd/BKnLf/jnF4jf4Gp+Fsyf
uxHszg18Av/B5jTXg83JT172B2zOL5unYHPEf98C02qTn4DtP+0J9s+CpUpf
wfrWvLgM4ivUHn0A4utfi34LUjffVwxsjj1v90Wwf363fwTTam5HQOoTQhf9
BanvdzC5DxL3D/7zGezeIB+wOfIPt/8B8R9I+DE4gMJNtPYaWH9j51Gw+66z
vQSH36fnYHPj7T1/g8Pr09RLIH0CF9iPgczZL/AEHC7yGy7sA6u7cQ6s7r3c
8b9g8wL+fYD7CwDCDFYU
             "], "LeafValues" -> 
            RawArray["Real32",{0.2323288917541504, 0.2493700534105301, 
              0.2233698070049286, 0.14340874552726746`, 0.20136001706123352`, 
              0.10598348826169968`, -0.2023017853498459, 0.20011551678180695`,
               0.23237615823745728`, 0.24353039264678955`, 
              0.10088654607534409`, 
              0.25096529722213745`, -0.026928482577204704`, \
-0.049582503736019135`, 0.2759779691696167, 0.08887672424316406, 
              0.1578625738620758, -0.1189708337187767, 
              0.12025970220565796`, -0.017790410667657852`, \
-0.1164056733250618, 0.12394195795059204`, 
              0.21512718498706818`, -0.005399787798523903, 
              0.1702662855386734, -0.00707187969237566, 0.19060079753398895`, 
              0.19922466576099396`, 0.23460696637630463`, 0.2438986599445343, 
              0.2607800364494324, 0.2119848132133484, 0.14368486404418945`, 
              0.14266899228096008`, 
              0.14580321311950684`, -0.02384665608406067, 
              0.27946627140045166`, 0.13402540981769562`, 
              0.10186097025871277`, 0.23985528945922852`, 
              0.15678367018699646`, 0.11169379204511642`, 
              0.13287745416164398`, 0.04078620299696922, 0.22896318137645721`,
               0.2773929834365845, 0.23936069011688232`, 0.08777400106191635, 
              0.23277173936367035`, 0.24204935133457184`, 0.3171345293521881, 
              0.24759581685066223`, 0.13528671860694885`, 
              0.21230119466781616`, 0.272823691368103, 0.23753656446933746`, 
              0.19077475368976593`, 0.19150260090827942`, 
              0.24161110818386078`, 0.23546801507472992`, 0.2290172427892685, 
              0.2494603842496872, 0.22523051500320435`, 0.2588370442390442}], 
            "Children" -> 
            RawArray["Integer16",{{8, 2}, {7, 3}, {4, 9}, {22, 5}, {12, 
              6}, {-6, -7}, {31, 10}, {27, 14}, {24, 30}, {29, 11}, {13, 
              32}, {-5, -13}, {-11, -14}, {18, 15}, {19, 16}, {28, 
              17}, {-17, -18}, {46, 20}, {53, 26}, {44, 21}, {-21, -22}, {42, 
              23}, {-23, -24}, {48, 25}, {-25, -26}, {-20, -27}, {49, 
              33}, {-16, -29}, {45, 41}, {40, 50}, {55, 37}, {-12, -33}, {36, 
              34}, {39, 35}, {-35, -36}, {43, 59}, {38, 
              58}, {-32, -39}, {-34, -40}, {-10, -41}, {-30, -42}, {-3, -43}, \
{-28, -44}, {-19, -45}, {-8, -46}, {54, 47}, {-47, -48}, {-4, -49}, {61, 
              51}, {-31, -51}, {57, 52}, {-52, -53}, {-15, -54}, {-9, -55}, {
              60, 56}, {-56, -57}, {-50, -58}, {-38, -59}, {-37, -60}, {-2, \
-61}, {63, 62}, {-62, -63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 
            1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{2, 2, 21, 1, 7, 4, 2, 6, 10, 20, 8, 21, 11, 
              1, 4, 5, 4, 15, 9, 8, 1, 8, 21, 1, 18, 2, 22, 9, 9, 19, 5, 7, 8,
               8, 1, 14, 22, 8, 7, 17, 7, 4, 12, 2, 15, 8, 5, 15, 13, 6, 7, 8,
               4, 7, 8, 4, 7, 8, 7, 2, 8, 1}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwA+L////fn8v8bD+Qr7Dw5lt7IL1gxf53INrguN9LEN3Q
XPERRCs8Sf9gD1S//tLsH/uBtP7xxz9A+gL+Tf0MEr9/Mhksft5u5WcQbb+n
7ztI/gLfuj8g+fjHFV/B+tQUwDQ/z75bIPo/c8MnsL40219ged1csLy8GQvY
HP21S8D2PFB37gHbc0P0L0j8fQ0LWP37uTYfwOovbPkNtjdKF0z7i00Fq/tv
sPwPiJ7/agqYz18QdQdExzPuvwKi879r3QKZ/+Fq2TmQ+fxx9z+A+AbME/+D
+P8XzvkPNq+Z4T6YFvx9B+yepIgvIPn9gnnvwOHnu/Q1iF/vJApWz892EGyv
//P9r0HyCbN3XgWFY0Lzisvg8AgV+AsSn1DAzeAAsseUD+y+fOXGI2B9v59f
BNH1X56dBotvMnwCDg/x3+BwO58Rsw3sb2v/N2D/pfBtAtHrP8t/BNH7fxWD
zbO3un0aHo4Aa59FgA==
             "], "LeafValues" -> 
            RawArray["Real32",{0.07644256949424744, -0.17996303737163544`, 
              0.24210064113140106`, 0.2510804831981659, 0.24892471730709076`, 
              0.20709365606307983`, 0.05050449073314667, 0.28044697642326355`,
               0.24208180606365204`, 0.28868046402931213`, 
              0.14471906423568726`, -0.02123221755027771, 
              0.15941983461380005`, -0.36593636870384216`, 0.2527017295360565,
               0.11686690896749496`, -0.027906857430934906`, 
              0.01716444455087185, 0.23286326229572296`, 
              0.1302790641784668, -0.01853288523852825, -0.03276596590876579, 
              0.06973134726285934, 0.13844329118728638`, 0.2266351729631424, 
              0.11151059716939926`, 0.22923140227794647`, 
              0.19864121079444885`, 0.13193945586681366`, 
              0.14695200324058533`, 0.15283720195293427`, 
              0.25003325939178467`, 
              0.14948266744613647`, -0.050754863768815994`, 
              0.08620871603488922, 0.07009762525558472, 0.26191332936286926`, 
              0.1430944800376892, 0.19771428406238556`, 0.04162216559052467, 
              0.2232743501663208, 0.13028886914253235`, 0.2628176510334015, 
              0.2313227653503418, 0.1794559806585312, 0.19700871407985687`, 
              0.24958686530590057`, 0.22283236682415009`, 
              0.19862839579582214`, 0.24469098448753357`, 0.2485654056072235, 
              0.10132122784852982`, 0.24706120789051056`, 0.1371154636144638, 
              0.18155457079410553`, 0.2243833690881729, 0.23748087882995605`, 
              0.3184765577316284, 0.18177130818367004`, 0.29193466901779175`, 
              0.22762273252010345`, 0.205281063914299, 0.2358282208442688}], 
            "Children" -> 
            RawArray["Integer16",{{7, 2}, {3, 13}, {4, 18}, {5, 12}, {6, 
              17}, {-2, -7}, {26, 8}, {30, 9}, {10, 27}, {29, 
              11}, {-11, -12}, {23, 20}, {14, 37}, {24, 15}, {22, 
              16}, {-16, -17}, {-6, -18}, {35, 19}, {28, 
              21}, {-13, -21}, {-20, -22}, {-15, -23}, {-5, -24}, {45, 
              25}, {-25, -26}, {44, 31}, {43, 41}, {-19, -29}, {-9, -30}, {49,
               38}, {34, 32}, {54, 33}, {-33, -34}, {58, 40}, {48, 
              36}, {-36, -37}, {50, 46}, {42, 
              39}, {-39, -40}, {-35, -41}, {-28, -42}, {-31, -43}, {-10, \
-44}, {60, 52}, {-3, -46}, {47, 51}, {-38, -48}, {-4, -49}, {55, 57}, {-14, 
              59}, {-47, -52}, {56, 
              53}, {-53, -54}, {-32, -55}, {-8, -56}, {-45, -57}, {-50, -58}, \
{-27, -59}, {-51, -60}, {62, 61}, {-61, -62}, {-1, -63}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{5, 5, 8, 8, 3, 15, 1, 1, 8, 2, 4, 5, 5, 4, 
              19, 7, 8, 12, 1, 8, 2, 2, 8, 21, 2, 5, 9, 2, 19, 7, 5, 23, 4, 
              21, 2, 7, 8, 4, 11, 9, 4, 7, 8, 2, 16, 9, 17, 5, 24, 5, 4, 5, 2,
               2, 7, 8, 7, 5, 7, 2, 8, 2, 2}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////Xa/F+2A/kX2jQfGcP5M9PnfkGxF9wa/pbED/e
q/jHfiD9/+XbryBaX2nqJ5D8AZ7NYPX7z7iC5fUj256B6PyWqw9BtP1Ez18g
2t8n7SqI7g9W/Qmi5VdO+gOmb038BqLj54TcBdHnuZ9AzFl2/glYX+s8sDn/
q9M+g/VbWF8C0fyhPXdA9Ptlsv9A7tiw1/GmPZBWcLJeCXKPvZn9F5D8/l+7
b4Dd+T3uIEicvyv9ANjeh9vB9vtXczEcAMp/ON59HSR/v2YhWFx/e/NNsD33
JW6B6Pu6/pfB5pkfgfiHdf55kLkKJUxXQfYmFLjdQDZf/5TRQ7D87iMXweGn
cPgV2JyY/qtg956e+hns3jr/DyB5efOYt2D/XfsDdnf8jXO/wf6TO/4XzL93
/BM4fETOHwK7S+jkNHD8THn2HqS/nqsVLG/PIvoZJP4g6O51sPkPdK+A7T/t
CY6X8zJF4HhuuD/jlT0AU/JHnw==
             "], "LeafValues" -> 
            RawArray["Real32",{0.22623442113399506`, 0.16710908710956573`, 
              0.2470058798789978, 0.23064367473125458`, 0.22957153618335724`, 
              0.09392450749874115, -0.16443905234336853`, \
-0.010972343385219574`, 0.21431292593479156`, 0.23828935623168945`, 
              0.13594824075698853`, -0.08111056685447693, 
              0.21313533186912537`, 0.030908115208148956`, 
              0.24210092425346375`, 0.24071922898292542`, 
              0.12792418897151947`, 0.013283651322126389`, 
              0.20067861676216125`, 0.2220889925956726, 
              0.12158079445362091`, -0.06388864666223526, 0.0474858395755291, 
              0.2470606565475464, 0.06422088295221329, 0.0852368101477623, 
              0.09767689555883408, -0.013967296108603477`, 
              0.05677288770675659, 0.19579491019248962`, 0.1659567952156067, 
              0.20832891762256622`, 0.16501259803771973`, 
              0.23387454450130463`, 0.20645345747470856`, 
              0.21579866111278534`, 
              0.17029552161693573`, -0.003992386627942324, 0.2353220134973526,
               0.07941946387290955, 0.21228890120983124`, 0.2489514946937561, 
              0.2077597975730896, 0.10331997275352478`, 0.22627298533916473`, 
              0.12019778043031693`, 0.1546211540699005, 0.140671506524086, 
              0.24053855240345, 0.12080363184213638`, 0.24685443937778473`, 
              0.21424600481987, 0.23420372605323792`, 0.25867947936058044`, 
              0.2420467585325241, 0.17435559630393982`, 0.1847945898771286, 
              0.2786090075969696, 0.1964060515165329, 0.23352499306201935`, 
              0.24792775511741638`, 0.22474129498004913`, 0.2483280748128891, 
              0.20490986108779907`}], "Children" -> 
            RawArray["Integer16",{{12, 2}, {3, 14}, {9, 4}, {5, 7}, {24, 
              6}, {-6, -7}, {26, 8}, {-8, -9}, {28, 10}, {13, 
              11}, {-11, -12}, {31, 18}, {-10, -14}, {38, 15}, {32, 16}, {25, 
              17}, {-17, -18}, {34, 19}, {23, 20}, {22, 
              21}, {-21, -22}, {-20, -23}, {27, 
              30}, {-4, -25}, {-16, -26}, {-5, -27}, {-19, -28}, {33, 
              29}, {-29, -30}, {-24, -31}, {52, 35}, {57, 44}, {-2, -34}, {47,
               41}, {42, 36}, {60, 37}, {-37, -38}, {48, 39}, {46, 
              40}, {-40, -41}, {43, 58}, {45, 
              59}, {-35, -44}, {-33, -45}, {-32, -46}, {-39, -47}, {53, 50}, {
              49, 51}, {-3, -50}, {-48, -51}, {-49, -52}, {61, 
              54}, {-13, -54}, {56, 
              55}, {-55, -56}, {-53, -57}, {-15, -58}, {-42, -59}, {-43, \
-60}, {-36, -61}, {63, 62}, {-62, -63}, {-1, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{24, 4, 21, 5, 7, 8, 14, 22, 5, 20, 8, 19, 4,
               8, 2, 2, 4, 7, 4, 1, 2, 5, 22, 14, 24, 23, 5, 5, 5, 5, 2, 10, 
              4, 1, 8, 4, 2, 7, 4, 5, 1, 5, 13, 7, 6, 1, 20, 5, 4, 5, 5, 13, 
              8, 1, 5, 8, 21, 4, 5, 8, 20, 2, 13}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////XS934uh/IV/Bd+toeyOc/9uAziF9QyvbWHkg7
aJx/CaIXTHn2HkQHHL/5E6Quf7XGn/1AOl7q2XcQnZ+8DMzXZ/QC8/1V7X+B
5Sfd+Qaiz0cFfwGZ+2CN9TOQOQwHCk6CzRE2+wJWd1T+K4jur1zyGaw+XBis
L9943wcQLf9mPVj8/8I5/0HmGDyZ8xek/zzT8v8g8fdNPBBxP4MDIHF/KevL
IP6Ehfvug/jvu9f9Bqmr1yk8A3bH/j/vQOL2a/N+gu0T63oAEheQrb0Ccl/B
BtFvIHn5nawfweLiJb9A/PqGmR9B6udf73oNovdfLAHrf6/yCRyOEwq4GRxA
+j6e+QR2rynfX7D5CfXgcNHPCmE4AArPa1cf2yOFz/oYxeVgfx4Q/AsypyFh
7h9w+AsWPgep+7/bABw+9Wd9wHR86EIwrf/3yQ+weHP9L2T5/WdcweL2X1Z8
2w8LbyD9wUX/kz0AW1M7lw==
             "], "LeafValues" -> 
            RawArray["Real32",{0.23908978700637817`, -0.25993725657463074`, 
              0.22042220830917358`, -0.187705397605896, 0.23028412461280823`, 
              0.13107125461101532`, 0.00700124679133296, 0.21636581420898438`,
               0.11364948749542236`, 0.21316282451152802`, 
              0.21965205669403076`, -0.019206739962100983`, 
              0.13296018540859222`, 
              0.018234921619296074`, -0.009647674858570099, 
              0.16122552752494812`, -0.016721555963158607`, 
              0.16516974568367004`, 0.01486063003540039, 0.19361092150211334`,
               0.2033616006374359, 0.14001230895519257`, -0.05200367793440819,
               0.15150651335716248`, 0.22378505766391754`, 
              0.04267358034849167, 0.1391196995973587, 0.22511599957942963`, 
              0.09218960255384445, 0.20857763290405273`, 0.12433099001646042`,
               0.2371291071176529, 0.22606368362903595`, 0.2009611576795578, 
              0.030643226578831673`, 0.21377505362033844`, 0.21611388027668, 
              0.06290844082832336, 0.1868872046470642, 0.21616026759147644`, 
              0.10418863594532013`, 0.05898940935730934, 0.23322296142578125`,
               0.21106256544589996`, 0.15991730988025665`, 
              0.24821367859840393`, 0.17349188029766083`, 0.09996727854013443,
               0.23715098202228546`, 0.1294396072626114, 0.18197908997535706`,
               0.1883563995361328, 0.16577748954296112`, -0.5530221462249756, 
              0.22614844143390656`, 0.28728970885276794`, 
              0.19267264008522034`, 0.23889663815498352`, 0.1611926257610321, 
              0.23580652475357056`, 0.26401782035827637`, 
              0.20111827552318573`, 0.22901155054569244`, 
              0.18767112493515015`}], "Children" -> 
            RawArray["Integer16",{{10, 2}, {3, 7}, {8, 4}, {5, 12}, {6, 
              11}, {-4, -7}, {9, 24}, {23, 17}, {30, 14}, {25, 
              19}, {-6, -12}, {26, 13}, {-13, -14}, {16, 
              15}, {-15, -16}, {-10, -17}, {29, 18}, {-18, -19}, {27, 20}, {
              31, 21}, {28, 22}, {-22, -23}, {45, 35}, {36, 43}, {47, 
              38}, {-5, -27}, {33, 48}, {-21, -29}, {-9, -30}, {51, 32}, {41, 
              46}, {-31, -33}, {58, 34}, {-34, -35}, {-24, -36}, {37, 
              44}, {-8, -38}, {39, 56}, {42, 
              40}, {-40, -41}, {-20, -42}, {-26, -43}, {50, 
              60}, {-37, -45}, {-2, -46}, {-32, -47}, {54, 52}, {49, 
              61}, {-28, -50}, {-25, -51}, {-3, -52}, {57, 53}, {-53, -54}, {
              63, 55}, {-55, -56}, {62, 
              59}, {-48, -58}, {-11, -59}, {-57, -60}, {-44, -61}, {-49, \
-62}, {-39, -63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{2, 1, 11, 7, 7, 19, 4, 22, 2, 1, 7, 8, 8, 
              24, 9, 4, 7, 5, 8, 5, 4, 8, 8, 4, 18, 7, 14, 1, 15, 1, 4, 22, 2,
               7, 16, 19, 8, 7, 23, 8, 4, 5, 4, 9, 2, 8, 5, 2, 1, 19, 23, 8, 
              4, 4, 17, 4, 4, 4, 1, 5, 2, 2, 1}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L///+fv3T2zX4gzR93/8N+oLiBiuwHeyA//vCHzyD+
g4Jdz0B8+ZWT/oDU/Wdu+ASi81drgPn8U5f+BNH6a5f8ANH37wD5IHOehr4C
6fv/GWguyB7GD99B4gUlCvdA4vPZZr4AmzfDA0Kf2vgARMtzLjkPov2lrC+D
6PUJR8H66/f5fQXTh2NPgs2rVAHrez/v/HuweFj7U7C9vq8+2QPpBu0Pf8D+
6GH/CJKff/LcL7C7v2kcBtu3cM5/sDkWQmB/xC+49AVs3/WycyBzNty6uw+k
f3/HiftgezhZf4PVffe+APbvlmNXQLT98pyLILrfcdEVkL4F05IXg/T5i039
C+In5F16BA6/Lidw+F4w9VgE4vfPkvwLdteT6WBz+3n3fAO757AE2D32VrdP
g/315RmYPt9sMQ+kX2DNjU8g/fmX390Eh7e46H1wPF3ddhPs3osl4PBPyAh7
CeLzi9ZeA6nbL3oGbN/+z9d/7wcAlb5dqg==
             "], "LeafValues" -> 
            RawArray["Real32",{0.2154180258512497, 0.23071062564849854`, 
              0.2107284814119339, -0.0495983324944973, 0.12538538873195648`, 
              0.15166758000850677`, -0.1639080047607422, \
-0.021021241322159767`, 0.10620788484811783`, -0.20736563205718994`, 
              0.20582197606563568`, 0.1514710932970047, 
              0.18879695236682892`, -0.028935059905052185`, 
              0.08605513721704483, 0.1910511702299118, -0.026463313028216362`,
               0.2397070676088333, -0.016258815303444862`, 
              0.14029154181480408`, 0.26447129249572754`, 
              0.14310488104820251`, -0.09326841682195663, 
              0.2264397144317627, -0.026117375120520592`, \
-0.06039205566048622, -0.0324145145714283, 0.19681212306022644`, 
              0.10256541520357132`, 0.08084771037101746, 0.22268478572368622`,
               0.22879458963871002`, 0.19429413974285126`, 0.1973036229610443,
               0.07839153707027435, 0.07165978103876114, 0.19375459849834442`,
               0.15185241401195526`, 0.12742368876934052`, 
              0.08813202381134033, 0.24615219235420227`, 
              0.1362563520669937, -0.05328753963112831, 0.18582412600517273`, 
              0.11126971244812012`, 0.22338220477104187`, 0.1258779913187027, 
              0.07126595824956894, 0.17469671368598938`, 0.18073028326034546`,
               0.11269112676382065`, 0.2319086790084839, 0.2409951090812683, 
              0.1341044008731842, 0.23307915031909943`, 0.22691717743873596`, 
              0.22615662217140198`, 0.17786917090415955`, 
              0.23106388747692108`, 0.23225317895412445`, -0.5312425494194031,
               0.2408398687839508, 0.21570180356502533`, 0.2131076455116272}],
             "Children" -> 
            RawArray["Integer16",{{9, 2}, {10, 3}, {4, 8}, {11, 5}, {6, 
              7}, {-5, -7}, {-6, -8}, {32, 12}, {33, 17}, {30, 14}, {38, 
              16}, {13, 26}, {-9, -14}, {44, 15}, {24, 29}, {-12, -17}, {20, 
              18}, {19, 21}, {37, 25}, {27, 31}, {23, 
              22}, {-22, -23}, {-19, -24}, {-15, -25}, {-20, -26}, {-13, \
-27}, {28, 50}, {-10, -29}, {-16, -30}, {49, 35}, {56, 34}, {51, 46}, {48, 
              40}, {-32, -35}, {39, 
              36}, {-36, -37}, {-18, -38}, {-3, -39}, {-31, -40}, {43, 41}, {
              57, 42}, {-42, -43}, {47, 58}, {61, 
              45}, {-45, -46}, {-33, -47}, {-34, -48}, {59, 52}, {63, 
              55}, {-28, -51}, {-4, -52}, {54, 
              53}, {-53, -54}, {-49, -55}, {-50, -56}, {-21, -57}, {-41, \
-58}, {-44, -59}, {60, 62}, {-1, -61}, {-11, -62}, {-60, -63}, {-2, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{5, 4, 19, 2, 1, 8, 4, 7, 17, 15, 17, 1, 1, 
              7, 2, 7, 5, 7, 2, 1, 8, 2, 8, 8, 7, 7, 21, 16, 1, 9, 5, 4, 13, 
              18, 21, 2, 5, 5, 2, 7, 8, 1, 7, 8, 7, 18, 22, 4, 24, 10, 2, 13, 
              8, 5, 2, 7, 8, 1, 7, 1, 8, 8, 2}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////vTzn0aT+Q7lcRfQ2m3bd/BNHxDpKfQbQ/fwGY
fz4q+AuItl+b9xNE3292fLkfaM6GsNIf9iD1oQJ/QeLv1cIegtX5Mn1BpuVv
TfwGoutTwn+D9TVveQ7Sl//wzy+wPV+PvQTR+TdKH4DVC5W8AtN2Z8Di/Q4m
90H0fJmEw2D3eRQ+BpnzIOjudZA5+2c/ewQWf8HwAaxvdsg3kLyB8MUzYHtm
S/0F8QP8sh6D+PLSLGB3TCjgZnAA+a/3H8TfD/6B9etfi34LNufh9j8gev2F
b/tANL9o7TUQvb+x8yjYXZ+mXgKZw+AatRhkLv+GvZvA+sV/3wL7v6kd7P/6
6pX/wfouLQSHT/yNc2D7E8T9H9mD3MEm/wFEKzzQvQKiH0j4gd31fxPzdXC4
yh0Hh+95kfOHwO4QOjkNpH/BlGfvQfbaL21/C+ILLN17C+y/XKPvYHtOez4D
q+uXOAwyt+H+jFf2AOvZRwU=
             "], "LeafValues" -> 
            RawArray["Real32",{0.2170613557100296, 0.18876460194587708`, 
              0.2119268923997879, 0.20178769528865814`, 0.16550706326961517`, 
              0.035659223794937134`, -0.15897677838802338`, 
              0.14936569333076477`, -0.018645422533154488`, 
              0.25117921829223633`, 0.22020560503005981`, 
              0.12085949629545212`, -0.013746834360063076`, 
              0.1602105349302292, -0.008977498859167099, \
-0.018497895449399948`, 0.125996932387352, 0.2126694619655609, 
              0.23150533437728882`, -0.005495348479598761, 
              0.1215856522321701, -0.10641661286354065`, 
              0.22816279530525208`, -0.011609518900513649`, 
              0.2162901759147644, 0.15909768640995026`, 0.0927707850933075, 
              0.06517469882965088, 0.17189478874206543`, -0.07746843248605728,
               0.08145705610513687, 0.21676389873027802`, 
              0.15964332222938538`, 0.2071026712656021, 0.19916902482509613`, 
              0.09749390184879303, 0.13281702995300293`, 0.10207737237215042`,
               0.13367187976837158`, 0.1543339490890503, 
              0.15135055780410767`, -0.02093198150396347, 
              0.22913651168346405`, 0.19751247763633728`, 
              0.17475037276744843`, 0.1337578296661377, 0.20039986073970795`, 
              0.22720424830913544`, 0.18471913039684296`, 
              0.18939799070358276`, 0.22503474354743958`, 
              0.23181769251823425`, 0.2486421912908554, 0.13176269829273224`, 
              0.22373059391975403`, 0.2270524501800537, 0.1539354920387268, 
              0.16095386445522308`, 0.25916561484336853`, 
              0.22951236367225647`, 0.23207928240299225`, 
              0.23977181315422058`, 0.2225552350282669, 
              0.18772609531879425`}], "Children" -> 
            RawArray["Integer16",{{17, 2}, {7, 3}, {10, 4}, {15, 5}, {8, 
              6}, {-6, -7}, {32, 9}, {-5, -9}, {11, 30}, {33, 13}, {27, 
              12}, {-12, -13}, {26, 14}, {-14, -15}, {38, 16}, {-16, -17}, {
              37, 18}, {22, 19}, {23, 20}, {24, 21}, {-21, -22}, {28, 42}, {
              44, 25}, {-20, -25}, {-24, -26}, {-11, -27}, {-8, -28}, {53, 
              29}, {-29, -30}, {46, 31}, {-31, -32}, {48, 34}, {36, 52}, {47, 
              35}, {-35, -36}, {-3, -37}, {54, 39}, {-4, -39}, {43, 40}, {51, 
              41}, {-41, -42}, {58, 45}, {49, 
              59}, {-19, -45}, {-43, -46}, {-10, -47}, {-33, -48}, {60, 
              50}, {-38, -50}, {-49, -51}, {-40, -52}, {-34, -53}, {-18, \
-54}, {61, 55}, {57, 
              56}, {-56, -57}, {-55, -58}, {-23, -59}, {-44, -60}, {-2, -61}, \
{63, 62}, {-62, -63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{1, 1, 8, 8, 7, 7, 5, 1, 7, 5, 7, 8, 4, 4, 4,
               2, 5, 1, 7, 17, 10, 5, 8, 5, 5, 8, 8, 2, 4, 1, 10, 8, 9, 20, 7,
               2, 7, 4, 17, 5, 4, 5, 5, 1, 2, 15, 1, 8, 14, 20, 10, 8, 5, 8, 
              2, 24, 4, 2, 20, 4, 8, 2, 8}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB2IgfWDDgTf2////1192/sl+IL9hh/t7EH9+75dH+4F0
PePnjyDxBcxWL+yB9IeEu69A8usFX/0AiSc4y3wG8fkLou6A1Ofn/7kAot/v
07gHlj/n8wIkf78h9jNI/Hyc22UQ7f/w+W0Qff/qh0cgdQxren+B7fVP/Al2
h+ue32B7HHU/gN2x8gPYvgP7vJ+A7fPnOAESl7/X9xBE6zdNuQE2f/r8H2B3
XNVaDKLtG8N3gOj1rH2/wO4JXfQX5I8D7n03QebsN9vzCST+wXDjZrB9n+U/
gtUbMv0C2xuaBvZ/wf1Lx0D6FlSseQWiJ6h4XwG7d1XlY7D9nJ7nwO55uP0P
2D8mu8Dy6z+8fAAS7z9gBvbv/CfTf4PDRzT4HNifs+vugNTlv7l7CsQXkFzw
H2Q+g8ePbSDx+Njg32D7M2Z9APMdJMHhqC+l/x5E/486+QnsT37Gr2D/l4aD
+fUGNeBwm89t/wLZP/xdV5/sBwACSzvP
             "], "LeafValues" -> 
            RawArray["Real32",{0.22735776007175446`, 0.21523839235305786`, 
              0.15372490882873535`, 0.20859690010547638`, 
              0.15566232800483704`, -0.17589937150478363`, \
-0.003473013173788786, 0.20152002573013306`, 0.2211107760667801, 
              0.26810482144355774`, 
              0.13489943742752075`, -0.03993401676416397, \
-0.051088493317365646`, 0.19675461947917938`, -0.06505177915096283, 
              0.08606790751218796, 
              0.011640828102827072`, -0.04157344996929169, 
              0.21779058873653412`, -0.05761197209358215, 
              0.15861938893795013`, -0.09105013310909271, 
              0.20284618437290192`, 0.0388571172952652, 0.14526554942131042`, 
              0.12668296694755554`, -0.06223316118121147, \
-0.038206495344638824`, 0.11983221024274826`, -0.1623849719762802, 
              0.12105631083250046`, 0.21919432282447815`, 
              0.21180446445941925`, 0.03748460114002228, 
              0.1666833758354187, -0.08716537058353424, 0.24016442894935608`, 
              0.08149006217718124, 0.05738786980509758, 0.18578080832958221`, 
              0.2617678940296173, 0.17522630095481873`, 0.09995527565479279, 
              0.016302436590194702`, 
              0.26068735122680664`, -0.2126329243183136, 0.22176453471183777`,
               0.2004796266555786, 0.14878185093402863`, 0.21681208908557892`,
               0.1462850719690323, 0.19909092783927917`, 0.22184766829013824`,
               0.08465629070997238, 0.09751728922128677, 0.21586985886096954`,
               0.20370915532112122`, 0.2622261047363281, 0.11989918351173401`,
               0.20737102627754211`, 0.15072084963321686`, 
              0.24032768607139587`, 0.22595933079719543`, 
              0.2367687225341797}], "Children" -> 
            RawArray["Integer16",{{2, 18}, {8, 3}, {4, 7}, {13, 5}, {17, 
              6}, {-6, -7}, {19, 28}, {30, 9}, {10, 15}, {11, 
              12}, {-9, -12}, {-11, -13}, {14, 16}, {-3, -15}, {41, 
              21}, {-14, -17}, {-5, -18}, {22, 31}, {42, 
              20}, {-20, -21}, {-16, -22}, {32, 23}, {25, 24}, {29, 40}, {26, 
              27}, {-23, -27}, {-26, -28}, {44, 35}, {-24, -30}, {47, 33}, {
              36, 51}, {52, 43}, {46, 34}, {-34, -35}, {-29, -36}, {49, 37}, {
              38, 39}, {-37, -39}, {-38, -40}, {-25, -41}, {-10, -42}, {-4, \
-43}, {54, 45}, {-8, -45}, {-44, -46}, {-31, -47}, {56, 48}, {-48, -49}, {50, 
              63}, {-19, -51}, {58, 55}, {61, 53}, {-53, -54}, {-33, -55}, {
              62, 57}, {-1, -57}, {-56, -58}, {60, 
              59}, {-59, -60}, {-32, -61}, {-2, -62}, {-52, -63}, {-50, \
-64}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{9, 7, 8, 4, 5, 2, 8, 2, 1, 7, 1, 2, 2, 4, 9,
               14, 10, 2, 7, 7, 8, 7, 4, 2, 2, 4, 5, 21, 3, 14, 6, 3, 16, 1, 
              1, 4, 8, 1, 4, 4, 4, 1, 7, 2, 5, 5, 1, 22, 7, 4, 10, 17, 1, 14, 
              4, 4, 1, 2, 7, 21, 3, 2, 2}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////L3/z4fT+QXv9Z/iOIjr9z4AGInl/+DMznP9cG
Ea93Bas7P33+DxBdv37LHRB936D3BYiWd+wFi6//pHEXROc/j/+yH2hPQvGG
9/ZA+sHT1vX2QPF+Hbl/IPGA4zd/gsQdHI5+A4nbl7WC9dWfWtkLovUX7f8F
dsdflj8g9R+m5/0AqbvfEPsZbG7epUdgfS9F34PV+4ffBolfiPpbAzJ3Q9jj
2yC6IJ7lDNjebx9OgdTZ75Z6BFJnUKW+GyR/IEmMwQFkLtPHC2D7A56B3eHv
t/Un2D/X+f+C9d3y+gTSx6Biuxysz+3UNZC5+R0+38Dhs/MEOHz2X+/5Dfbf
gYSDIPn4Bd9egfgbjrIeBvH12XKugs0VW/oBbG6K1Rew/kl3voHUHTgZ+Asc
Xgengd31X1b9I0i8wET8Hzi8qrY8A5tbvObNfpg8yP07/1wHm8t49jeY/70Q
HB/2M5//AIdLeO9pkP4JC9e+sQcA6Uo9Zw==
             "], "LeafValues" -> 
            RawArray["Real32",{0.24427810311317444`, 0.22833466529846191`, 
              0.2113925665616989, 0.23172958195209503`, 0.16789694130420685`, 
              0.05335429683327675, -0.15667128562927246`, \
-0.006438496522605419, 0.11485157161951065`, -0.0690765231847763, 
              0.08501139283180237, -0.004066721070557833, \
-0.02821311168372631, 0.1056411936879158, 0.19790370762348175`, 
              0.1718275547027588, 0.19160334765911102`, 
              0.1982932686805725, -0.017382636666297913`, 0.04580242186784744,
               0.18827588856220245`, 0.08815962821245193, 
              0.25345054268836975`, 0.11972212791442871`, 
              0.1910771131515503, -0.04691600054502487, 0.08589018136262894, 
              0.22625358402729034`, 0.17541736364364624`, 
              0.21675103902816772`, 0.06614263355731964, 0.07601241767406464, 
              0.22317788004875183`, 0.10136397182941437`, 
              0.05115112289786339, -0.019958164542913437`, 
              0.006957212928682566, 0.16348141431808472`, 0.1957167536020279, 
              0.18873877823352814`, 0.07877472788095474, 0.10606792569160461`,
               0.04455409571528435, 0.21703515946865082`, 
              0.19447168707847595`, 0.08648847788572311, 0.19384680688381195`,
               0.1393669992685318, 0.16449281573295593`, 0.171128511428833, 
              0.17167598009109497`, -0.06957975029945374, 0.07220113277435303,
               0.2253839373588562, -0.5479717254638672, 0.20996393263339996`, 
              0.2429078221321106, 0.30656251311302185`, 0.1854177564382553, 
              0.20482145249843597`, 0.2331390082836151, 0.24061822891235352`, 
              0.23777851462364197`, 0.2198689728975296}], "Children" -> 
            RawArray["Integer16",{{15, 2}, {10, 3}, {7, 4}, {8, 5}, {11, 
              6}, {-6, -7}, {21, 12}, {19, 9}, {-9, -10}, {20, 
              16}, {-5, -12}, {14, 13}, {-13, -14}, {-8, -15}, {33, 22}, {17, 
              32}, {18, 26}, {-11, -19}, {-4, -20}, {43, 29}, {37, 28}, {23, 
              38}, {27, 24}, {25, 35}, {-24, -26}, {-18, -27}, {36, 
              50}, {-22, -29}, {30, 31}, {-21, -31}, {-30, -32}, {34, 49}, {
              44, 52}, {-17, -35}, {-25, -36}, {-16, -37}, {-3, -38}, {39, 
              40}, {63, 42}, {41, 53}, {-39, -42}, {-40, -43}, {59, 48}, {45, 
              47}, {58, 46}, {-46, -47}, {62, 
              51}, {-44, -49}, {-33, -50}, {-28, -51}, {-48, -52}, {54, 
              56}, {-41, -54}, {60, 55}, {-55, -56}, {61, 
              57}, {-57, -58}, {-1, -59}, {-2, -60}, {-34, -61}, {-53, -62}, \
{-45, -63}, {-23, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{5, 4, 13, 1, 1, 4, 7, 23, 5, 21, 24, 7, 7, 
              7, 17, 7, 2, 8, 7, 1, 8, 2, 7, 22, 7, 4, 15, 17, 10, 12, 5, 18, 
              5, 2, 6, 2, 7, 8, 7, 22, 20, 1, 8, 2, 1, 12, 4, 5, 8, 13, 22, 8,
               1, 1, 7, 2, 24, 4, 4, 4, 5, 4, 1}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L///+fd4h+sh9Iz093ebofKC6wM+qdPZD//pbPFxCf
YYP9CxB//dVt38Hq/BN/guj8bZt/gej6lR9+gNQd2GP6wh5Ib3ASfAtS7//1
2EuQeENF5CsQf/+xjV9B/ID31r9B/HrGzx9B+u2fbnoENlcm4TCIXh/IdgOk
rmBX0z6QeQpyvM9A6v9Xp33eDzMHpH6e2xsQ7b/v+TOwuPkRsHv6v3b8B+nf
cHrqZ5D+CUcPfgTpz5+78RtI/n8J2x+w+nu1n8HuNr93BSxvvO8DSJzftANs
/vtkz1tg/n0JMK0v/vsWSP2F47nzQeYySOh+AfurZ9E/sL079C6BzW9XPAR2
l5zGYzC/NOc+iJbXc14LouNvnPsN5h8Q/Au2f5/3E5B5DyT8GBxA6h3j34Pt
LWI4Dg6P6OALYHWvDS+A1C3o8HgIph+yXgPH0y4hhgMg+14I7gG7I1gVHD/6
Cjbg8PBnVga777/Nyudge3ONvu8HAFedQec=
             "], "LeafValues" -> 
            RawArray["Real32",{-0.9738816618919373, 0.17526480555534363`, 
              0.24392767250537872`, 0.17736157774925232`, 0.05895286425948143,
               0.13415846228599548`, 
              0.11517591774463654`, -0.1726239025592804, 0.09646496176719666, 
              0.25187933444976807`, 0.11251973360776901`, 
              0.1719513237476349, -0.12670005857944489`, 
              0.1449681669473648, -0.037817396223545074`, 
              0.22709862887859344`, 0.18729521334171295`, 
              0.0892580971121788, -0.045459769666194916`, \
-0.06545385718345642, 0.1209179013967514, 
              0.1496099978685379, -0.058330558240413666`, \
-0.04208642616868019, -0.11900939047336578`, -0.09508079290390015, 
              0.0526452362537384, 0.17997829616069794`, 0.10884544998407364`, 
              0.1678650677204132, 0.07460936903953552, 0.19297920167446136`, 
              0.15076518058776855`, 0.07664859294891357, 0.07344892621040344, 
              0.03460271656513214, 0.16438589990139008`, 
              0.11204496026039124`, -0.04281102120876312, 
              0.16777200996875763`, 0.1925264149904251, 0.24611297249794006`, 
              0.17348892986774445`, 0.04937213659286499, 0.17771078646183014`,
               0.016700096428394318`, 0.21668347716331482`, 
              0.21241328120231628`, 0.13730183243751526`, 
              0.13567839562892914`, 0.23653964698314667`, 0.1629437953233719, 
              0.22781489789485931`, 0.10154183954000473`, 0.2282625287771225, 
              0.22386156022548676`, 0.23266330361366272`, 0.1758476197719574, 
              0.23631644248962402`, 0.22728250920772552`, 
              0.20696473121643066`, 0.19918039441108704`, 
              0.25631213188171387`, 0.22471396625041962`}], "Children" -> 
            RawArray["Integer16",{{9, 2}, {6, 3}, {4, 8}, {12, 5}, {7, 23}, {
              26, 10}, {-5, -8}, {27, 21}, {31, 15}, {11, 32}, {14, 30}, {33, 
              13}, {-13, -14}, {-7, -15}, {16, 41}, {20, 17}, {18, 
              19}, {-17, -19}, {-18, -20}, {42, 24}, {22, 
              25}, {-9, -23}, {-6, -24}, {-21, -25}, {-22, -26}, {47, 28}, {
              50, 34}, {29, 46}, {-27, -30}, {-12, -31}, {48, 36}, {40, 
              35}, {-3, -34}, {-28, -35}, {-33, -36}, {39, 37}, {56, 
              38}, {-38, -39}, {43, 55}, {-11, -41}, {57, 
              44}, {-10, -43}, {-32, -44}, {49, 45}, {-45, -46}, {-29, -47}, {
              63, 51}, {59, 52}, {-42, -50}, {-4, -51}, {-48, -52}, {54, 
              53}, {-53, -54}, {-49, -55}, {-40, -56}, {-37, -57}, {62, 
              58}, {-58, -59}, {60, 
              61}, {-1, -61}, {-60, -62}, {-16, -63}, {-2, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{22, 9, 14, 1, 2, 8, 17, 1, 2, 15, 10, 1, 2, 
              5, 1, 4, 2, 8, 5, 4, 8, 7, 24, 5, 5, 2, 13, 2, 4, 8, 2, 22, 2, 
              2, 5, 1, 4, 1, 5, 7, 10, 13, 1, 2, 18, 8, 7, 23, 1, 5, 13, 3, 4,
               7, 6, 1, 1, 1, 1, 18, 10, 2, 1}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////nr1n/bT+Qtjez/7IfJB7N88UeSCfstHkOog8c
U30D5n9+8QFEKySq/bUHqr//ds9PkL71hky/QHR819S/IP0OWSr/QPLvb/l8
AYvfO/4JbP7pyd9B9PmEejD9/vK6ryD6f3XaZ5C+hBbex2B9SzXB6u83xH4G
0729H0C0fG3SA7B+puX/we7cGXER5B4DNcMLYPfZnT8LoicUcDM4ANXxsx38
A1Lvf0L2EFg/55LzIH0FNff2gezpZxdiOACk9a9FvwWJB8gtuwb2X1rSTZC8
f4kH2F/2a/N+guWnRPwGiddPfQ4Or/jDH8Dublhx/BdIX0PC3D8gesOsZEg4
7bT4BFK/fk0Y2J75qTPfgP07w+MF2B+HJcDu02fLuQp255+jx/bDzAG5l3cK
wwFQeB6tfA8OF07W3yB19VYTwOJge0Dui+L7ARKff/Ic2L3nw4Uh7uudBlZ3
YPHC72B37XW8CXbX3A+v7AFtUySw
             "], "LeafValues" -> 
            RawArray["Real32",{0.1711900681257248, 
              0.17456768453121185`, -0.13147158920764923`, 
              0.20467738807201385`, 0.19416658580303192`, 0.1437453329563141, 
              0.015352700836956501`, 0.25518205761909485`, 
              0.007289590779691935, 0.13853251934051514`, 0.09365246444940567,
               0.04816442355513573, 0.15068355202674866`, 
              0.00949877593666315, -0.0027087279595434666`, 
              0.07469823956489563, 0.12021038681268692`, 
              0.00039390273741446435`, 0.1807304322719574, 
              0.05567434802651405, 0.09444446861743927, -0.04157518595457077, 
              0.0783936083316803, 0.09600155055522919, 0.19212616980075836`, 
              0.19253312051296234`, 0.19013622403144836`, 
              0.24214953184127808`, 0.10970482230186462`, 
              0.23349185287952423`, -0.018421266227960587`, 
              0.21884076297283173`, 0.23905985057353973`, 
              0.12442274391651154`, 0.21788044273853302`, 
              0.18616808950901031`, 
              0.053938545286655426`, -0.07903309166431427, 0.0916673094034195,
               0.15323953330516815`, 0.11817757785320282`, 
              0.21094024181365967`, -1.801449179649353, 
              0.20979417860507965`, -0.06009231135249138, 
              0.19512511789798737`, 0.19619104266166687`, 
              0.11390109360218048`, -0.2064215987920761, 0.11392726004123688`,
               0.16503429412841797`, -0.2061895728111267, 0.09494950622320175,
               0.21779559552669525`, -0.8224413990974426, 
              0.20116183161735535`, 0.23376145958900452`, 
              0.15736378729343414`, 0.26196858286857605`, 
              0.22130313515663147`, 0.22330358624458313`, 
              0.21652080118656158`, -0.164195716381073, 
              0.20851504802703857`}], "Children" -> 
            RawArray["Integer16",{{11, 2}, {7, 3}, {4, 10}, {5, 9}, {6, 
              8}, {-3, -7}, {15, 23}, {-6, -9}, {28, 14}, {27, 12}, {18, 
              32}, {26, 13}, {-13, -14}, {-10, -15}, {31, 16}, {25, 
              17}, {-17, -18}, {19, 22}, {29, 20}, {24, 21}, {-21, -22}, {40, 
              37}, {45, 34}, {-20, -25}, {-16, -26}, {-11, -27}, {33, 
              55}, {-5, -29}, {30, 39}, {-1, -31}, {36, 57}, {48, 
              42}, {-4, -34}, {35, 49}, {-24, -36}, {-2, -37}, {56, 
              38}, {-38, -39}, {-30, -40}, {61, 41}, {-41, -42}, {46, 43}, {
              44, 62}, {-43, -45}, {60, 51}, {50, 47}, {-47, -48}, {53, 
              52}, {-35, -50}, {-33, -51}, {-46, -52}, {58, 59}, {54, 
              63}, {-12, -55}, {-28, -56}, {-23, -57}, {-32, -58}, {-49, \
-59}, {-53, -60}, {-8, -61}, {-19, -62}, {-44, -63}, {-54, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{8, 7, 9, 5, 4, 2, 7, 18, 1, 3, 21, 4, 2, 2, 
              8, 1, 1, 5, 8, 22, 5, 1, 1, 1, 15, 13, 9, 13, 4, 7, 2, 7, 8, 10,
               8, 5, 1, 2, 23, 10, 1, 8, 20, 18, 19, 11, 7, 21, 22, 23, 7, 8, 
              3, 7, 5, 2, 5, 20, 1, 7, 2, 5, 5}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////bCwR93g+k/8/weAGi+V8bvgHR5wvDv4Do+w2x
YHn/JdvAND//258ger+pwR8Qvd767WMQPT9A5/d+oLkfSphe2wP57y+v+wri
b1BZ9BzML+p8B1Knrx8EVteQ5/8EJH7foBds7/8Stj8g8Qfqzj32IHMOCL4C
yfMXRN0B62PLuQqSd1BecBgkL7Dpxl8QveDi/O9g9S76n0Dq47+q/AepM8jt
fwPi+xvaHgXpf8/J+htE2x9iBJsjIF7yCyS//jr/XxB/wk+Z/2BzZWuvgMTP
J3ifBIfDLoYzYH+eV78A9v89oU9g9UcPfgSpv/Ai9gDY3tR538HuzAphOADy
j7UB2L71SuaXwP4yEgeHw3rGs2D/L1j74SGYL7b0A0hd/LfezyDxAMul30Di
/T+l/oHNCxYEm7ffNWAV2P9vle6A/X1TbRo4XFnvXAO7y1PtP9i9Yl0PwP70
EgDHD/9b4Zfg+Hq+Chyv/JuePd4PAIcTNLc=
             "], "LeafValues" -> 
            RawArray["Real32",{0.20558081567287445`, 0.22479604184627533`, 
              0.22406446933746338`, 0.14972707629203796`, 0.1480662077665329, 
              0.015284598805010319`, -0.13709193468093872`, 
              0.07952343672513962, 0.07153448462486267, -0.02005862444639206, 
              0.11750148236751556`, 
              0.06846275925636292, -0.007087104022502899, 
              0.152823343873024, -0.044874221086502075`, -0.08056487143039703,
               0.18490399420261383`, -0.034259770065546036`, \
-0.02824157290160656, 0.002290915697813034, 0.18598631024360657`, 
              0.2285965234041214, -0.06987854093313217, 0.22399510443210602`, 
              0.12043692916631699`, 0.1477784961462021, 0.15748761594295502`, 
              0.07469315081834793, 0.22913877665996552`, 0.10578308254480362`,
               0.21459367871284485`, 0.14470770955085754`, 0.1611657738685608,
               0.10326392203569412`, 0.23379197716712952`, 0.1972683072090149,
               0.11731469631195068`, 
              0.12363569438457489`, -0.08317334204912186, 0.07803480327129364,
               0.19109268486499786`, 0.2262512445449829, 0.1437162309885025, 
              0.16171030700206757`, 0.039738040417432785`, 
              0.08694364875555038, 0.0930425226688385, 0.20797227323055267`, 
              0.19164928793907166`, 0.16070695221424103`, 0.09874919801950455,
               0.20808540284633636`, 0.19587069749832153`, 
              0.18988557159900665`, 0.21403458714485168`, 
              0.11426308006048203`, 0.19024711847305298`, 
              0.18497708439826965`, 0.23205196857452393`, 0.2042236626148224, 
              0.20669427514076233`, 0.21589118242263794`, 
              0.24088932573795319`, 0.21660162508487701`}], "Children" -> 
            RawArray["Integer16",{{15, 2}, {7, 3}, {8, 4}, {16, 5}, {9, 
              6}, {-6, -7}, {30, 10}, {27, 13}, {-5, -10}, {34, 11}, {12, 
              26}, {-11, -13}, {14, 17}, {-9, -15}, {33, 20}, {18, 
              19}, {-14, -18}, {-4, -19}, {-17, -20}, {21, 28}, {23, 22}, {29,
               24}, {25, 31}, {-23, -25}, {-16, -26}, {-12, -27}, {43, 32}, {
              42, 50}, {-22, -30}, {47, 39}, {-24, -32}, {-28, -33}, {52, 
              36}, {35, 53}, {-8, -36}, {41, 37}, {58, 38}, {-38, -39}, {46, 
              40}, {-40, -41}, {48, 57}, {45, 
              44}, {-3, -44}, {-43, -45}, {-21, -46}, {-31, -47}, {60, 
              49}, {-34, -49}, {-48, -50}, {59, 51}, {-51, -52}, {61, 
              54}, {-35, -54}, {55, 
              56}, {-53, -56}, {-55, -57}, {-42, -58}, {-37, -59}, {-29, \
-60}, {-2, -61}, {63, 62}, {-62, -63}, {-1, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{4, 4, 5, 1, 2, 7, 7, 8, 7, 4, 1, 7, 8, 1, 2,
               10, 7, 2, 1, 19, 4, 23, 5, 1, 7, 7, 2, 7, 4, 1, 12, 5, 21, 24, 
              7, 19, 17, 1, 2, 7, 5, 7, 20, 5, 3, 4, 5, 8, 2, 4, 19, 1, 7, 22,
               2, 5, 8, 5, 8, 5, 5, 4, 2}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB2IgfUBv6Wf7////9wuYPNsPpO8/Y78Hot8v4P4AouM/
L3kMovfHmPwC05+j34JoffHft0C0/7d7YL792ryf+4HmFThP+AIyT7487QJY
3ZZjV8C0lMJZEP3//Z6rIHULbL7+sAfSG5q3PAepPy9y/hBIfv4OnRsgeQV/
i3cg+Qci4tPB8ocl/oDk8x/+Abvjve3RryB1Dn/07oDUTTCe9QakLv+q1mKw
e5rav4Ddb+/5G+zOEg+IvkzRv2B5FtHPIP0CceUHQfoXCJ/dCHZ3bdIDkPx5
R+7/IPkJj8WfgMTtfZnA5r0v6nwHDgd7oH6Q+Ymnn4HVBegeB+u3encJJC7/
cDvYvfflax+B1d04B3ZH/fr4P/uBQX9g6dRVFiBz+RnB/jAQlPsD0v/f15vh
AEj9+/DfYP+xFlwDh5OrxzmIP70Pg9Stj1FcDjb/psJeEM3/aeoPsD2hCyHm
+RkcAKmLjw0Gm1Ogx/kVpF+hYv4PewCOIjOn
             "], "LeafValues" -> 
            RawArray["Real32",{0.027537275105714798`, 0.20536479353904724`, 
              0.098938949406147, 0.0732826292514801, 0.1299426108598709, 
              0.09140419960021973, -0.16837771236896515`, 
              0.12619329988956451`, -0.10243155807256699`, \
-0.04714859649538994, 0.2101171463727951, 
              0.25760671496391296`, -0.17549251019954681`, 
              0.12043417245149612`, -0.08257465064525604, \
-0.06230825558304787, 0.21422439813613892`, 
              0.15489646792411804`, -0.061031121760606766`, \
-0.07533657550811768, 0.05318719893693924, 0.22362053394317627`, 
              0.1707008183002472, 0.2371814101934433, 0.1259334683418274, 
              0.1450757086277008, 0.1954115331172943, -0.08603005111217499, 
              0.022641245275735855`, 
              0.059393566101789474`, -0.06590619683265686, 
              0.17451009154319763`, 0.05488142371177673, 0.10703548043966293`,
               0.17386963963508606`, 
              0.15645074844360352`, -0.14203596115112305`, 0.2127629518508911,
               0.23567497730255127`, 0.1636103242635727, 0.06445015966892242, 
              0.14083200693130493`, 
              0.15072833001613617`, -0.35971730947494507`, 0.2016632854938507,
               0.1006743460893631, -1.0207171440124512`, 0.1766207069158554, 
              0.140170618891716, 0.22987310588359833`, 0.16397833824157715`, 
              0.14585648477077484`, 0.18706190586090088`, 0.1561189740896225, 
              0.21388785541057587`, -0.044199831783771515`, 
              0.1784784346818924, 0.10384418070316315`, 0.21483880281448364`, 
              0.16915613412857056`, 0.0741930603981018, 0.196370929479599, 
              0.2365741729736328, -0.010320986621081829`}], "Children" -> 
            RawArray["Integer16",{{2, 22}, {10, 3}, {16, 4}, {7, 5}, {9, 
              6}, {-6, -7}, {21, 8}, {-8, -9}, {-5, -10}, {29, 11}, {13, 
              12}, {35, 20}, {14, 15}, {-11, -15}, {-14, -16}, {17, 31}, {19, 
              18}, {-18, -19}, {-3, -20}, {-13, -21}, {-4, -22}, {36, 23}, {
              43, 24}, {25, 26}, {42, 30}, {28, 27}, {-27, -28}, {-25, -29}, {
              46, 33}, {-26, -31}, {41, 32}, {-32, -33}, {34, 
              37}, {-30, -35}, {-12, -36}, {51, 38}, {-34, -38}, {49, 39}, {
              48, 40}, {-40, -41}, {-17, -42}, {-24, -43}, {54, 44}, {52, 
              45}, {-45, -46}, {58, 47}, {-47, -48}, {-39, -49}, {50, 
              53}, {-37, -51}, {59, 56}, {-44, -53}, {-50, -54}, {55, 
              63}, {-23, -56}, {61, 57}, {-57, -58}, {-1, -59}, {60, 
              62}, {-2, -61}, {-52, -62}, {-60, -63}, {-55, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{8, 1, 7, 2, 4, 5, 2, 4, 7, 5, 1, 8, 13, 22, 
              10, 6, 19, 20, 18, 21, 5, 1, 1, 15, 6, 5, 2, 16, 1, 2, 8, 7, 1, 
              4, 5, 1, 2, 10, 1, 5, 8, 8, 13, 5, 1, 2, 2, 7, 18, 8, 7, 1, 2, 
              4, 4, 5, 5, 4, 1, 5, 5, 5, 2}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////3M7t82w+k5XONvoNo+xSrLyD6vEzRBxC9/+Gb
z2BxFlEwzV/E8BtE6yvY/ALR/bKVYPr/xpwbIHo9ax+YXz9lOVgd/zWNx/uB
9gkc2XvNHkhPuD35mT1Q3L8/9BtI/MCXlVdA4g5yptdA4uufL3gIEp9QLfQA
xO93XHQF7I7NzefB6l8bXgCpF2AvuwGSz+eOvweSj49ueg+2j+3gH5C6BPZr
r0HqGvL8n4DogoCmJ2Dzr/P/BZt3vQfsvvlPpv8GqXdo1PgJkr+/q+so2Jz9
+YvA/pjAArZ3wtGDH0HmXHgRewCkjn9H0yloeBwHyTPYKB0E2+NQ+REk/17l
01dwOIYLg/1pcGTKS7A/p38Gu0dAvOQXmDZWOQv250+pf+DwYzwLdtf+z9fB
7lpwU20aSF3AJ7cDIHrBtOTFYH8FuN0D+99hwx6wPRIbH4Dd+TL6AUjeoGr5
UpD8/uer3oDEH3j+OwwS/3Dl7n97ALK4IAM=
             "], "LeafValues" -> 
            RawArray["Real32",{0.21516680717468262`, 0.22706735134124756`, 
              0.20539093017578125`, 0.19039663672447205`, 0.1457076221704483, 
              0.04203670099377632, -0.10867142677307129`, 0.06843438744544983,
               0.017159128561615944`, 
              0.03129282966256142, -0.009602753445506096, 
              0.16958259046077728`, 0.03991864621639252, 
              0.010719464160501957`, 0.1239929050207138, 0.1863984316587448, 
              0.007047633640468121, 0.18831795454025269`, 0.1317441612482071, 
              0.014647558331489563`, 0.10998483002185822`, 
              0.0484720803797245, -0.06298643350601196, 0.11527016013860703`, 
              0.08210361748933792, 
              0.20451755821704865`, -0.10085376352071762`, 
              0.1137518361210823, -0.02278664894402027, 0.2117125689983368, 
              0.21541261672973633`, 0.16514460742473602`, 
              0.11561267822980881`, 0.13311603665351868`, 
              0.15544673800468445`, 0.16763246059417725`, 
              0.12065694481134415`, -0.0668666884303093, 0.1894809454679489, 
              0.18598966300487518`, 0.21052202582359314`, 0.09862122684717178,
               0.22758015990257263`, 0.13913407921791077`, 
              0.16162414848804474`, 
              0.04504384472966194, -0.18450495600700378`, 0.07510745525360107,
               0.18537931144237518`, 0.2249741405248642, 0.16541659832000732`,
               0.1703256070613861, 0.21259595453739166`, 0.22446376085281372`,
               0.1395365446805954, 0.23054060339927673`, 0.23049286007881165`,
               0.16881142556667328`, 0.2208627611398697, 0.22567090392112732`,
               0.2075740247964859, 0.23964852094650269`, 0.21924033761024475`,
               0.15182238817214966`}], "Children" -> 
            RawArray["Integer16",{{12, 2}, {11, 3}, {9, 4}, {7, 5}, {8, 
              6}, {-6, -7}, {27, 10}, {-5, -9}, {32, 13}, {-8, -11}, {33, 
              16}, {31, 20}, {15, 14}, {-14, -15}, {-10, -16}, {28, 17}, {18, 
              19}, {-17, -19}, {-18, -20}, {21, 25}, {23, 22}, {30, 24}, {26, 
              29}, {-23, -25}, {43, 44}, {-13, -27}, {-4, -28}, {49, 
              34}, {-24, -30}, {-22, -31}, {50, 35}, {51, 38}, {52, 
              40}, {-29, -35}, {39, 36}, {56, 37}, {-37, -38}, {-33, -39}, {
              47, 59}, {42, 41}, {-41, -42}, {-34, -43}, {48, 58}, {46, 
              45}, {-45, -46}, {-26, -47}, {-32, -48}, {-21, -49}, {-12, \
-50}, {61, 53}, {-3, -52}, {60, 57}, {55, 
              54}, {-54, -55}, {-51, -56}, {-36, -57}, {-53, -58}, {-44, \
-59}, {-40, -60}, {-2, -61}, {63, 62}, {-62, -63}, {-1, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{8, 7, 9, 1, 2, 21, 4, 4, 4, 7, 19, 3, 1, 8, 
              16, 1, 4, 4, 14, 12, 18, 1, 8, 5, 7, 10, 5, 2, 2, 9, 8, 16, 2, 
              1, 4, 1, 12, 5, 4, 5, 1, 2, 1, 2, 20, 9, 7, 6, 15, 5, 4, 12, 2, 
              8, 2, 4, 4, 1, 8, 7, 2, 3, 5}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////nL2F9sx9I2y9e/ARE+1vbfADTl2Z+AdH8b4Vf
guX39H3fD9TXsMDkuT2In3P6CTL//+ZfYPkL7t1v7IH0Aa+cByBaQYrnA0i+
X8P9F0jewcD6D4g//2TOZ5C5+0/nfwfbkxp7DyQfcPzmT5D8/VM6v0Hi+awn
f4Lo8+HC38D6S61PgeTj33r0gcTfc7L+BokzCGp+BdvjuOgK2L283RfB4jIz
LoDVf1X5DxJff53/L9idD7x/gcTr12+5AxKvZ5Q5CBJX+BX6GyTuX83yCWz+
69lgfe9fylwE6389cRPY/O8zzoPD6Ub8MbD4efULIP0H3Csugvw9Yc2mrSBz
9LNCGA6A/DFb6i9YHeNZsL/W9xbNAdHxXVPB7pmwSP0RSN+F0/ufgvSdN5n9
DySv/9gFHD/9P6X+gdQtuKk2DaSOgYlpF4heMC15MYgWKJj7EKRPvssJHH/2
XgJ/QOo/XLn7H+zPwk+PQHyD9dFb7QFwkS/h
             "], "LeafValues" -> 
            RawArray["Real32",{0.22640001773834229`, 0.2086118906736374, 
              0.20123958587646484`, 
              0.2370983511209488, -0.058396827429533005`, 
              0.042430080473423004`, -0.14619050920009613`, 
              0.076930932700634, -0.09330461919307709, 
              0.10650746524333954`, -0.04277488589286804, 0.04246746003627777,
               0.12675558030605316`, 0.06384541839361191, 0.2566181421279907, 
              0.2123129814863205, 
              0.11711528152227402`, -0.039119504392147064`, 
              0.010850259102880955`, 0.20059195160865784`, 0.1853441298007965,
               0.12493790686130524`, 0.006029920652508736, 
              0.044111352413892746`, 0.03942108154296875, 0.04586199298501015,
               0.2468564808368683, 0.17070311307907104`, 
              0.016340170055627823`, 0.22412626445293427`, 0.1496456116437912,
               0.1636735200881958, 0.1665017455816269, 
              0.21190863847732544`, -0.1104750856757164, 0.10027292370796204`,
               0.05346988886594772, 0.13611598312854767`, 
              0.17933006584644318`, -0.01822482980787754, 0.1416388601064682, 
              0.09958364814519882, -0.050273504108190536`, 
              0.17630019783973694`, 0.06203741580247879, 0.14256729185581207`,
               0.11629509180784225`, 0.12009236961603165`, 
              0.18706414103507996`, 0.13768349587917328`, 
              0.22710461914539337`, 0.24355074763298035`, 
              0.19011418521404266`, 0.0950234904885292, 0.15367519855499268`, 
              0.21687465906143188`, 0.12512101233005524`, 
              0.22400498390197754`, 0.21902097761631012`, 0.2043144255876541, 
              0.18320177495479584`, 
              0.21192333102226257`, -0.01820623129606247, 
              0.21083049476146698`}], "Children" -> 
            RawArray["Integer16",{{14, 2}, {10, 3}, {15, 4}, {8, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {23, 9}, {-9, -10}, {25, 11}, {12, 
              26}, {13, 24}, {-11, -14}, {31, 19}, {16, 30}, {18, 
              17}, {-17, -18}, {-3, -19}, {20, 33}, {38, 21}, {46, 
              22}, {-22, -23}, {-4, -24}, {-13, -25}, {47, 27}, {32, 37}, {29,
               28}, {-28, -29}, {-26, -30}, {45, 36}, {54, 40}, {-12, -33}, {
              51, 34}, {49, 35}, {-35, -36}, {-31, -37}, {-27, -38}, {52, 
              39}, {-39, -40}, {43, 41}, {50, 42}, {-42, -43}, {44, 
              58}, {-32, -45}, {-16, -46}, {-21, -47}, {60, 
              48}, {-48, -49}, {-34, -50}, {-41, -51}, {53, 
              59}, {-15, -53}, {-20, -54}, {61, 55}, {57, 
              56}, {-56, -57}, {-55, -58}, {-44, -59}, {-52, -60}, {-2, -61}, \
{63, 62}, {-62, -63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{19, 21, 7, 8, 4, 5, 2, 4, 2, 2, 22, 14, 18, 
              8, 2, 1, 2, 8, 8, 2, 7, 8, 5, 8, 20, 7, 4, 7, 13, 1, 4, 8, 10, 
              23, 7, 1, 2, 7, 9, 7, 8, 2, 6, 2, 8, 5, 4, 8, 7, 1, 20, 3, 4, 6,
               4, 3, 24, 5, 8, 7, 7, 5, 7}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L///+/74n9uR9I6089+3M/UDxB0Oe9PZBWqI55DaIb
Fpg8B9EHVG4+tweq43806ztIncJC/Ycg/voJVtdB+u15uy+C6PnGUv9B8hv4
BP6D5OUNN/4Ci3/4Bjbf4KbIE5C4/S2vTyBx+Z2sH0HiBUE+D8Dqu5w+gMTv
PxNcDjY3xerLfpg4UN2DhUz3Qer8mxnug8VfLfkPovffOX0LbL6g3B+w+UJ3
ToLVS/gxOABpAVfjE2BxhpeXwf7NiP0DkmewC2VwAPLjxd99BYvP+/kObO/S
9rdg/mOXN8ji+bOl/oL0ORwX+gh3B5C/ICX7EYgfv0P8D1j/IcarYH+nznwD
dseS5H0g+X5W4cdg+eM1+8HuFswDm7v/Ygk4HuL9pjIcAPmLdwqY/v916kuQ
eL3VBIYDQHMunN7/FGxvX8JzkLkBctfYQO7f3x0BcfdJ3kdg9aFpH8HhmHIR
7H7+VzbfwfZ8jn67HwDOSzU2
             "], "LeafValues" -> 
            RawArray["Real32",{0.07414548844099045, 
              0.1451600044965744, -0.1256886124610901, 0.22992649674415588`, 
              0.09686433523893356, 
              0.15163885056972504`, -0.00016059793415479362`, 
              0.0007134231273084879, -0.10047109425067902`, 
              0.2020542174577713, -0.03201953321695328, 
              0.18655742704868317`, -0.9608725309371948, 0.17026729881763458`,
               0.015328333713114262`, 0.09360620379447937, 
              0.19214452803134918`, 0.0942450761795044, 
              0.18984059989452362`, -0.04690537974238396, 
              0.22395387291908264`, 0.07585657387971878, 0.02061294950544834, 
              0.16949503123760223`, 
              0.13431502878665924`, -0.11181824654340744`, \
-0.06824274361133575, 0.11546770483255386`, 0.18872487545013428`, 
              0.22268088161945343`, 
              0.19029545783996582`, -0.04954611137509346, 
              0.10122575610876083`, 0.21094374358654022`, 
              0.10791493952274323`, 0.06955007463693619, 0.16898806393146515`,
               0.16009439527988434`, 0.038034189492464066`, 
              0.1455724984407425, 0.20693092048168182`, 0.09538829326629639, 
              0.2031717449426651, 0.11086089164018631`, 0.2297971248626709, 
              0.13779255747795105`, 0.21233928203582764`, 
              0.21830223500728607`, 0.20604844391345978`, 
              0.23781895637512207`, 0.25269338488578796`, 
              0.17700523138046265`, 
              0.21258966624736786`, -0.36775636672973633`, \
-0.03619410842657089, 0.2274145931005478, 0.23256835341453552`, 
              0.16571494936943054`, 0.23365409672260284`, 
              0.20046980679035187`, 0.23430240154266357`, 
              0.16828416287899017`, 0.24978430569171906`, 
              0.09124540537595749}], "Children" -> 
            RawArray["Integer16",{{12, 2}, {11, 3}, {4, 13}, {5, 8}, {6, 
              7}, {-3, -7}, {-6, -8}, {10, 9}, {-9, -10}, {-5, -11}, {33, 
              21}, {16, 29}, {25, 14}, {32, 15}, {-15, -16}, {20, 17}, {30, 
              18}, {19, 35}, {-18, -20}, {26, 42}, {24, 22}, {28, 
              23}, {-23, -24}, {31, 48}, {51, 34}, {47, 
              27}, {-27, -28}, {-22, -29}, {36, 54}, {41, 
              55}, {-12, -32}, {-14, -33}, {45, 50}, {-26, -35}, {-19, -36}, {
              39, 37}, {58, 38}, {-38, -39}, {40, 
              44}, {-13, -41}, {-17, -42}, {43, 60}, {-21, -44}, {-40, -45}, {
              49, 46}, {-46, -47}, {-1, -48}, {-25, -49}, {-2, -50}, {53, 
              52}, {-4, -52}, {-51, -53}, {-34, -54}, {61, 56}, {-31, -56}, {
              57, 59}, {-55, -58}, {-37, -59}, {-57, -60}, {-43, -61}, {63, 
              62}, {-62, -63}, {-30, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{5, 4, 1, 2, 7, 8, 5, 8, 5, 4, 7, 4, 4, 1, 8,
               4, 20, 21, 1, 5, 11, 16, 5, 5, 8, 1, 1, 2, 7, 7, 2, 8, 1, 4, 4,
               7, 22, 11, 8, 20, 1, 8, 1, 5, 2, 7, 7, 8, 4, 7, 8, 8, 4, 1, 2, 
              5, 7, 14, 1, 7, 7}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwBeL////7Z9v/2A+k9XcGvgfR/tUsn0C0/dNNj0D0f58p
H0C0vBnLZxD9/qXMRbC6Zob7IJp/R9MpsLo//VfA6mqTHoDlXwjuAdHxrD3X
wPpqWH6B1f/P2ga2T8Hm136gOx6Ux922B9IBwYyXQLTBd/av9iBzfJJ3geQn
XFR9CxJv6Jn6FiRevz7+D0h/vsMGsPn3df0vg91rk34OpJ4hqukUSN397vMP
we6p+PUURPeHpx4CyS/4kHYAJN9v/+cLSPz8z/s7we5nboD4m7n7N9hd6mWv
Qeryy/98AJsb8qsG5I4CfpYNIHH7KVmvQOIXFNIeg/jxdw6A/f1+ATc4vOZL
5/0Fm/t681kwvVthHYje7xqwChwORQzHwe4KVv0Jts+B7SvY/09DX4HtKVN+
Cjb3xrnfIHXrWfvA4XXgSt59kLg/s/I/sPhE1e9g86Mib4LN1xQFu39CT+EF
cLhWvXxlDwDY4TOE
             "], "LeafValues" -> 
            RawArray["Real32",{-1.0663104057312012`, -0.03069307841360569, 
              0.20913298428058624`, 0.17838412523269653`, 
              0.10700671374797821`, 
              0.014724373817443848`, -0.15182483196258545`, \
-0.07787837833166122, 
              0.10058151185512543`, -0.01830795407295227, \
-0.07087645679712296, 0.22878117859363556`, 0.2520228922367096, 
              0.11015075445175171`, -0.06404039263725281, 
              0.011735497042536736`, -0.028325941413640976`, \
-0.007039132993668318, 0.01594020053744316, 
              0.08340128511190414, -0.03892366215586662, 0.15637779235839844`,
               0.11535713821649551`, 0.03416392207145691, 
              0.14817838370800018`, 0.2097388654947281, -0.04723009467124939, 
              0.20162202417850494`, 
              0.20104484260082245`, -0.13126008212566376`, 
              0.17878513038158417`, 0.0578438937664032, -0.1342959702014923, 
              0.08600924909114838, 0.08045687526464462, 0.08385302126407623, 
              0.2115659862756729, 0.1665957272052765, 0.057729680091142654`, 
              0.17810556292533875`, 0.2116735726594925, 0.23713502287864685`, 
              0.029037902131676674`, 0.0010716415708884597`, 
              0.15620768070220947`, 0.14109103381633759`, 
              0.18360312283039093`, 0.1520162671804428, -0.03897000849246979, 
              0.23003101348876953`, 0.2095995545387268, 0.22948800027370453`, 
              0.052068181335926056`, -0.13938204944133759`, 
              0.1668044477701187, 0.22221200168132782`, 0.08885639905929565, 
              0.19386616349220276`, 0.20688435435295105`, 
              0.20396935939788818`, 0.2298019528388977, 0.2055409699678421}], 
            "Children" -> 
            RawArray["Integer16",{{23, 2}, {16, 3}, {11, 4}, {8, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {9, 10}, {-4, -10}, {-9, -11}, {12, 
              13}, {20, 24}, {15, 14}, {-14, -15}, {-12, -16}, {35, 17}, {18, 
              21}, {19, 22}, {-17, -20}, {-3, -21}, {33, 34}, {-19, -23}, {44,
               25}, {-13, -25}, {27, 26}, {39, 28}, {31, 41}, {30, 
              29}, {-29, -30}, {-27, -31}, {36, 
              32}, {-32, -33}, {-18, -34}, {-22, -35}, {53, 37}, {-24, -37}, {
              40, 38}, {-38, -39}, {43, 51}, {-36, -41}, {42, 
              58}, {-28, -43}, {-26, -44}, {49, 45}, {46, 47}, {52, 60}, {55, 
              48}, {-48, -49}, {50, 56}, {-1, -51}, {-40, -52}, {-45, -53}, {
              59, 54}, {-54, -55}, {-46, -56}, {61, 
              57}, {-57, -58}, {-42, -59}, {-2, -60}, {-47, -61}, {-50, \
-62}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{15, 22, 20, 2, 1, 1, 1, 11, 20, 2, 2, 5, 1, 
              19, 7, 4, 5, 13, 18, 14, 1, 2, 7, 8, 8, 2, 7, 8, 3, 2, 7, 18, 2,
               1, 2, 2, 15, 8, 7, 7, 3, 6, 1, 7, 3, 18, 18, 22, 1, 2, 5, 5, 7,
               7, 5, 6, 7, 5}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwAuL////zL9r8az+Q3h9x5yuItv+y4huI5n806zuIPr9F
5vl+oHqH298e2QP5/iUev0D8gMQl/0B8fk+1/2B1FkJ/QOIb8ubcAYufa/sI
Eq8vy7gDlvfiYjgApOVvTQSb/19jCpiu1+L9AOZfv/8GRL/f/O8ayJyGdf53
Qeb8l1UHm6N/LfotiPZ3WA3my3c5gfXZW90+DTZHp/AM2J5Nty6B6TjDi2B9
wYJge/f/Kv4L9hf/258gev2aMIYDQHsORAttsgfSBnfjT4Lsu79kwTeQ/Qeu
5N0H8eNDBcD65qfOBLtv/Wd5sP37P0PcI887BWx+vdUEMH0+XBjsr/wDV3+A
zFFo2vwLbE7vNLB8fO7Sf2B3X54GMffkOXB4Crzoqgf7t4TtD9idr2zA4X8/
5eIbZPvsT08Gi/snbATrU9gZdAJsfmzw7/0AWxE+cw==
             "], "LeafValues" -> 
            RawArray["Real32",{0.14994478225708008`, 0.2171739935874939, 
              0.22947555780410767`, 0.20255360007286072`, 
              0.1329297572374344, -0.08606044948101044, -0.003822602331638336,
               0.001946773612871766, -0.18705356121063232`, 
              0.14288285374641418`, 0.1754838228225708, 0.1532048135995865, 
              0.005234991200268269, -0.03597676753997803, -0.2342299222946167,
               0.041560858488082886`, 0.10451073199510574`, 
              0.0011946730082854629`, 0.030168479308485985`, 
              0.18826700747013092`, 0.12218552082777023`, 
              0.18409085273742676`, 0.027050433680415154`, 
              0.1336391568183899, -0.07465695589780807, 0.18260367214679718`, 
              0.21862202882766724`, 
              0.13952511548995972`, -0.05650928616523743, 
              0.10076522827148438`, 
              0.1321660578250885, -0.022449519485235214`, 
              0.11302202194929123`, 0.19390347599983215`, 
              0.015944885089993477`, 0.1005060225725174, 0.22164465487003326`,
               0.09569267183542252, 0.2021753191947937, 0.10008084774017334`, 
              0.21874426305294037`, -0.03771586716175079, -0.338930606842041, 
              0.19483378529548645`, 0.16121166944503784`, 
              0.18419240415096283`, 0.18567109107971191`, -0.3336034417152405,
               0.17009784281253815`, 0.24659360945224762`, 0.2058829963207245,
               0.2099192589521408, 0.21939076483249664`, 0.24642367660999298`,
               0.08795276284217834, -0.008765535429120064, 0.1404781937599182,
               0.21574777364730835`, 0.2118206024169922}], "Children" -> 
            RawArray["Integer16",{{14, 2}, {8, 3}, {9, 4}, {10, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {15, 29}, {32, 11}, {30, 18}, {12, 
              13}, {-10, -13}, {-12, -14}, {42, 21}, {20, 16}, {19, 
              17}, {-17, -18}, {-11, -19}, {-16, -20}, {44, 31}, {26, 22}, {
              34, 23}, {25, 24}, {-24, -25}, {-23, -26}, {27, 36}, {45, 
              28}, {-28, -29}, {41, 38}, {-4, -31}, {-21, -32}, {46, 
              33}, {-33, -34}, {35, 51}, {-22, -36}, {37, 56}, {-27, -38}, {
              40, 39}, {-39, -40}, {-30, -41}, {49, 43}, {52, 
              47}, {-42, -44}, {-2, -45}, {-15, -46}, {-3, -47}, {-43, 
              48}, {-48, 50}, {-9, -50}, {-49, -51}, {-35, -52}, {55, 53}, {
              54, 57}, {-53, -55}, {
              58, -56}, {-37, -57}, {-54, -58}, {-1, -59}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{5, 5, 2, 1, 4, 9, 7, 8, 5, 7, 4, 5, 4, 8, 2,
               1, 7, 7, 16, 5, 8, 5, 8, 7, 1, 3, 18, 17, 10, 5, 8, 1, 1, 4, 9,
               5, 18, 11, 4, 21, 11, 2, 4, 2, 2, 4, 1, 8, 16, 5, 4, 8, 18, 21,
               7, 8, 2, 8, 1, 1}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwAeL////vvz7v634gX6HO/4M9kHYoKAPTEw4ofgTRF07v
f2oPVNf/7uOH/UDaPsXqC4g+P33+D5C+hl0Zt0HqHhzachekLv8l+1mQvPy9
V5dB9Pqr276DaH+PpgtgfSLnD4HFP2ncBdH6HHMfguj8EqcfYPEbHq9A9P8S
tj9gc8xYPoPsYdgZcRFkz4ag73dA9sg79oLV208sfw2SX8Cb+wkkX6BX9A1E
N7yveQ72z1U+sPvzHTbsAdvXNOUG2B27GM6A6PtMH8Huirf3/A2i54fuegq2
94DgX5C5B76YgM0xYO5/AjZH2OwLOLz6bz8GiSesu/UJJH7+qsNqsPkKNr/A
4fL0NThcJsy3+gqSj1/58yfY/CfTfyOHX0Ba5AeQvD+z8j8Qv2DWRwYHkPnX
o16A9W+q+wOSn79V/D/YnSEp4PhquMB8HSS/4EPaAZB8fdrhF+BwEDd4CBJn
2GD/wh4A0fMUsQ==
             "], "LeafValues" -> 
            RawArray["Real32",{-0.33178505301475525`, -0.0038515031337738037`,
               0.1401711255311966, 0.23049625754356384`, 0.17936664819717407`,
               0.14774973690509796`, -0.12188108265399933`, 
              0.07687158137559891, 0.00581868551671505, 0.108550064265728, 
              0.1977560669183731, -0.13706724345684052`, -0.05094030126929283,
               0.21614733338356018`, 0.1811358630657196, 0.0783197209239006, 
              0.00613334821537137, -0.014760153368115425`, \
-0.12427103519439697`, -0.19333021342754364`, -0.10810427367687225`, 
              0.002956162439659238, -0.03830226510763168, 
              0.09504187852144241, -0.12012134492397308`, 
              0.11569711565971375`, 0.21443897485733032`, 0.07732781022787094,
               0.19360095262527466`, 0.12594503164291382`, 
              0.13049696385860443`, 0.17759162187576294`, 
              0.15224188566207886`, -0.028633279725909233`, 
              0.033804167062044144`, 
              0.22493796050548553`, -0.39217811822891235`, 
              0.21353265643119812`, 0.20853662490844727`, 0.1490444540977478, 
              0.21647082269191742`, 0.21561633050441742`, 0.0677410140633583, 
              0.10890229791402817`, -0.8567313551902771, \
-0.0002580554864834994, -2.3929085731506348`, 0.21884247660636902`, 
              0.20254811644554138`, 0.08704112470149994, 0.17565952241420746`,
               0.0860203355550766, 0.17501811683177948`, 0.1451520472764969, 
              0.21129068732261658`, 0.000038049682189011946`, 
              0.04453557729721069, 0.04983948543667793, 
              0.22253432869911194`, -0.0005256567383185029, 
              0.12265736609697342`}], "Children" -> 
            RawArray["Integer16",{{20, 2}, {3, 13}, {4, 7}, {5, 21}, {6, 
              8}, {-2, -7}, {9, 10}, {-6, -9}, {30, 24}, {12, 
              11}, {-11, -12}, {-8, -13}, {28, 14}, {16, 15}, {17, 18}, {25, 
              19}, {-15, -18}, {-16, -19}, {-17, -20}, {36, 26}, {22, 
              23}, {-5, -23}, {-22, -24}, {-10, -25}, {-14, -26}, {27, 35}, {
              31, 38}, {29, 40}, {34, 37}, {-4, -31}, {32, 
              33}, {-21, -33}, {-32, -34}, {-3, -35}, {57, 51}, {46, 
              39}, {-30, -38}, {53, 56}, {44, 41}, {43, 60}, {42, 
              49}, {-40, -43}, {-29, -44}, {54, 45}, {-45, -46}, {-1, 47}, {
              48, 50}, {-47, -49}, {-42, -50}, {-48, -51}, {55, 
              52}, {-52, -53}, {-28, -54}, {-37, -55}, {-36, -56}, {-39, \
-57}, {59, 58}, {-58, -59}, {-27, -60}, {-41, -61}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{8, 7, 1, 2, 4, 5, 4, 5, 1, 4, 5, 7, 8, 7, 
              19, 6, 1, 2, 4, 2, 5, 1, 2, 8, 2, 8, 4, 2, 21, 4, 1, 7, 23, 12, 
              8, 2, 5, 8, 7, 23, 12, 3, 8, 8, 2, 2, 5, 12, 7, 12, 5, 4, 8, 7, 
              4, 8, 2, 5, 7, 2, 5, 4, 5}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////P7/3yaD+Qlq/49RRE1zsyvwXR+ne4voDo9ZLz
X4PofCXnnyA6ftKdb2D19/oeguj3NSy/QHS/iihY3fw3FjfB8o69P8DmXV/4
az/QvoLDHYfsQbQJ/0N7kLoK3c9g869vBtu7/tJssPr8Dh+w+flXtRaDzTma
+RhMm226vR/o5ANLp66yAJpzIT3yGsgce97uiyDzA77UzgHx/V8I7gG741b7
cRB9/4boX7D7kpS/g9QlfM69DFJ3vtjzN9g/+z+D3fHfjfETxD38YPXnLYT+
gNQrsF/aCHL3gU7Wo2Dzt0Y8B+v71gvW15+jCKbnq995DFLP4FC8B6S+Yb7w
cRDN0P7sJkiffnPAFZD8Ar+8n2Bzdue9ANvHeBbsjv33CleC5DeYhb0Cyb83
0joCNv+n1D9weJw4+gLsz6SKuyD5+xaX34HNu6k2DWTPhIX77oPDw0sA7O4P
V+7+B/H5P039AeJP+HblDNgdzy482Q8AHFpDKA==
             "], "LeafValues" -> 
            RawArray["Real32",{0.20598885416984558`, 0.20568284392356873`, 
              0.20927618443965912`, 0.155948206782341, 0.12004674226045609`, 
              0.014802103862166405`, 
              0.015889694914221764`, -0.1524956375360489, 
              0.0786261111497879, -0.12026972323656082`, 
              0.08853790163993835, -0.06710066646337509, 0.13831625878810883`,
               0.180974543094635, 0.26235777139663696`, 0.10834666341543198`, 
              0.015699418261647224`, -0.00005455772770801559, 
              0.16854427754878998`, 0.1538892686367035, 0.16248512268066406`, 
              0.11242059618234634`, -0.08352943509817123, \
-0.06432291865348816, 
              0.1612686663866043, -0.045467060059309006`, \
-0.0003787686873693019, 0.2186666578054428, 0.0005589181673713028, 
              0.140621155500412, 0.03365669399499893, -0.0840061828494072, 
              0.018211890012025833`, 0.14997729659080505`, 
              0.038663800805807114`, -0.2318313866853714, 
              0.1428479701280594, -0.07594098895788193, 0.18126098811626434`, 
              0.0754900723695755, 0.18028421700000763`, 0.07403699308633804, 
              0.19097302854061127`, 0.23843200504779816`, 
              0.20022043585777283`, 
              0.23695752024650574`, -0.17704591155052185`, 
              0.19262215495109558`, 0.22305792570114136`, 
              0.11397580802440643`, 0.18793675303459167`, 0.07942550629377365,
               0.21181730926036835`, 0.14296400547027588`, 
              0.18857793509960175`, 0.20450115203857422`, 
              0.12936152517795563`, 0.15161685645580292`, -0.050777867436409, 
              0.17695394158363342`, -0.08519507944583893, 
              0.20943166315555573`, 0.22486405074596405`, 
              0.21680869162082672`}], "Children" -> 
            RawArray["Integer16",{{13, 2}, {12, 3}, {5, 4}, {10, 6}, {14, 
              8}, {28, 7}, {-7, -8}, {24, 9}, {-9, -10}, {43, 
              11}, {-11, -12}, {32, 15}, {35, 18}, {26, 38}, {16, 29}, {17, 
              25}, {-13, -18}, {27, 19}, {20, 21}, {31, 45}, {23, 
              22}, {-22, -23}, {-20, -24}, {-6, -25}, {-17, -26}, {-3, -27}, {
              36, 55}, {-5, -29}, {44, 30}, {-30, -31}, {-19, -32}, {49, 
              33}, {42, 34}, {-34, -35}, {53, 39}, {51, 
              37}, {-37, -38}, {-15, -39}, {46, 40}, {48, 
              
              41}, {-41, -42}, {-33, -43}, {-4, -44}, {-16, -45}, {-21, -46}, \
{52, 47}, {-47, -48}, {-40, -49}, {59, 
              50}, {-50, -51}, {-14, -52}, {-36, -53}, {60, 54}, {58, 57}, {
              56, 63}, {-28, -57}, {-55, -58}, {-54, -59}, {-2, -60}, {62, 
              61}, {-61, -62}, {-1, -63}, {-56, -64}}], "NominalSplits" -> {},
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{22, 1, 2, 4, 5, 8, 4, 5, 1, 2, 10, 16, 19, 
              19, 3, 10, 24, 5, 7, 7, 24, 4, 5, 8, 5, 4, 4, 1, 7, 8, 7, 21, 
              19, 4, 16, 19, 2, 23, 4, 1, 7, 5, 1, 8, 19, 6, 8, 5, 5, 1, 4, 5,
               8, 1, 7, 8, 4}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwBOL///+/TxD7ux9I20dF/QDR6w2ZfoHo/xpTvoHo+rM+
X0H0/d7eDyBaXprlN4h+370OTO/XFAXT/GwH/4Bp7/uPQLR+1PTt+4H2fEj4
U2EPMq+3Byy+v3vWf7C671qfwfZ1WD8Dq0/uvQS2L2rzDZC+gldvtoL0vX+t
DTFfMPAjWF3uUrA77ltcfgcW39F0CmzOU7U3IDr+xjmIuz5fB9PxcoWHQeZd
2Bdzxh5IT+gpvAAyV37xFIYDINpvE9i8+uZ6sL/nP5v9AETnZ3w+BDbnVzE4
fOLfTAXT81dVPgbR5xPqv4PFGfdfAdsfo7gcZM+EA4ofQebHWx97DuIHRBtd
BPvflA+sXz8jFhxO9hM9wfblyxhPB5vzPhzs3vwOn28gfRuOsh4GubfhzqEd
INphybv7IHPqd1yHxAPnkvMgdQcqHd/YAwB/ujpE
             "], "LeafValues" -> 
            RawArray["Real32",{-0.19536007940769196`, -0.5315659046173096, 
              0.20837260782718658`, 0.19436664879322052`, 
              0.13477538526058197`, 
              0.028667598962783813`, -0.048353515565395355`, 
              0.137887641787529, 0.04185488447546959, 0.20931385457515717`, 
              0.007981349714100361, 0.03516033664345741, 0.04083774983882904, 
              0.16399845480918884`, -0.0935734212398529, 
              0.20517924427986145`, -0.04974033311009407, 
              0.025374986231327057`, 0.20622920989990234`, 
              0.008453276939690113, 0.2004830539226532, 0.17069359123706818`, 
              0.12430163472890854`, 0.12481547892093658`, 
              0.017970064654946327`, 0.17894111573696136`, 
              0.045423973351716995`, 0.12851576507091522`, 
              0.22248771786689758`, 
              0.015460905618965626`, -0.06805496662855148, \
-0.18523019552230835`, -0.3831849992275238, 
              0.13617542386054993`, -0.8656911253929138, 0.09777814149856567, 
              0.16889803111553192`, 0.17177532613277435`, 0.05760517716407776,
               0.22141575813293457`, 
              0.20014077425003052`, -0.5054519772529602, 0.11475000530481339`,
               0.2197943478822708, 0.15731795132160187`, 
              0.0751456618309021, -0.15997551381587982`, 0.2103581726551056, 
              0.2029041200876236, 0.1772039383649826, 
              0.207148015499115, -0.2562446594238281, 0.2214687019586563, 
              0.18764926493167877`, 0.218073770403862, 0.244375541806221, 
              0.21549174189567566`, 0.2065187245607376}], "Children" -> 
            RawArray["Integer16",{{15, 2}, {9, 3}, {10, 4}, {7, 5}, {8, 
              6}, {-6, -7}, {27, 11}, {-5, -9}, {28, 12}, {37, 
              18}, {-8, -12}, {14, 13}, {16, 17}, {33, 26}, {32, 
              21}, {-13, -17}, {-14, -18}, {20, 19}, {-19, -20}, {-11, -21}, {
              30, 22}, {25, 23}, {39, 24}, {-24, -25}, {29, 
              52}, {-15, -27}, {-4, -28}, {47, 35}, {-22, -30}, {51, 31}, {54,
               34}, {46, 38}, {-10, -34}, {-32, -35}, {45, 36}, {-36, -37}, {
              49, 42}, {43, 40}, {-23, -40}, {41, 
              44}, {-39, -42}, {-38, -43}, {-33, 
              57}, {-41, -45}, {-29, -46}, {-1, 50}, {48, 
              53}, {-2, -49}, {-3, -50}, {-47, 55}, {
              56, -52}, {-26, -53}, {-48, -54}, {-31, -55}, {-51, -56}, {-16, \
-57}, {-44, -58}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{15, 24, 12, 23, 7, 8, 2, 8, 5, 21, 5, 4, 5, 
              18, 1, 13, 2, 1, 2, 5, 1, 3, 5, 1, 2, 7, 8, 2, 8, 1, 7, 5, 8, 
              18, 13, 3, 7, 7, 8, 21, 4, 2, 1, 11, 1, 5, 2, 2, 16, 5, 6, 11, 
              7, 1, 2, 5, 5, 2, 1, 2, 7}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwBeL////Hhwr83Q+k5+vZ/QLR/w3/fgDzg3zf7AeqM3js
/tQeSB/ouv8CRDtcVXhhD5SvF4n/BJI/8O3XUxD//TLZfyC+wPtjD0H8+QFC
d8DmaEaCzauvXvkfzD+Z8xmkbkIBN4MDyB3tz26C1Pszr1wJkrd/KfoeJB/w
ROIWSDxfKPoJSFw/WJDhAJCWf7P+M4jPv7vhDVj8WvRbsLt9pkDsiYl7D6Lf
t4UfA5tndfs0mPbgfwGi8/naboNo/wcPXoLo83GGF0F0fO80hgNAex9I+DE4
gOzhnQLmX5iScAnk7wDLpd9A9AMuq0cgd53X0v0NcmfBiwMfQOIN3/KvgsT/
y6p/BIfDzKNvwe7P9T0KMl/+4fY/YHfz9L0AyTP0Ce0Fh+cqrX/g8BRd9QXs
fqsJYHsPuP78AZY/O+Md2L7rbBD3vuB4CjbvgCA43vhf2XwH0es/vHwA9t+D
mY/A/vm85DFYvc+15/sBsIkrvg==
             "], "LeafValues" -> 
            RawArray["Real32",{0.004961242899298668, 0.23889976739883423`, 
              0.22519010305404663`, 
              0.09953150153160095, -0.10204038769006729`, \
-0.0035832023713737726`, -0.005852442234754562, 
              0.1377974897623062, -0.010188090614974499`, 0.07928493618965149,
               0.07362394034862518, 
              0.11668354272842407`, -0.07587753236293793, \
-0.011188006959855556`, 0.014964639209210873`, 
              0.05918411538004875, -1.1190249919891357`, 
              0.19164800643920898`, -0.27773311734199524`, \
-0.01615474373102188, 0.13631823658943176`, 0.17098236083984375`, 
              0.15849542617797852`, 0.027170635759830475`, 
              0.012764552608132362`, 0.05423224717378616, 
              0.1507754623889923, -0.12077343463897705`, 0.2074311524629593, 
              0.19644567370414734`, 0.09183204174041748, 0.15433311462402344`,
               0.0810534805059433, -0.0195535346865654, 0.19804610311985016`, 
              0.060556165874004364`, 0.16337241232395172`, 0.102860227227211, 
              0.17230471968650818`, 0.21452325582504272`, 
              0.20546479523181915`, 
              0.20828694105148315`, -0.06036003679037094, 
              0.09892594069242477, -0.030216487124562263`, \
-0.3649618327617645, 0.22210867702960968`, 0.09030381590127945, 
              0.20088689029216766`, -0.36906522512435913`, 0.1671750694513321,
               0.18718822300434113`, -0.36959871649742126`, 
              0.2082810252904892, 0.22488421201705933`, 0.1411760002374649, 
              0.2272019386291504, 0.21154677867889404`, 0.20776595175266266`, 
              0.21115176379680634`, 0.23134788870811462`, 
              0.23694099485874176`}], "Children" -> 
            RawArray["Integer16",{{16, 2}, {14, 3}, {10, 4}, {7, 5}, {6, 
              9}, {-5, -7}, {8, 15}, {-4, -9}, {-6, -10}, {22, 11}, {13, 
              12}, {-12, -13}, {-11, -14}, {34, 17}, {-8, -16}, {24, 35}, {19,
               18}, {30, 23}, {21, 20}, {-20, -21}, {-15, -22}, {36, 
              32}, {-19, -24}, {28, 25}, {45, 26}, {29, 27}, {-27, -28}, {31, 
              42}, {-26, -30}, {-18, -31}, {39, 33}, {-23, -33}, {-32, -34}, {
              52, 37}, {40, 51}, {-3, -37}, {44, 38}, {-38, -39}, {-1, -40}, {
              41, 47}, {-17, -42}, {43, 56}, {-29, -44}, {-35, -45}, {50, 
              46}, {-46, -47}, {49, 48}, {-48, -49}, {-41, -50}, {-25, -51}, {
              57, 54}, {59, 53}, {-53, -54}, {60, 
              55}, {-55, -56}, {-43, -57}, {58, 
              61}, {-36, -59}, {-2, -60}, {-52, -61}, {-58, -62}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{7, 2, 1, 4, 5, 8, 5, 4, 1, 2, 16, 15, 9, 7, 
              12, 19, 14, 1, 4, 4, 16, 14, 18, 8, 3, 15, 18, 4, 1, 1, 4, 7, 1,
               2, 19, 21, 6, 24, 23, 21, 4, 2, 17, 2, 4, 8, 14, 15, 1, 5, 8, 
              7, 4, 8, 4, 1, 2, 10, 6, 14, 22, 1}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwA+L///+fX5vzfT+Qvr9kwTcQfT5cGEzPVzX+BKL7bb1e
gGj999/A4v6OC36B6PrmejC9X1P0N4jmZzv4B0Tnn/lzDazemuUHiH7Pt+Qj
mOZk/b0faO8C9Wen7IH0hlt394FoB6f3D+2B8vJmm26D3WEWfAxEx7P2gM15
z3rmPZhu3XEHbN91iytgvmjwORD9n+fEEzCt6v8U7G6ny6dAtD1zN9hd722P
fgXb+1P6Psi+CfNF74PsW894Fiy///N1CL1830aQOoW26Mcg+fOi/xeCxNf3
Fs0BiQecvvkJJK5/YfJ1EH+CftljkHkMsmlXQeL7fxX/BaubeXY2iM9fxAD2
r4DozjsgdQ3zhY+D1UtsvAKW3//4GnL45csYTwe7P4VvE0jfhTOTloPUva8T
/AwOz4xYcPjuNz8CDnf/Eo9fIHUOVxVegMPzyLG3YHff2vcOJP7BPOcLSHxB
gkcPSPy+96dX+wEMdjyH
             "], "LeafValues" -> 
            RawArray["Real32",{-2.9953954219818115`, 
              0.1703139692544937, -0.05147508531808853, 0.16816209256649017`, 
              0.1046469509601593, 0.04285677149891853, -0.07979466766119003, 
              0.009257350116968155, 0.07834553718566895, 0.07767403870820999, 
              0.04593169689178467, 0.004972656257450581, 0.09798283129930496, 
              0.01123316865414381, -0.16553115844726562`, 0.08709109574556351,
               0.13279952108860016`, 0.08823584765195847, 
              0.15700729191303253`, 0.2241743803024292, -0.07393769174814224, 
              0.1614215075969696, 
              0.0646677240729332, -0.009272478520870209, \
-0.017658427357673645`, -0.1935575008392334, 0.14228159189224243`, 
              0.20054161548614502`, 0.09149537980556488, 0.0481424517929554, 
              0.20770147442817688`, -0.5338607430458069, -0.05257230997085571,
               0.16915813088417053`, -0.01778257079422474, 
              0.19808098673820496`, 
              0.15723758935928345`, -0.43782275915145874`, 
              0.11735136061906815`, -0.6044735312461853, 0.2124946117401123, 
              0.18484282493591309`, 0.1411445140838623, 0.1053156852722168, 
              0.03797890990972519, 0.21368271112442017`, 0.08753534406423569, 
              0.038986701518297195`, 0.09302733093500137, 
              0.19968266785144806`, 0.1927793025970459, 0.1245482787489891, 
              0.22133715450763702`, 0.21249635517597198`, 0.1882181167602539, 
              0.21360348165035248`, 0.2029903382062912, 0.14576022326946259`, 
              0.21805907785892487`, 0.16243389248847961`, 0.1773618757724762, 
              0.21429091691970825`, 0.2018233984708786}], "Children" -> 
            RawArray["Integer16",{{14, 2}, {10, 3}, {9, 4}, {8, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {28, 11}, {33, 12}, {42, 
              21}, {-9, -12}, {27, 13}, {-13, -14}, {32, 15}, {16, 17}, {18, 
              25}, {30, 40}, {19, 20}, {-15, -20}, {-19, -21}, {26, 22}, {23, 
              24}, {-22, -24}, {-23, -25}, {35, 29}, {53, 
              44}, {-10, -28}, {-4, -29}, {-26, -30}, {34, 31}, {-31, -32}, {
              55, 36}, {54, 43}, {-16, -35}, {-17, -36}, {37, 39}, {38, 
              49}, {-33, -39}, {61, 48}, {41, 57}, {-18, -42}, {50, 
              45}, {-34, -44}, {-27, -45}, {47, 
              46}, {-46, -47}, {-43, -48}, {-40, -49}, {-38, -50}, {52, 
              51}, {-51, -52}, {-2, -53}, {-11, -54}, {-3, -55}, {56, 
              58}, {-1, 62}, {-41, -58}, {59, 
              60}, {-56, -60}, {-59, -61}, {-37, -62}, {-57, -63}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{6, 24, 21, 4, 5, 2, 7, 12, 2, 7, 7, 5, 8, 
              14, 4, 16, 2, 1, 2, 8, 1, 8, 1, 2, 4, 2, 22, 8, 1, 7, 7, 4, 5, 
              13, 1, 10, 1, 7, 19, 1, 2, 2, 10, 1, 3, 18, 6, 2, 2, 7, 1, 6, 1,
               2, 3, 2, 5, 2, 11, 5}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwAeL////rH3/8Yz+Qtpfc8BtE+791f7MfKO+w7NJjeyB9
4NuvpyCaoeH2RxD94NCWu/ZAde8zRf+C1An06z0H8fm70g+A+Uv33gKpW3Dt
6mOQeL/9ny8g8Q18Av/B6lJv3AfxDySJMTgAaQWt0gcg8fqVhx6C3cHB8QIk
fyE98hrInITPuZdB8vdvlX4Eu6+a5ROIzjfe9wFE8wsGgsXPi5w/BKL72YUY
DoD8Jf77Fsicgl1N+0D652+R/Qk2P8XqC9ic45VbQPIJzSsug/0l4cfgANLv
eeIkSHyBvtkfsD8XcIPtgemXXznpD4iud2R+C3cviM4Nvwf2v+SC/yDzNjCq
vAHpl+edAnZPfO80MJ2vuu8b2L1ihp9A6hmKU5+C1O2/3gMJf807YP/VW00A
qz9/ne0lWP0Ljqdgf5uEgv0b/3nJY7D/X9l8B9HrP7x8ANa3I30v2F+ybA/t
AWnVHc4=
             "], "LeafValues" -> 
            RawArray["Real32",{0.12957318127155304`, 0.1451011449098587, 
              0.2172922044992447, -0.09177612513303757, -0.04254458099603653, \
-0.013806632719933987`, 0.042916156351566315`, 0.05573162063956261, 
              0.09086170047521591, 
              0.19041934609413147`, -0.20079907774925232`, 
              0.060143742710351944`, 
              0.09163939952850342, -0.007640321273356676, 
              0.08946409821510315, -0.03798561915755272, 0.11991669237613678`,
               0.16066883504390717`, 0.14709964394569397`, 0.0754702165722847,
               0.19194768369197845`, 0.2170504629611969, -0.06562212854623795,
               0.09677105396986008, 
              0.10792265832424164`, -0.007666434161365032, 
              0.21661925315856934`, 0.07018788903951645, 
              0.018413249403238297`, 
              0.050342388451099396`, -0.3430692255496979, 
              0.06375718861818314, -0.045791324228048325`, 0.1438065469264984,
               0.04300258681178093, 
              0.20414555072784424`, -0.15402694046497345`, 
              0.1991906762123108, -0.02448762021958828, 0.09372076392173767, 
              0.19708563387393951`, 0.074876569211483, 
              0.21766778826713562`, -0.6004345417022705, 0.2047128677368164, 
              0.15293174982070923`, -0.44421032071113586`, 
              0.15943513810634613`, 0.1592601239681244, 
              0.21538370847702026`, -0.7408366799354553, 0.1485142856836319, 
              0.17682604491710663`, 0.21895946562290192`, 
              0.13054898381233215`, 0.22066685557365417`, 
              0.22709493339061737`, 0.22572225332260132`, 
              0.20610488951206207`, 0.1938532590866089, 
              0.21012724936008453`}], "Children" -> 
            RawArray["Integer16",{{14, 2}, {16, 3}, {8, 4}, {5, 9}, {6, 
              7}, {-4, -7}, {-6, -8}, {27, 12}, {11, 
              10}, {-10, -11}, {-5, -12}, {13, 15}, {-9, -14}, {17, 
              34}, {-13, -16}, {23, 43}, {19, 18}, {37, 29}, {21, 20}, {22, 
              31}, {28, 48}, {-20, -23}, {26, 24}, {35, 25}, {-25, -26}, {32, 
              51}, {45, 33}, {-1, -29}, {38, 
              30}, {-30, -31}, {-21, -32}, {-2, -33}, {-28, -34}, {36, 
              52}, {-24, -36}, {40, 44}, {49, 39}, {-19, -39}, {-38, -40}, {
              42, 41}, {-41, -42}, {-15, -43}, {46, -44}, {50, 
              60}, {-3, -46}, {55, 
              47}, {-47, -48}, {-22, -49}, {-18, -50}, {-37, -51}, {-27, \
-52}, {57, 53}, {56, 54}, {-54, -55}, {-17, -56}, {-53, -57}, {58, 
              59}, {-35, -59}, {-58, -60}, {-45, -61}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{7, 8, 1, 2, 4, 5, 4, 7, 7, 4, 5, 7, 8, 7, 7,
               7, 6, 2, 4, 5, 1, 13, 1, 2, 4, 5, 2, 1, 5, 1, 4, 4, 5, 8, 7, 6,
               4, 11, 10, 7, 22, 14, 13, 6, 7, 4, 12, 11, 5, 1, 1, 8, 4, 5, 8,
               23, 7, 21, 2, 1, 1, 10, 4}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////rz/v5bj+Q/j/9+HUQ/X4B9wcQbV8k9QQsXr3y
EYj2fzD3OjJ/v+eMY/uB5hgkNN6zB/LXS977ARa/Pu8riJa/nHcVRMc3L/qJ
zL/fkL4MRPfLVv4C6Rdg5f0E0t9vYX0JJM4vynYAROtzep4Dq9uhdwmk7sPF
nS/tgXTBnF+3QbSBqfgrkL75AUJ3wPoKosD0+glWYHfGr4t8CNZnKbcdpE6/
qOYx2DxWYTAdb+/5G+yuN+s/g+lpW/+A6PznRvfB+lYtfwayR2Gh/kMQHRD0
Zy+IPvDy3WuwfxnP/gapK/ivvxQkvuHTSrB8geO1j2D7omedBIeHvehnkLqE
F28fgcTzJVx+gcUnGcwBu5udCRye+bm+R8H+PnXgCtg9/Fl/weY7Gt4G6bu/
qwss3/9T6h+Y9qt5CY4nLwGwu//viX4PUq9QMf8HyB0f6g49AdEXFNIeg/1x
LuMnyJzzBo+u7gcANMc7LA==
             "], "LeafValues" -> 
            RawArray["Real32",{0.1938907504081726, 0.20655466616153717`, 
              0.23473919928073883`, 0.21015171706676483`, 
              0.11782153695821762`, -0.09870906919240952, \
-0.09516025334596634, 0.003196868347004056, 0.15315432846546173`, 
              0.05570780113339424, -0.023933375254273415`, \
-0.14280341565608978`, -0.15857891738414764`, 0.1539856642484665, 
              0.05675698071718216, 0.17339098453521729`, 0.25929930806159973`,
               0.22938275337219238`, 
              0.23112346231937408`, -0.18771065771579742`, \
-0.0663047581911087, -0.005990381818264723, 0.018243631348013878`, 
              0.04163132235407829, 0.21312157809734344`, -0.1388014256954193, 
              0.06674128025770187, -0.0488797165453434, -0.07877419143915176, 
              0.057919636368751526`, 0.10314709693193436`, 
              0.14474260807037354`, -0.020831512287259102`, 
              0.00750337541103363, 0.018236180767416954`, 0.1392315775156021, 
              0.03141920268535614, 0.10124334692955017`, 0.19149011373519897`,
               0.20393040776252747`, -0.5168009996414185, 
              0.21290937066078186`, -0.00283956341445446, 0.1340256631374359, 
              0.06255947053432465, 0.2008107304573059, -0.41157203912734985`, 
              0.07607222348451614, 0.1700843870639801, -0.04205049201846123, 
              0.21912574768066406`, -0.014765989035367966`, 
              0.16108708083629608`, -0.3713749647140503, 0.08628853410482407, 
              0.16148002445697784`, 0.16395607590675354`, 0.2173679918050766, 
              0.15273736417293549`, 0.0022461118642240763`, 
              0.20770058035850525`, 0.01579323038458824, 0.1736159473657608, 
              0.21616044640541077`}], "Children" -> 
            RawArray["Integer16",{{16, 2}, {13, 3}, {6, 4}, {5, 10}, {14, 
              9}, {15, 7}, {8, 12}, {-7, -9}, {-6, -10}, {32, 
              11}, {-11, -12}, {-8, -13}, {34, 24}, {-4, -15}, {35, 33}, {40, 
              17}, {18, 39}, {19, 20}, {31, 22}, {21, 
              23}, {-19, -22}, {-20, -23}, {-21, -24}, {26, 25}, {30, 29}, {
              27, 28}, {-14, -28}, {-27, -29}, {-26, -30}, {-25, -31}, {-17, \
-32}, {-5, -33}, {-16, -34}, {52, 36}, {-3, -36}, {37, 
              38}, {-35, -38}, {-37, -39}, {49, 45}, {57, 41}, {42, 44}, {48, 
              43}, {-43, -44}, {56, 46}, {53, 
              47}, {-45, -47}, {-46, -48}, {-41, -49}, {51, 
              50}, {-50, -51}, {-18, -52}, {55, 
              54}, {-40, -54}, {-53, -55}, {-2, -56}, {-42, -57}, {60, 58}, {
              62, 59}, {-59, -60}, {61, 
              63}, {-1, -62}, {-58, -63}, {-61, -64}}], "NominalSplits" -> {},
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{2, 7, 1, 8, 4, 5, 2, 8, 14, 11, 19, 1, 13, 
              21, 7, 1, 24, 13, 14, 2, 1, 19, 8, 4, 4, 5, 7, 7, 8, 15, 4, 15, 
              7, 8, 8, 1, 4, 6, 1, 4, 8, 8, 4, 3, 2, 5, 7, 8, 7, 13, 10, 1, 8,
               8, 8, 8, 4, 4, 16, 5, 7, 8, 8}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////ft13xaz+Qfl//+yuIto/i+wHm/4x5BaYjT74D
0fHRTe9B9Prz6hdAtH5G7B+wfGf7BxB9n/fPvf1AczfcurvPHqT+ffhvEL9g
QcBVMH/hxxcgdeeLPX+DzfmkcRcsX74QLN/vrn4OxJ9g0HwKzJ8l+Rekzl8v
8ANIXEC35wlI/L2e5FkQ/wAXfz+I//8o/0Gwezg9z4FoeYerJ0DyF85MWg6S
r4+Jew/if9DjPw/i5xcZgd27XrziJdjdd5b+BMtv5WZwAOnnz/oLdsfL6Af2
oHDKb/8IoguW3jwN0r//83WwvxY4ZV4G8f2bGe6D9VtuB7vvv3DiE7B+C+MX
IP795yr/wPbFKC4H0fk/12wB0fNT+DbB3QkyL+z6YRD9YLcI2B37W5Q+I4fz
+TjDiyD1AdP7L4LUCUQVPgSr/5sNDq//GlO+geOvauNDEM3/aeoPcLi93wJ2
5/w+22sgfsMO9/f2ALSHMHo=
             "], "LeafValues" -> 
            RawArray["Real32",{-0.5879069566726685, 
              0.1535571962594986, -0.04800209403038025, 0.16353918612003326`, 
              0.09174603223800659, 
              0.023134993389248848`, -0.07933370023965836, \
-0.017562642693519592`, 0.07725393772125244, 0.005965884774923325, 
              0.08582193404436111, 0.1086045429110527, 0.12561646103858948`, 
              0.15635709464550018`, -0.08116757124662399, 
              0.06567853689193726, -0.009808002039790154, \
-0.03405200317502022, 0.01705395244061947, 
              0.17102961242198944`, -0.07984163612127304, 
              0.058733098208904266`, 0.18894429504871368`, 0.2175597995519638,
               0.1907864212989807, -0.003910056781023741, 
              0.18870966136455536`, -0.2052285373210907, 
              0.1845625638961792, -0.21042919158935547`, 0.06018974632024765, 
              0.16517013311386108`, 0.01868874579668045, -0.02069798670709133,
               0.1576489955186844, 0.10076222568750381`, 
              0.16584815084934235`, -0.5145371556282043, 
              0.0007999681984074414, 0.17041818797588348`, 
              0.21891964972019196`, -0.0677511990070343, 0.08093228936195374, 
              0.03949202969670296, 0.2078389674425125, 
              0.13843044638633728`, -0.5816299915313721, 
              0.1405402421951294, -0.014473900198936462`, 
              0.18495115637779236`, 0.10704655200242996`, -0.4157430827617645,
               0.20968879759311676`, 0.18319152295589447`, 
              0.15441133081912994`, 0.23600034415721893`, 
              0.22451356053352356`, 0.03349533677101135, 0.21100950241088867`,
               0.2054247260093689, 0.21858733892440796`, 0.22142712771892548`,
               0.23359467089176178`, 0.2115694135427475}], "Children" -> 
            RawArray["Integer16",{{20, 2}, {10, 3}, {12, 4}, {8, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {35, 9}, {-9, -10}, {13, 11}, {15, 
              14}, {39, 17}, {33, 32}, {22, 21}, {36, 16}, {-16, -17}, {18, 
              19}, {-13, -19}, {-18, -20}, {45, 23}, {-15, -22}, {-12, -23}, {
              24, 25}, {29, 40}, {42, 26}, {28, 27}, {-27, -28}, {-26, -29}, {
              31, 30}, {-30, -31}, {-21, -32}, {44, 34}, {38, 
              37}, {-33, -35}, {-4, -36}, {-11, -37}, {-34, -38}, {-2, -39}, {
              53, 50}, {41, 54}, {-25, -42}, {43, 
              60}, {-24, -44}, {-14, -45}, {55, 46}, {49, 47}, {52, 
              48}, {-48, -49}, {51, 
              61}, {-40, -51}, {-46, -52}, {-47, -53}, {-3, -54}, {-41, -55}, \
{58, 56}, {57, 63}, {-56, -58}, {59, 
              62}, {-1, -60}, {-43, -61}, {-50, -62}, {-59, -63}, {-57, \
-64}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{13, 9, 1, 2, 8, 7, 4, 7, 5, 5, 2, 12, 5, 20,
               23, 2, 1, 5, 4, 4, 3, 3, 7, 2, 1, 2, 14, 17, 1, 8, 1, 2, 20, 4,
               2, 1, 1, 1, 2, 6, 4, 21, 2, 1, 16, 1, 8, 2, 17, 1, 15, 7, 23, 
              5, 5, 22, 24, 4, 5, 1, 2, 11}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwA2IQ3aH0x/7////7A07+3A/kN7y0fWYPpDcknXsKoj/I
Vn0G0QJbnD6B1M0vf/YRpE5g6d5bIH6/46Ir+4F0vsOGPSC6PiX8N4i+f0rn
N0jdAkWnJyB1/J5q/0Hi/tVcDAeA4gFyy66BxP+X5twHievnLv0ANkfY7AvY
nETdXSB6f/cssL7/XvLfwfyXyz+DzC1Qf38dpF+/qOYxSPz8pbNvQOIHjNXe
gtzb8L7mOYgueJe9HKQu/s6BB/thfJD/al9sBuvPCgG750NMSh1I/EC00Caw
+KkDYH+dl35+CuyeyO2fQTS/aO01MN9qAkTf8W6wO9Z/DAS7n5+n7wWItvfg
B9P/Cyw+wvkg+0UiX4LU5/t+PQziPzg4jcEBZK+l4iVwPEhN/QO2d6nrN7A9
kpPAfP5XNmD/25+e/B2kz4AvcCfIvQH3j/8H+++Q4VuQfHxsMDj861ceeghW
nxt+DxwPWYu+2wMA8fUlCA==
             "], "LeafValues" -> 
            RawArray["Real32",{0.20849911868572235`, 
              0.0738162100315094, -0.08206807076931, 0.06775572896003723, 
              0.07505321502685547, 0.14811378717422485`, 
              0.020168937742710114`, -0.0055412231013178825`, \
-0.11607469618320465`, 0.1564900279045105, -0.05032632499933243, 
              0.1579476296901703, 0.0013957388000562787`, 0.05790036916732788,
               0.0467013455927372, 0.24857276678085327`, 0.20739229023456573`,
               0.013311964459717274`, 
              0.15426786243915558`, -0.008058656007051468, 
              0.19628997147083282`, 0.06812229752540588, 0.2253103405237198, 
              0.11849328130483627`, 
              0.20173101127147675`, -0.03328912705183029, 0.02468685992062092,
               0.10178202390670776`, 
              0.1853998601436615, -0.17305153608322144`, 
              0.2108970582485199, -0.2759271264076233, 0.004198730923235416, 
              0.06747034192085266, -0.4427928626537323, 
              0.21563617885112762`, -0.012799352407455444`, 
              0.16517990827560425`, 0.1347196102142334, 0.03862132132053375, 
              0.06681356579065323, 0.21576522290706635`, 0.16800221800804138`,
               0.13124887645244598`, 
              0.13396918773651123`, -0.05664824694395065, 
              0.19336910545825958`, 0.22254431247711182`, 
              0.22777681052684784`, 0.2180977165699005, -0.06726182997226715, 
              0.14633266627788544`, 
              0.21124093234539032`, -0.44276803731918335`, \
-0.5632032155990601, -0.13036863505840302`, 0.231775164604187, 
              0.20267972350120544`, 0.22016887366771698`, 
              0.20622596144676208`, 0.23425447940826416`, 
              0.21291638910770416`, 0.21855776011943817`}], "Children" -> 
            RawArray["Integer16",{{2, 15}, {14, 3}, {4, 11}, {5, 8}, {6, 
              7}, {-3, -7}, {-6, -8}, {10, 9}, {-9, -10}, {-5, -11}, {27, 
              12}, {21, 13}, {-13, -14}, {33, 16}, {40, 22}, {18, 17}, {38, 
              29}, {20, 19}, {-19, -20}, {-15, -21}, {-12, -22}, {31, 23}, {
              30, 24}, {26, 25}, {-25, -26}, {-24, -27}, {28, 
              58}, {-4, -29}, {-18, -30}, {39, 51}, {52, 32}, {41, 34}, {42, 
              35}, {-33, -35}, {37, 
              36}, {-36, -37}, {-34, -38}, {-17, -39}, {-23, -40}, {54, 
              43}, {-32, -42}, {50, 49}, {46, 44}, {48, 45}, {-45, -46}, {47, 
              60}, {-41, -48}, {-44, -49}, {-43, -50}, {-1, -51}, {-31, -52}, \
{62, 53}, {-53, -54}, {55, 56}, {59, -56}, {57, 
              61}, {-55, -58}, {-28, -59}, {-2, -60}, {-47, -61}, {-57, -62}, \
{-16, -63}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 
            0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{14, 16, 12, 4, 5, 7, 22, 5, 5, 8, 1, 2, 9, 
              19, 2, 1, 5, 2, 8, 7, 2, 1, 1, 7, 5, 24, 2, 16, 1, 10, 7, 13, 7,
               5, 5, 1, 20, 1, 2, 2, 1, 19, 4, 1, 2, 7, 2, 7, 9, 2, 5, 1, 2, 
              5, 2, 4, 6, 10, 8, 1, 5, 2, 2}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB2IgLZBn/tUeSDe4KH21//////qsra/3A/kKC/UfgsQZ
bG+9BNEGzWs+geT/ay/6sx9I8b+y+Q5SN2HhvvsgeQU53mcgef8b8cdA8vZl
rXdBdL+O3D+w+lAhMH3/5LovIFpfaeonsP5F6o9A+uZflt0G4ie08D4G8euj
Nt8Aqfv/ZNZHEO2veecTiH5/w/UWWF+x132QFw4snbrKAiie/2H/c7D4mk1b
Qe6ZcHXVRhAt4Gp8AuwPu1AGB5B58XZgex9I+IH58SEpX0HmnneIfgIW3/vs
lz3MfSA6K4ThAMjeBdwfwPYXdb4D+0e09hpI/YX9MfdA6uMfPXsD4m9Q9n0C
4ttPLH8NUhcvbgSm9ef9BOt73xYODh+Y//bPqf0MDqfgj99B9HzpvL9g9cvO
PwHR61e3PAf7n/PDT7D6X7vB+uzX5oH59VYTGA4A7S34/+MzyN79Z1x/gP2z
fMdHeDyBzPnw8gFYX274vf0AHEg5lw==
             "], "LeafValues" -> 
            RawArray["Real32",{0.14782433211803436`, 0.1766842007637024, 
              0.15336106717586517`, -0.09927241504192352, 
              0.061457037925720215`, 0.04670689254999161, 
              0.0035467594861984253`, 
              0.15559391677379608`, -0.014099331572651863`, 
              0.054179415106773376`, 
              0.15513546764850616`, -0.16324250400066376`, \
-0.0758495032787323, -0.049000393599271774`, 
              0.11233314126729965`, -0.021639322862029076`, \
-0.023940563201904297`, 0.0955917090177536, 
              0.13438400626182556`, -0.5378255248069763, 
              0.24717582762241364`, -0.02635522559285164, \
-0.03411009535193443, 0.11143585294485092`, 
              0.13277845084667206`, -0.18649639189243317`, \
-0.014803254045546055`, 0.1523257941007614, 0.029916664585471153`, 
              0.21541376411914825`, -0.7678212523460388, 
              0.062388110905885696`, 0.011206885799765587`, 
              0.07576825469732285, -0.17708618938922882`, 
              0.05750007554888725, -0.09997384995222092, 0.06393998861312866, 
              0.17511135339736938`, 0.04752618819475174, 0.21911604702472687`,
               0.19660410284996033`, 0.0800120085477829, 
              0.15174417197704315`, -0.07010703533887863, 
              0.10770875960588455`, -0.006685622967779636, \
-0.15797431766986847`, 0.02791685052216053, 0.18275094032287598`, 
              0.15729928016662598`, 0.192796528339386, 0.222019225358963, 
              0.11509761214256287`, 0.1862708479166031, 0.23232583701610565`, 
              0.2049580216407776, 0.21862687170505524`, -0.3024701476097107, 
              0.20947490632534027`, 0.1542646437883377, 0.2245122194290161, 
              0.20412854850292206`, 0.1955297887325287}], "Children" -> 
            RawArray["Integer16",{{2, 14}, {3, 13}, {7, 4}, {5, 10}, {6, 
              26}, {-4, -7}, {30, 8}, {28, 9}, {-9, -10}, {12, 
              11}, {-11, -12}, {-5, -13}, {37, 15}, {32, 19}, {29, 16}, {18, 
              17}, {-17, -18}, {-16, -19}, {21, 20}, {33, 34}, {23, 22}, {27, 
              24}, {25, 
              41}, {-23, -25}, {-15, -26}, {-6, -27}, {-22, -28}, {-8, -29}, {
              42, 50}, {31, 49}, {-1, -32}, {44, 57}, {51, 43}, {36, 
              35}, {-35, -36}, {-21, -37}, {52, 38}, {40, 
              39}, {-39, -40}, {-38, -41}, {-24, -42}, {-14, -43}, {-34, \
-44}, {47, 45}, {54, 46}, {-46, -47}, {48, 
              56}, {-2, -49}, {-31, -50}, {-30, -51}, {-20, -52}, {55, 
              53}, {-53, -54}, {-45, -55}, {-3, -56}, {-48, -57}, {61, 58}, {
              60, 59}, {-59, -60}, {-58, -61}, {62, 
              63}, {-33, -63}, {-62, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{4, 2, 4, 5, 1, 7, 8, 4, 16, 7, 2, 9, 10, 7, 
              5, 5, 7, 7, 5, 5, 4, 7, 1, 5, 4, 5, 19, 7, 20, 8, 2, 2, 9, 8, 
              17, 1, 7, 5, 11, 24, 11, 5, 5, 7, 2, 19, 2, 4, 8, 7, 1, 5, 10, 
              3, 2, 18, 23, 2, 7}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwBmIg7aC94pv9////759c92U/kO5nFX4Mouc/v/YRRNt7
8L8A0fIVv56C6P+6W96CaH+/rT9BdP6ZP9f2g8w5O+OdPZBuYP93DmTe+4bG
7yDxgv8/PoP4/gVVj8DmXoHQ++cuOACSV5ja8wikT2GnVS1Yf+CbZ/ZI9v+3
WfkcbL9j7w+Q+g3HlJkcgPzzZcs2gt3H3P0bRL/vXgem+UOF/oHo9Z/lP4LU
f8iedAlk7oMQ9xsgc/nfCr8Eqy/qfAdW/8vyGYiuF+PeABZXLn0Ctrc05z5I
f8OfjR/A/lH59BXEN5h64hfYfWf8L4H9fd3qOFh+qeYnsP+k8/6C6PPFnmD3
yF/YAqb/+3ozHAD586DABZD6+BvnfoP9fz3qBch9G5q3PAeJ6ytNBZvj77jg
F1i/ojHjAZC5QbP/gdQLtLl9A6lPcFt/A0RfYBAGm2ff9/UHOFyfqVzZDwBj
YCfp
             "], "LeafValues" -> 
            RawArray["Real32",{-0.03327464312314987, 0.18076303601264954`, 
              0.17136211693286896`, 0.18365789949893951`, 
              0.1287229210138321, -0.015859389677643776`, \
-0.052434757351875305`, -0.11074948310852051`, 
              0.10647150129079819`, -0.02844209410250187, 0.04744371026754379,
               0.01282588206231594, 0.004475404974073172, 
              0.11047811061143875`, 0.15587565302848816`, 0.1785748451948166, 
              0.19783732295036316`, 
              0.15252573788166046`, -0.006041433196514845, \
-0.14672763645648956`, -0.03035809099674225, 
              0.023948200047016144`, -0.27981314063072205`, \
-0.06387246400117874, 0.22918233275413513`, 
              0.048550207167863846`, -1.4656774997711182`, 
              0.19230814278125763`, -0.040559206157922745`, 
              0.14079715311527252`, 0.04557645693421364, 0.23107343912124634`,
               0.034379780292510986`, -0.15324386954307556`, 
              0.026586629450321198`, -0.035512056201696396`, 
              0.09808468073606491, 0.21904902160167694`, 0.10279978066682816`,
               0.10163623094558716`, -0.013420487754046917`, \
-5.718104839324951, 0.18675097823143005`, 0.06123275309801102, 
              0.10479879379272461`, 0.2023167610168457, 
              0.09648149460554123, -0.05200378596782684, 0.11452879756689072`,
               0.11725485324859619`, 0.20574840903282166`, 
              0.16366246342658997`, -0.4204556941986084, 0.02862720564007759, 
              0.19368936121463776`, -0.2958980202674866, 
              0.20212018489837646`, -0.17092415690422058`, 
              0.20967380702495575`, 0.2144935429096222}], "Children" -> 
            RawArray["Integer16",{{2, 26}, {14, 3}, {8, 4}, {12, 5}, {6, 
              7}, {-5, -7}, {-6, -8}, {25, 9}, {11, 
              10}, {-10, -11}, {-9, -12}, {38, 13}, {-13, -14}, {15, 16}, {22,
               24}, {17, 18}, {20, 37}, {21, 
              19}, {-19, -20}, {-15, -21}, {-17, -22}, {42, 23}, {-23, -24}, {
              28, 39}, {48, 29}, {40, 27}, {46, 30}, {-16, -29}, {-26, -30}, {
              32, 31}, {33, 36}, {34, 
              35}, {-31, -34}, {-28, -35}, {-33, -36}, {-32, -37}, {-18, \
-38}, {-4, -39}, {-25, -40}, {55, 41}, {43, 44}, {-1, -43}, {51, 47}, {45, 
              56}, {-42, -46}, {52, 49}, {-44, -48}, {-3, -49}, {50, 
              58}, {-47, -51}, {-41, -52}, {53, 54}, {-27, -54}, {-53, -55}, {
              57, -56}, {-45, -57}, {59, -58}, {-50, -59}, {-2, -60}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{7, 1, 2, 8, 4, 5, 4, 2, 2, 2, 14, 16, 9, 21,
               7, 1, 2, 5, 5, 1, 4, 4, 2, 5, 5, 9, 19, 19, 24, 5, 15, 2, 2, 5,
               5, 2, 4, 1, 8, 5, 5, 7, 14, 19, 15, 11, 17, 21, 4, 5, 2, 8, 3, 
              5, 2, 2, 15, 6, 11, 2}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwAeL///+/F972fT+QPv/V8CeIlt/J+hFE99v/+QKi9dUU
voLo+AXfXoHo/2wSL8HyUy5fAOuzEPoDovdbepzeDzS3wWj1d3sgLbBh2QN7
kL7b4Z9A4gUbSw+A+Puv9/wGm/c+HEzbq20+Adav9usmSN0EFe8rIHXrP2nc
BZtvLfwQRNd/eXYarP6l6Huw/dcg7gO7C6jPoTIGrO+/lX0N2B9sludAtL+P
ywuw+dfngf2xfso2sP/2/yr+C9Kn8EAXrM//wQOwv9bHKC4H2/NB7DbY/5xn
ToHVf74Odu/9mwp7we5ZfXkemF4fD/a/vZfAH7A7OPrfgM2zEloEEp8fefkp
SDzh5ZznoHApkFH9B3an3emnYH3M3WBz+T9Jgf15/7nKP7C9GbFgc+tn6j0E
6TeoWr4UpM/+6aZHYPVsB8Hy/1X9webs/+MPtqcgvO8rSF3/LMm/+wFke0iW

             "], "LeafValues" -> 
            RawArray["Real32",{0.2555776834487915, -0.7532534599304199, 
              0.20153507590293884`, -0.030535319820046425`, 
              0.011313008144497871`, 
              0.009786616079509258, -0.05583047866821289, 0.07135945558547974,
               0.21516010165214539`, 
              0.06511417031288147, -0.006507487967610359, 
              0.15585064888000488`, -0.01553354412317276, 
              0.0015227398835122585`, 
              0.07472661882638931, -0.019794335588812828`, 
              0.08592407405376434, 0.19743573665618896`, -0.04793805256485939,
               0.23129066824913025`, 
              0.16733385622501373`, -0.14109142124652863`, 
              0.19965563714504242`, 
              0.18147128820419312`, -0.07109996676445007, 
              0.17621365189552307`, 0.14314258098602295`, 
              0.172592893242836, -1.1074893474578857`, 
              0.047160979360342026`, -0.0012497531715780497`, 
              0.0003372005885466933, 0.13167516887187958`, 
              0.22955384850502014`, -0.0175339225679636, 0.05930190533399582, 
              0.22613967955112457`, 0.04933184012770653, -0.3674188256263733, 
              0.19422170519828796`, 0.06585762649774551, 0.17112502455711365`,
               0.09517694264650345, 0.20945335924625397`, -0.4056989550590515,
               0.0056790634989738464`, 
              0.1749422401189804, -0.6561225652694702, 0.19645710289478302`, 
              0.1859084814786911, 0.17500968277454376`, 0.15270011126995087`, 
              0.19932790100574493`, 0.05568942800164223, 0.16399717330932617`,
               0.1992492973804474, 
              0.21638643741607666`, -0.23960435390472412`, 
              0.18339556455612183`, 0.1599660962820053, 
              0.43821096420288086`}], "Children" -> 
            RawArray["Integer16",{{15, 2}, {16, 3}, {9, 4}, {7, 5}, {14, 
              6}, {-6, -7}, {8, 10}, {-4, -9}, {32, 11}, {-8, -11}, {13, 
              12}, {-12, -13}, {-10, -14}, {-5, -15}, {42, 17}, {38, 26}, {19,
               18}, {33, 20}, {23, 36}, {22, 21}, {-21, -22}, {-19, -23}, {25,
               24}, {-24, -25}, {-16, -26}, {27, 28}, {31, 29}, {43, 
              30}, {-28, -30}, {-29, -31}, {-17, -32}, {51, 35}, {34, 
              50}, {-18, -35}, {-33, -36}, {55, 37}, {-37, -38}, {52, 39}, {
              41, 40}, {-40, -41}, {-39, -42}, {56, 44}, {-27, -44}, {45, 
              47}, {48, 46}, {-46, -47}, {
              49, -48}, {-43, -49}, {-45, -50}, {-34, -51}, {-3, -52}, {53, 
              54}, {-2, -54}, {-53, -55}, {-20, -56}, {60, 57}, {59, 
              58}, {-58, -59}, {-57, -60}, {-1, -61}}], "NominalSplits" -> {},
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{7, 8, 1, 2, 4, 5, 4, 7, 5, 23, 7, 7, 1, 8, 
              5, 2, 4, 5, 1, 4, 7, 13, 2, 5, 4, 1, 2, 4, 1, 1, 5, 4, 1, 2, 7, 
              1, 4, 2, 8, 2, 5, 5, 4, 1, 1, 4, 5, 1, 1, 7, 1, 4, 10, 2, 5, 1, 
              8, 20, 2, 4, 20, 5, 9}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////v/xz9dj+Q1t9y7AqI9uf+/xrMvx7/EES/jzz5
Dsx/duEJiD7/7PZ7MP2B5xqIrj/r83U/0LwLW6te2YP4fZvB4v7RO4+D6Pkn
z/0C69cP+g2i46WefQepNzgy5SVI/fvv7HVge1jvXAObo6KyDSTen6T8HSR+
/87Sn2B72nbcANH2Za13wfrVDC/YA+mEArcbIPXnxboegMQnrNm0Fax/ntVV
sL1sOWC6PuDZXRCd77BhD4juZxV+DLbvRewBkDkbVBY9B7vfZ/M2sPsvzfwC
Vqci+hqkriF0wRmQvDx/1l+Q+P7l+zaC3fN9xnmQfEC7ANgd+Rk2N0Hi8mab
boP95cB9ABxelSovwOb+OXoMTN+IPwa230PqGkjf/WliT8F8hbTHIPcEfHI7
AHbPRYczIHGG9mc3wf4SvHkP7J6Xts/A/J9S/8Dhod7O4ADyb3MAOB7zX7Kf
BYl/qA/6ADLPYH30VhDNcHTKW3sAEok8yg==
             "], "LeafValues" -> 
            RawArray["Real32",{0.03773491457104683, 0.21042540669441223`, 
              0.24079979956150055`, 
              0.20061659812927246`, -0.054728277027606964`, 
              0.06808896362781525, -0.08973672240972519, 0.08274897187948227, 
              0.16125163435935974`, -0.06779848039150238, 
              0.036382079124450684`, -0.10532455146312714`, 
              0.032073549926280975`, -0.06767890602350235, 
              0.09493078291416168, 0.034509167075157166`, 
              0.12617754936218262`, -0.12477358430624008`, \
-0.04265788570046425, 0.12973733246326447`, -0.17052890360355377`, 
              0.1047869473695755, 0.12547412514686584`, 0.03376654535531998, 
              0.22848637402057648`, 
              0.20767398178577423`, -0.04736047983169556, \
-0.09179577976465225, 0.099326491355896, -0.1252211183309555, 
              0.052263952791690826`, -0.2252311408519745, -0.094712994992733, 
              0.21184949576854706`, 0.07335594296455383, 
              0.14444373548030853`, -0.027523480355739594`, \
-0.010036629624664783`, -0.06619179993867874, 0.05801292136311531, 
              0.17895635962486267`, 0.03131415694952011, 0.2053125947713852, 
              0.17119045555591583`, -0.08987000584602356, 
              0.20027412474155426`, 0.2249404489994049, 
              0.17931649088859558`, -0.005356532521545887, 
              0.20301009714603424`, 0.15514476597309113`, 0.2060481458902359, 
              0.1507851630449295, 0.02382592484354973, 
              0.20205475389957428`, -0.06954681873321533, 
              0.21387475728988647`, 0.14782142639160156`, 0.02492440491914749,
               0.2342243492603302, 0.1102839857339859, 0.23189397156238556`, 
              0.17508704960346222`, 0.23102019727230072`}], "Children" -> 
            RawArray["Integer16",{{21, 2}, {14, 3}, {6, 4}, {5, 10}, {12, 
              9}, {35, 7}, {8, 13}, {-7, -9}, {-6, -10}, {20, 
              11}, {-11, -12}, {-4, -13}, {-8, -14}, {39, 15}, {19, 16}, {18, 
              17}, {-17, -18}, {-16, -19}, {38, 51}, {-5, -21}, {40, 22}, {30,
               23}, {24, 25}, {29, 28}, {27, 
              26}, {-26, -27}, {-24, -28}, {-25, -29}, {-23, -30}, {31, 32}, {
              46, 37}, {33, 34}, {-31, -34}, {-33, -35}, {50, 
              36}, {-36, -37}, {-32, -38}, {-15, -39}, {57, 47}, {42, 41}, {
              54, 43}, {52, 59}, {45, 
              44}, {-44, -45}, {-42, -46}, {-22, -47}, {49, 
              48}, {-48, -49}, {-40, -50}, {-3, -51}, {-20, -52}, {56, 
              53}, {-53, -54}, {55, 61}, {-41, -56}, {-1, -57}, {62, 
              58}, {-58, -59}, {63, 
              60}, {-60, -61}, {-55, -62}, {-2, -63}, {-43, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{14, 17, 12, 5, 1, 2, 7, 8, 5, 14, 19, 17, 6,
               7, 1, 2, 5, 2, 12, 7, 8, 2, 5, 7, 1, 21, 4, 1, 2, 7, 2, 4, 20, 
              5, 13, 3, 1, 2, 4, 7, 22, 2, 1, 8, 5, 7, 18, 4, 5, 21, 1, 15, 1,
               2, 4, 6, 3, 7, 7, 6, 5, 5, 1}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB2Ig/SE255s9kJ5g+OKH/f///+cruX/bD6TtJ3r+AtHr
ox9/AfNdQ7+CaP6ymM8guj/6/fv9QH0BTyRugfTZH739ASR+3pH7P0h8wfzl
/8Di35xvgPgG2oJXQXx/zTufwOpkij6AxB3eKt0BifdPuXwBJP7fjREsb9/U
DrZXvssJrK7h6evbIHXyBwT/gvgXjufOB7k74XPuZZD4+Q9uR0Dq/Y9XbgHR
+9UgfPtDjFdB9P07S3+Cacv/J8H0vCWXQLR+VgjDAaA5Cg8lmByA9AMJPwYH
kD91HcH+9+f+/xpEvy/qfAd2t8EjsHn5B67+ANtz1vUbyD0T3tvvBoffBbUr
YPMtLoPV+zMr/wPR8SEp4PDr37zuNzh83oh+ALm/wTfpG0hf/te14HD3z2t8
CQ7nRZvB9usvO/8EHA+rW56D7f/VfwJE11tNYDgAUt+XABaPN/J6BXZn/W+w
Pfmq+8Dm8b+y+Q4Oh9OTwfR/njnP9gMA/plQGg==
             "], "LeafValues" -> 
            RawArray["Real32",{0.10819060355424881`, -0.4355131685733795, 
              0.1087791696190834, 0.2149558961391449, 0.15807954967021942`, 
              0.033509984612464905`, -0.039133477956056595`, 
              0.050341468304395676`, -0.01145054679363966, 
              0.08757591992616653, 0.021631058305501938`, 
              0.22532010078430176`, 0.22477558255195618`, 
              0.18582119047641754`, 0.1738547831773758, 
              0.05024934187531471, -0.018351374194025993`, 
              0.10859419405460358`, 0.19773514568805695`, 0.1261160969734192, 
              0.04352999106049538, -0.012999276630580425`, 
              0.11466913670301437`, 0.09850034862756729, 0.16118429601192474`,
               0.19538405537605286`, 
              0.18261712789535522`, -0.09644749015569687, 0.09938151389360428,
               0.07019264250993729, -0.2257210612297058, 
              0.016256555914878845`, -0.021315589547157288`, 
              0.21427197754383087`, -0.7487168908119202, 0.1416427493095398, 
              0.11944165825843811`, 0.18812353909015656`, 0.0503632016479969, 
              0.06892972439527512, 0.003793365089222789, 0.18546274304389954`,
               0.19854210317134857`, 0.009284887462854385, 
              0.07270130515098572, 0.14102323353290558`, 0.11412709206342697`,
               0.14062419533729553`, 
              0.1320924311876297, -0.005817359779030085, -0.8136078715324402, 
              0.16087213158607483`, -0.006672217510640621, 
              0.22219155728816986`, 0.11113909631967545`, 
              0.13522356748580933`, 0.13407765328884125`, 
              0.21442823112010956`, 
              0.13946573436260223`, -0.13800564408302307`, \
-0.09510329365730286, 0.2218816727399826, -0.2057005912065506, 
              0.18939805030822754`}], "Children" -> 
            RawArray["Integer16",{{2, 11}, {3, 12}, {7, 4}, {23, 5}, {10, 
              6}, {-6, -7}, {13, 8}, {14, 9}, {-9, -10}, {-5, -11}, {35, 
              19}, {15, 33}, {32, 36}, {-8, -15}, {18, 16}, {25, 
              17}, {-17, -18}, {27, 47}, {28, 20}, {26, 21}, {24, 
              22}, {-22, -23}, {45, 31}, {-21, -25}, {-16, -26}, {40, 
              46}, {-3, -28}, {51, 29}, {34, 
              30}, {-30, -31}, {-24, -32}, {-1, -33}, {53, 37}, {-29, -35}, {
              41, 56}, {-14, -37}, {39, 
              38}, {-38, -39}, {-34, -40}, {-20, -41}, {48, 42}, {44, 
              43}, {-43, -44}, {-42, -45}, {-4, -46}, {-27, -47}, {-19, -48}, \
{49, 50}, {-2, -50}, {-49, -51}, {60, 52}, {-52, -53}, {55, 
              54}, {-54, -55}, {-13, -56}, {61, 57}, {59, 
              58}, {-58, -59}, {-57, -60}, {-12, -61}, {62, 
              63}, {-36, -63}, {-62, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{7, 7, 5, 4, 1, 8, 1, 7, 1, 4, 2, 5, 5, 2, 4,
               1, 1, 4, 5, 5, 4, 2, 2, 8, 1, 7, 1, 7, 7, 1, 6, 2, 5, 5, 1, 1, 
              4, 14, 7, 7, 21, 7, 22, 13, 16, 6, 4, 2, 7, 8, 11, 7, 1, 10, 4, 
              7, 21, 2, 15, 1, 1, 8, 2}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////vf7n8834gv2BhzmN7IP1gwptvIFrA/dNHEH0h
Y+8nMM3X+sweqN6/muXTfiB9vyF9GUjfhf0x90Di7y+v+wrib8ibcwfEX3/h
2z6QOnmFnFcg2r6s9S5IXkB0J1i+v1X9GUh8f9GPlyBxh9i4gyBxeQmXb2Dx
lENge/5/nQqWZzib8Rkkf17M8BOIb/CtYB+YL/38FFj/VJ5jIH595PbPIH39
KeK1IFp/0f5fYPt9mb6A1AUssf0KUqe/vfkmSDyeTXMxiJ7/xuImWL5ItA7s
3xexB8D+fcZ5CRw+HzrA4SDQHf4BRAdUvXwFdq9d6mOQ/vWMZ3+DabGlH8Dq
Ha99BIfDxPS3IHH+OWkvwOJeu6+AxO35Gb+C3XXkLDh8/FvnPQTJL0g4BTHX
sfcHODwZVd6A7NsQ+WEv2LzXEzeB9XkJ/AGHz57o92Dzwy3Wg+j6e19ug/R9
qDv0BOwPhbTH4HApd3sJVsd28M9+AHOQJ64=
             "], "LeafValues" -> 
            RawArray["Real32",{0.18031631410121918`, -0.08445528149604797, 
              0.12412476539611816`, 0.19770312309265137`, 0.21564981341362, 
              0.14913031458854675`, -0.0064577702432870865`, \
-0.025686126202344894`, -0.002929678652435541, 0.06968094408512115, 
              0.008581094443798065, -0.13547390699386597`, 
              0.15358605980873108`, 0.0701998695731163, 
              0.10363908857107162`, -0.10067592561244965`, \
-0.08916132152080536, 
              0.09229885041713715, -0.18299724161624908`, \
-0.046154722571372986`, 0.054599132388830185`, 0.15499503910541534`, 
              0.1439330279827118, -0.011899945326149464`, 0.0744217112660408, 
              0.0418841615319252, -0.06848135590553284, 0.004898316226899624, 
              0.08739518374204636, 0.11983360350131989`, -0.2481842041015625, 
              0.19247670471668243`, 0.198923259973526, 
              0.2280295044183731, -0.024688847362995148`, 
              0.024405213072896004`, -0.09879147261381149, 
              0.11012235283851624`, 0.03813701868057251, 0.2031031847000122, 
              0.2362736612558365, -0.015301358886063099`, 
              0.119385726749897, -0.01142376009374857, 0.20252031087875366`, 
              0.08836731314659119, 0.1433667093515396, -1.7525676488876343`, 
              0.20618535578250885`, 
              0.21153323352336884`, -0.054467346519231796`, \
-0.023771999403834343`, 0.02367023564875126, -0.49618539214134216`, 
              0.2039044350385666, 0.011778355576097965`, 0.13275927305221558`,
               0.17850421369075775`, 0.08417410403490067, 
              0.21712416410446167`, 
              0.30875667929649353`, -0.029937991872429848`, 
              0.21229949593544006`, 0.21078184247016907`}], "Children" -> 
            RawArray["Integer16",{{29, 2}, {3, 11}, {4, 22}, {5, 7}, {6, 
              10}, {-2, -7}, {8, 9}, {-5, -9}, {-8, -10}, {-6, -11}, {13, 
              12}, {18, 21}, {14, 15}, {39, 19}, {16, 
              17}, {-14, -17}, {-16, -18}, {20, 25}, {-15, -20}, {-12, -21}, {
              40, 27}, {23, 24}, {26, 28}, {49, 
              30}, {-19, -26}, {-4, -27}, {-22, -28}, {-24, -29}, {42, 
              31}, {-25, -31}, {32, 41}, {33, 34}, {36, 37}, {35, 
              38}, {-33, -36}, {-30, -37}, {-34, -38}, {-35, -39}, {-3, -40}, \
{-13, -41}, {47, 52}, {56, 43}, {46, 44}, {45, 51}, {-44, -46}, {50, 59}, {55,
               48}, {-48, -49}, {-23, -50}, {-43, -51}, {-45, -52}, {54, 
              53}, {-53, -54}, {-42, -55}, {-32, -56}, {60, 57}, {62, 
              58}, {-58, -59}, {-47, -60}, {61, 
              63}, {-1, -62}, {-57, -63}, {-61, -64}}], "NominalSplits" -> {},
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{2, 1, 7, 8, 4, 5, 1, 8, 14, 1, 5, 4, 3, 4, 
              1, 2, 1, 2, 8, 5, 5, 20, 8, 15, 16, 24, 6, 20, 7, 4, 8, 20, 19, 
              5, 4, 7, 8, 9, 19, 19, 4, 8, 7, 16, 5, 8, 5, 8, 1, 6, 24, 4, 2, 
              8, 19, 23, 4, 20, 9, 18, 17, 4, 16}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L///+vvzT7x34gfT6h/juIjjfyegWi+buuPgHTgoEf
QbR+1tG3IPr/csNHYHXNi36C6P0WtudBtL1N+jkQ/f6lzEWwOpuVz0H0/ACd
3/uB9iXcOPrJHmSedeNlkLj/w+e3wfJPpv8G0f2zJP+C9YsGnwOp/2Aptx2k
/vzOwgsg/gXmzCv2QNqh1PoUSNx+u/AnsLovHU9A/P07rT6Azcu/shAsXh/0
AaReYOneWyB6wrcrZ0Dq1l/nB9tTv8b6F0idQWXhMZB8A9+3R2D1in1fQOrq
fTZvA8kHzFx8HezuX7UnwO7rif0JEldQeX0WpP4Cy9fbIHqBHd9DsPtE3t0B
Be2BpVNXWYD8rZf0HCT+YKPPZZA58W89+kD6D+zzBrv7vJPYH5C58g5HXoPD
WUr/PThcT+eD48PeNfQrWP2t1O9g9V5cDAdA4VcNpIHiBY6Gt8H+71n0D6zv
/xIwPd+AowakryGS5QVIfn75s48gPsOS9q/2ABSeKlU=
             "], "LeafValues" -> 
            RawArray["Real32",{0.11954785883426666`, 0.1421845406293869, 
              0.16982501745224, 0.1372612863779068, 
              0.09296810626983643, -0.00256483256816864, \
-0.10651419311761856`, -0.037096016108989716`, 0.11467254161834717`, 
              0.06659303605556488, 
              0.18130294978618622`, -0.1022188812494278, \
-0.02061372995376587, -0.001908242586068809, 
              0.20989477634429932`, -0.035196974873542786`, \
-0.030562015250325203`, 0.12611982226371765`, 0.2178039252758026, 
              0.03060186468064785, 0.13790205121040344`, -0.0274820514023304, 
              0.07780079543590546, 0.18459966778755188`, 0.1577133983373642, 
              0.16625812649726868`, -0.038007061928510666`, 
              0.12078943103551865`, 0.1463819295167923, 
              0.0421355739235878, -0.045280180871486664`, 
              0.056512631475925446`, -0.010927317664027214`, \
-0.04045836627483368, 0.21603287756443024`, 
              0.22640976309776306`, -0.10485002398490906`, \
-0.061935387551784515`, -0.3333233892917633, 0.0732354074716568, 
              0.2020861655473709, 0.20513279736042023`, 0.20253780484199524`, 
              0.20006845891475677`, -0.10173691064119339`, 
              0.03442753106355667, 0.18238452076911926`, 
              0.03435811772942543, -0.2949323058128357, -0.2710995376110077, 
              0.19941075146198273`, 0.08337093144655228, 0.2023564875125885, 
              0.18287290632724762`, 0.06593664735555649, 
              0.21007712185382843`, -0.9266712069511414, \
-0.19382499158382416`, 0.21837908029556274`, -1.5012445449829102`, 
              0.16126367449760437`, 0.20257866382598877`, 
              0.21748283505439758`, 0.1793614774942398}], "Children" -> 
            RawArray["Integer16",{{18, 2}, {17, 3}, {9, 4}, {8, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {31, 13}, {10, 14}, {11, 
              12}, {-3, -12}, {-11, -13}, {-9, -14}, {16, 
              15}, {-15, -16}, {-10, -17}, {49, 19}, {41, 24}, {20, 21}, {30, 
              34}, {23, 22}, {-22, -23}, {-20, -24}, {25, 26}, {38, 35}, {27, 
              28}, {32, 40}, {29, 
              33}, {-27, -30}, {-18, -31}, {-4, -32}, {-25, -33}, {-29, -34}, \
{-21, -35}, {36, 37}, {-26, -37}, {-36, -38}, {39, 
              52}, {-19, -40}, {-28, -41}, {42, 46}, {43, 55}, {44, 
              45}, {-1, -45}, {-44, -46}, {58, 47}, {54, 48}, {-48, -49}, {60,
               50}, {53, 
              51}, {-51, -52}, {-39, -53}, {-50, -54}, {-47, -55}, {56, 
              57}, {-43, -57}, {-56, -58}, {59, 63}, {-42, -60}, {61, 
              62}, {-2, -62}, {-61, -63}, {-59, -64}}], "NominalSplits" -> {},
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{13, 4, 20, 7, 5, 1, 5, 13, 4, 22, 10, 17, 
              22, 14, 21, 9, 16, 1, 2, 2, 8, 7, 7, 7, 1, 5, 2, 7, 3, 1, 1, 24,
               1, 8, 8, 18, 4, 6, 5, 21, 2, 1, 16, 2, 1, 7, 1, 8, 3, 5, 8, 11,
               4, 5, 8, 8, 1, 1, 7, 7, 7, 5}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwA2IgLcDq/cv+/////cGqP/cD6fzkZX9AtP7UG99AdP3U
52Da/9LMLyBa/oDg3/1AfRMKuBkcgPz4G+d+g8TnN3V/B9HvOdhPgc3Rdn8M
UvfgbO9heyC9YJ70PZA98Q/+fQDJ2+vqXgHJH0gSA5tT78j8FmzvY5c3YHt1
Cs+A5A3SZE+A9E/oKbwA0p/P13YbJC7QHf4BxPevZvkEdo+K9xUQ///rzWfB
5qdYgd2r76JzaD+S+fNP5nwGqU/w+foKZO6B14Zgc+Otjz0Hi8/eeRXM753G
cABET7oDCQerCWC+/UTPXyD++o+BYH/wvxV+CQ4XoZJXIPp/gcVHsP2HGK+C
+csNH4Ho85tuXQLR+zVFf4P9zVDOCA4/r+IfYPPP+nwF2//a8xPYv7m2t0Du
qO8TAMcH/ysbcPj6/35+EWxenCGY/s8z5xmY/8vmKUj/h4m7LoL08d+XuAW2
73oPOH78s+1/7AcAKMw6wA==
             "], "LeafValues" -> 
            RawArray["Real32",{0.22182559967041016`, -0.4489648640155792, 
              0.05795600637793541, 0.1893024444580078, 0.15403315424919128`, 
              0.025591962039470673`, -0.02965914085507393, 
              0.034669019281864166`, 0.20214705169200897`, 
              0.14004771411418915`, 0.08463982492685318, 
              0.024684732779860497`, 0.09679486602544785, 0.1649751514196396, 
              0.03736128658056259, 
              0.0113529609516263, -0.007153290789574385, -0.4310532212257385, 
              0.18828512728214264`, -0.029600409790873528`, \
-0.114258773624897, 0.19704532623291016`, 
              0.17437122762203217`, -0.07363858073949814, 
              0.11333773285150528`, 0.029955748468637466`, 
              0.13789117336273193`, 0.20700480043888092`, 
              0.03872767463326454, -0.24428409337997437`, 0.1045098602771759, 
              0.031046096235513687`, 
              0.16291123628616333`, -0.7261786460876465, 0.07467421144247055, 
              0.16571921110153198`, -0.1073613241314888, 0.19149348139762878`,
               0.22205977141857147`, 0.19413036108016968`, 
              0.12940438091754913`, 0.06164057180285454, 
              0.11748522520065308`, -0.021830815821886063`, 
              0.21068324148654938`, 0.20922578871250153`, 0.0741952434182167, 
              0.10096569359302521`, -2.388026475906372, 0.20022177696228027`, 
              0.18998175859451294`, -0.43394234776496887`, 
              0.20832805335521698`, 0.1558235138654709, 
              0.22641700506210327`, -1.4954174757003784`, 0.2053985595703125, 
              0.022308148443698883`, 0.1943308413028717, 0.1750885546207428, 
              0.23278284072875977`, 0.20183031260967255`, 
              0.2036687582731247}], "Children" -> 
            RawArray["Integer16",{{2, 8}, {9, 3}, {17, 4}, {10, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {18, 38}, {47, 12}, {14, 
              11}, {-11, -12}, {29, 13}, {15, 
              16}, {-4, -15}, {-13, -16}, {-14, -17}, {25, 36}, {20, 19}, {33,
               21}, {23, 31}, {22, 28}, {-20, -23}, {35, 24}, {-24, -25}, {27,
               26}, {-26, -27}, {-3, -28}, {-22, -29}, {52, 30}, {-30, -31}, {
              39, 32}, {-32, -33}, {34, 37}, {-19, -35}, {-2, -36}, {49, 
              40}, {-34, -38}, {54, 41}, {-21, -40}, {-37, -41}, {45, 42}, {
              44, 43}, {-43, -44}, {-42, -45}, {46, 60}, {-39, -47}, {48, 
              50}, {61, -49}, {-18, -50}, {51, 
              53}, {-48, -52}, {-10, -53}, {-51, -54}, {55, 57}, {62, 
              56}, {-56, -57}, {59, 
              58}, {-58, -59}, {-55, -60}, {-46, -61}, {-1, -62}, {-9, -63}}],
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
             "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{2, 1, 4, 7, 5, 8, 1, 5, 7, 1, 8, 1, 1, 8, 8,
               20, 13, 4, 7, 7, 7, 4, 8, 4, 5, 5, 2, 2, 8, 5, 24, 6, 5, 7, 7, 
              7, 4, 4, 8, 4, 2, 4, 5, 7, 2, 1, 4, 8, 8, 8, 4, 4, 7, 4, 4, 2, 
              5, 8, 7, 8, 8, 8, 4}], "NumericalThresholds" -> CompressedData["

1:eJxTTMoPSmVkYGCwB+L////L72T9uB9I5wtFPwHR7+sEP4Po/vTqeyA6fsG3
VyBa3u7My/1AfQp1HY/sgfSGe+s/2QPF7Zvav4Dk96u5HQHR9sdr9oPUMUQ1
nQLJ8x81WwvWb8byGST+gMvqkT3YXDkw/4OLPtgc/tTYeyB+Q0XkKxC/PjQN
7K76qM03wPYuuPQCrO/2pl0g8fkBQndA4g4Rx3bZg93l/wEkL39hy2+w/csc
N4DEGWwvfwGLzzN+CxIPCJEAm/P/+JWnYP+99egD0fxd6QfA9viknLNHcsd/
ti3PQPLnc+beAslf4L3/2B4WTiD3p2UsAvH3H897CA6H56vegGmz6Otg+lfx
XxDtz/3/NVj9gUf3QeYbfCvYB3afQhHEvH0aYP8fuLP7KFg8v/0jJJwufQGJ
b5j9/CXYHpeL4PC+/1zlH9j9bJqLweGRwrcJ2R8P1J17QOYETO+/CKIFogof
gv2jMeXbfgBB1ySa
             "], "LeafValues" -> 
            RawArray["Real32",{0.02500845491886139, 0.1131313219666481, 
              0.1520443856716156, 0.010231670923531055`, 
              0.16770592331886292`, -0.10714159160852432`, 
              0.11904943734407425`, -0.038750071078538895`, 
              0.019197413697838783`, -0.03985065966844559, 
              0.11519743502140045`, -0.06317678093910217, 
              0.16105708479881287`, 
              0.24916771054267883`, -0.09694435447454453, 0.0713077038526535, 
              0.17001886665821075`, 0.02445807494223118, 0.14507122337818146`,
               0.22529223561286926`, -0.055109936743974686`, \
-0.028423167765140533`, 0.18991409242153168`, 
              0.08214467018842697, -0.09537344425916672, \
-0.10926675796508789`, 0.10003240406513214`, 0.11476148664951324`, 
              0.014471490867435932`, 
              0.19430962204933167`, -0.08385839313268661, 
              0.19773466885089874`, 0.1907702088356018, 
              0.21227750182151794`, -0.11239421367645264`, 
              0.062463369220495224`, 
              0.1711219698190689, -0.10924653708934784`, 0.0664793998003006, 
              0.015639828518033028`, 0.0015513044781982899`, 
              0.15819527208805084`, 0.02310813218355179, 
              0.16485950350761414`, -0.28115707635879517`, 
              0.09505467116832733, 0.15363606810569763`, 
              0.22295771539211273`, -0.0601666085422039, 
              0.2099940925836563, -0.03058738261461258, \
-0.011201059445738792`, 0.0732036605477333, 
              0.12391664832830429`, -0.17460481822490692`, \
-0.009705773554742336, 0.11940433830022812`, 0.15040223300457, 
              0.035974517464637756`, 0.20519880950450897`, 
              0.13561195135116577`, 0.0745747983455658, 0.21340207755565643`, 
              0.21494917571544647`}], "Children" -> 
            RawArray["Integer16",{{27, 2}, {16, 3}, {4, 5}, {13, 10}, {6, 
              7}, {12, 9}, {8, 15}, {-6, -9}, {-7, -10}, {11, 
              14}, {-5, -12}, {-4, -13}, {20, 41}, {-11, -15}, {-8, -16}, {18,
               17}, {23, 21}, {19, 28}, {40, 46}, {-3, -21}, {22, 
              26}, {-18, -23}, {24, 25}, {-17, -25}, {-24, -26}, {-22, -27}, {
              45, 31}, {30, 29}, {-29, -30}, {-19, -31}, {33, 32}, {42, 53}, {
              35, 34}, {38, 39}, {37, 
              
              36}, {-36, -37}, {-28, -38}, {-34, -39}, {-35, -40}, {-2, -41}, \
{-14, -42}, {44, 43}, {-43, -44}, {-32, -45}, {56, 47}, {-20, -47}, {49, 
              48}, {60, 52}, {50, 51}, {-46, -51}, {-50, -52}, {-49, -53}, {
              54, 55}, {-33, -55}, {-54, -56}, {61, 57}, {59, 
              58}, {-58, -59}, {-57, -60}, {-48, -61}, {63, 
              62}, {-62, -63}, {-1, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{22, 8, 7, 9, 1, 2, 9, 3, 7, 23, 3, 21, 7, 
              14, 12, 4, 18, 15, 7, 8, 5, 8, 6, 3, 7, 5, 5, 7, 5, 20, 5, 2, 7,
               19, 1, 3, 23, 3, 8, 23, 13, 4, 5, 5, 13, 8, 23, 2, 7, 2, 21, 7,
               12, 3, 4, 8, 17, 4, 8}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwBuL///+/X7P0934gvf+M6w8QHR+S8hVEy3tu+wWi7X2Z
voDo+3OZn+0H6lvAF/TIHqS+e9Z/kLj+ov1gdeuvKLwD0y2HboJo/5v7PoH1
NaQvA+mbcKPqI1jfYaA4kK+wUP8hiB+fu/QfSF3+wtnfwfZ+PAPW9//z/Q8g
dQnNKy6D1Pk3M9wHic+34vgINr8v4TmI5v/gchbsbjbNxSD1Dmclf4DUny/2
BPurX/DmPbC831SGAyD1a0vA5vOHW6wHu5fx7G+wv6RunwHbU+IB9o887xSw
+vj9nz+D5AvWHTsBktfPiP0D4jeYMX8H8eWz74PNX/9U7Q3YngXfXoHdvzHn
BkidAKv3L5C6+usLweaeX9YFDrf34Vl/wOHrJQA270Pk308gde+/soD18/O/
/QkOFxmIO/St2W6C/deo8RPsjvffvoH4BsI/PtuD6Kf//oDE+f9nbdsPAI2N
OW0=
             "], "LeafValues" -> 
            RawArray["Real32",{0.20639710128307343`, 0.19498853385448456`, 
              0.17851535975933075`, 0.19087187945842743`, 
              0.015155785717070103`, 
              0.009393731132149696, -0.04619267210364342, 
              0.10582464933395386`, 
              0.22414378821849823`, -0.021600451320409775`, 
              0.08341610431671143, 
              0.10816598683595657`, -0.002337286015972495, 
              0.09986335784196854, 0.21586190164089203`, 
              0.014450881630182266`, 0.08891315758228302, -0.0760401263833046,
               0.2292148470878601, 
              0.06010451167821884, -0.00040370167698711157`, 
              0.12480825930833817`, -0.20426853001117706`, 
              0.04789111763238907, 0.17790107429027557`, 0.1952311396598816, 
              
              0.16218158602714539`, -0.3187706172466278, -0.470465749502182, \
-0.043501708656549454`, 0.09439816325902939, 
              0.018901415169239044`, -0.10178356617689133`, 
              0.17323504388332367`, 0.2046879529953003, 0.10704043507575989`, 
              0.0966678187251091, 0.06782501190900803, 0.20116883516311646`, 
              0.0908544585108757, -1.4242806434631348`, -1.4767907857894897`, 
              0.1997590959072113, 0.0837559700012207, 0.22043858468532562`, 
              0.1360374391078949, -0.017769429832696915`, 0.1725614219903946, 
              0.18982930481433868`, 
              0.12498719245195389`, -0.019787658005952835`, \
-0.026760954409837723`, 0.21747255325317383`, -0.5177225470542908, 
              0.22567278146743774`, 0.22093738615512848`, -0.2137993723154068,
               0.11329412460327148`, 0.20728664100170135`, 
              0.20340609550476074`}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {13, 3}, {9, 4}, {17, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {35, 18}, {33, 10}, {11, 
              12}, {-10, -12}, {-11, -13}, {24, 14}, {15, 38}, {34, 
              16}, {-16, -17}, {30, 23}, {26, 19}, {22, 20}, {25, 
              21}, {-21, -22}, {29, 48}, {-18, -24}, {31, 45}, {-20, -26}, {
              55, 27}, {28, 47}, {-27, -29}, {-19, -30}, {-4, -31}, {51, 
              32}, {-32, -33}, {49, 37}, {-14, -35}, {40, 36}, {52, 
              42}, {-34, -38}, {39, 50}, {-15, -40}, {41, -41}, {59, -42}, {
              44, 43}, {-43, -44}, {-37, -45}, {46, 
              54}, {-25, -47}, {-28, -48}, {-23, -49}, {-3, -50}, {-39, -51}, \
{-2, -52}, {53, 57}, {-36, -54}, {-46, -55}, {56, 
              58}, {-9, -57}, {-53, -58}, {-56, -59}, {-1, -60}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{4, 19, 5, 8, 7, 1, 2, 1, 4, 4, 5, 4, 4, 17, 
              24, 1, 9, 12, 21, 21, 18, 1, 14, 4, 5, 8, 21, 18, 16, 13, 12, 2,
               20, 20, 1, 2, 2, 5, 2, 11, 4, 7, 22, 10, 2, 2, 5, 7, 1, 5, 4, 
              5, 5, 1, 7, 3, 7, 1, 8, 2, 22, 1}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwA+L////3Jyl/3w+k57+a8hdE14uu+gKiz+/R+wii/R1W
g+n/suoQ+sksMG1/y+vTfqA5H453X7cH0goL9R/aA8XlH27/A5Lfb37kF1g9
m8RLkLoNLw98A6k70Or8FazObNNtkPx7viUQc2fqnAWbu6fvO0i9wrxLn0Dq
3kt43wbxEz7nXgbp32Djx+AAFI+/ce43WL/ccbC7/7crHgK730f2Ndj9npNe
g/Q19Ex9CzKH/5rGY7D5m+ZfBOtL9rwF5n9Z8Q2sb//VH2D/8heA3aP/RuUD
WL6s9S6Y/+zCE5B5D/LK34HcccFF8wGIblCZ+BVET2gR+wayZ73Y0g8gdRcm
Sj4HiQfU99wC+/tK3n2QvD+z8j9weG+R/Qmi43eeAPv3QHffX5B8fZ8AOPz8
H8y9Dg6HVbPB/tWXUoCEz+5re8DumcV7H0T3y1b+ArvrtuhxsD1d91+A7ZGD
+Hf9vEfPwf5zZH67HwBZSjpG
             "], "LeafValues" -> 
            RawArray["Real32",{-0.7355665564537048, -0.3016514182090759, 
              0.2075790911912918, 0.21224313974380493`, 0.10756438970565796`, 
              0.0021356274373829365`, -0.05318471044301987, 
              0.014018747955560684`, -0.005858400836586952, \
-0.0025813626125454903`, 0.05724937468767166, 0.1492827832698822, 
              0.046938568353652954`, 0.024498414248228073`, 
              0.13581717014312744`, 
              0.03220159932971001, -0.10566723346710205`, 
              0.015356396324932575`, 0.1922154426574707, 
              0.0024322352837771177`, 0.13185863196849823`, 
              0.19222114980220795`, -0.06705249845981598, 0.1412908285856247, 
              0.21272152662277222`, 0.15151271224021912`, 0.0663696900010109, 
              0.19847702980041504`, -0.057297684252262115`, 
              0.06817056238651276, 0.08385664224624634, -0.9992288947105408, 
              0.1371738612651825, 0.11821042746305466`, 0.04235682263970375, 
              0.16946052014827728`, 0.05363738164305687, 
              0.2033386081457138, -0.13153977692127228`, \
-0.23280958831310272`, 0.0672992691397667, 0.04696108400821686, 
              0.2153884470462799, 0.1522548794746399, 
              0.20834669470787048`, -0.9494580626487732, 0.07434775680303574, 
              0.15760183334350586`, 0.16871920228004456`, 0.2051336020231247, 
              0.21389353275299072`, -0.0235822144895792, 0.1573266088962555, 
              0.18965469300746918`, 0.2046252340078354, 
              0.16025440394878387`, -0.6388933062553406, 0.219425767660141, 
              0.2096090167760849, 0.21049073338508606`, 0.22649599611759186`, 
              0.24786660075187683`, 0.20157824456691742`}], "Children" -> 
            RawArray["Integer16",{{12, 2}, {23, 3}, {11, 4}, {8, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {9, 10}, {-4, -10}, {-9, -11}, {25, 
              13}, {24, 15}, {16, 14}, {-14, -15}, {17, 31}, {-12, -17}, {18, 
              19}, {22, 33}, {21, 20}, {-20, -21}, {-18, -22}, {-13, -23}, {
              34, 44}, {48, 27}, {47, 26}, {-26, -27}, {29, 28}, {40, 30}, {
              43, 38}, {-29, -31}, {55, 32}, {-32, 39}, {-19, -34}, {41, 
              35}, {37, 
              36}, {-36, -37}, {-35, -38}, {-30, -39}, {-33, -40}, {-28, \
-41}, {42, 59}, {-2, -43}, {-25, -44}, {53, 45}, {61, 
              46}, {-46, -47}, {-3, -48}, {49, 51}, {50, 62}, {-1, -51}, {58, 
              52}, {-52, -53}, {54, 60}, {-24, -55}, {57, 
              56}, {-56, -57}, {-16, -58}, {-49, -59}, {-42, -60}, {-54, \
-61}, {-45, -62}, {-50, -63}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{2, 10, 1, 4, 14, 7, 22, 2, 4, 1, 17, 19, 23,
               15, 17, 9, 19, 13, 5, 7, 4, 5, 4, 15, 2, 5, 8, 7, 9, 5, 5, 4, 
              3, 2, 7, 5, 7, 7, 8, 5, 5, 23, 1, 14, 1, 23, 5, 1, 1, 2, 8, 8, 
              1, 7, 6, 8, 8, 4, 4, 4, 4, 7}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwA+L////3B3/8vh/Ib1hx/Jc9kL//YsnP/UA63mvKD5C4
gv/G3/ZAOsBy6TeQ/P+Fc/6D5PnZDv4B0fLSLL9B9Pwn03+D1Ad0ztkIUpef
8fkQSNw+w/gcmN4u/Akkn3Da8gFInl/478f9MHVAcYeG3+9A9jxYyHQfJC//
8cwnkLy+f/htEO0vZX0ZbE6lBti8fjFOsDvsuQN2gdUl914CmcNgo3QQbP8m
wydgd7ba/gLR5xvdnoHkDd4e+gGSj79xDuxued4pDAeA9P3nKv/2A7UfWDp1
lQWQvz5GcTlI/YUzk5aD1PeniNeC/ZnCtwlE16++PA+s/2jmYxC9/yAzOLwW
WF57DFL/3jsD7O7z4cLfwPQvA4j7HgttAMnPP3kO7K79n6+D3WHvGvoV7I+M
WHC4/tfd8hZsz/lL10D6BJbuvQUOf1O+v+Bwnt5/ERReAlGFD8Hh9jf7FFhe
YwrYvv4k5e9g8zjPnALzI5hO7wcAF1c6SQ==
             "], "LeafValues" -> 
            RawArray["Real32",{
              0.2034541666507721, -0.10720329731702805`, \
-0.49382948875427246`, 0.15399573743343353`, -0.022339604794979095`, 
              0.1006651297211647, 0.0312543623149395, 0.12918251752853394`, 
              0.10524793714284897`, 0.07803905755281448, 
              0.14367875456809998`, -0.014209762215614319`, 
              0.10482344776391983`, -0.03140150383114815, 
              0.120665043592453, -0.020491689443588257`, 0.1389472484588623, 
              0.2066011279821396, 0.21460792422294617`, 0.1548338085412979, 
              0.02873939275741577, -0.05257244035601616, 
              0.12646730244159698`, -0.15720954537391663`, 
              0.041707027703523636`, 0.02152162976562977, 
              0.19821186363697052`, -0.0727250725030899, \
-0.04401027411222458, -0.030306817963719368`, -0.0744236558675766, 
              0.07690904289484024, 0.08681712299585342, -1.3833236694335938`, 
              0.10925303399562836`, 0.20348979532718658`, -0.5252311825752258,
               0.1529150754213333, 0.10002148896455765`, -0.06580085307359695,
               0.18495066463947296`, -0.04942480847239494, 
              0.08369998633861542, 0.1987195760011673, 0.13335645198822021`, 
              0.10445470362901688`, -0.04787352308630943, 
              0.16949456930160522`, -0.032894786447286606`, \
-0.6230878233909607, 0.10442235320806503`, 
              0.1575877070426941, -0.00753150787204504, 0.22088950872421265`, 
              0.21387949585914612`, 0.20609736442565918`, 
              0.22886113822460175`, 0.20718702673912048`, -0.0287568811327219,
               0.1903952658176422, -1.1466542482376099`, 0.21856217086315155`,
               0.2160523235797882}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {3, 7}, {10, 4}, {9, 5}, {6, 
              24}, {-5, -7}, {33, 18}, {34, 14}, {32, 25}, {49, 11}, {13, 
              12}, {-12, -13}, {-11, -14}, {15, 16}, {42, 30}, {17, 26}, {29, 
              44}, {19, 22}, {20, 21}, {-8, -21}, {-20, -22}, {52, 
              23}, {-23, -24}, {-6, -25}, {-10, -26}, {27, 
              28}, {-17, -28}, {-27, -29}, {-15, -30}, {35, 
              31}, {-31, -32}, {-4, -33}, {48, 45}, {56, 36}, {-16, -36}, {37,
               38}, {41, 54}, {40, 39}, {-39, -40}, {-37, -41}, {-35, -42}, {
              53, 43}, {-43, -44}, {-18, -45}, {46, 
              47}, {-34, -47}, {-46, -48}, {-3, 55}, {51, 
              50}, {-50, -51}, {-2, -52}, {-19, -53}, {-9, -54}, {-38, -55}, \
{-49, -56}, {59, 57}, {58, 62}, {-57, -59}, {60, 
              61}, {-1, -61}, {-60, -62}, {-58, -63}}], "NominalSplits" -> {},
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{1, 9, 2, 4, 5, 7, 7, 8, 2, 2, 8, 4, 4, 7, 6,
               15, 5, 3, 16, 4, 5, 2, 5, 1, 1, 19, 2, 2, 2, 20, 24, 17, 13, 4,
               7, 8, 18, 7, 4, 2, 3, 2, 4, 2, 5, 8, 4, 5, 13, 21, 2, 5, 17, 2,
               9, 8, 6, 11, 14, 8, 7, 2, 11}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB2IgbfCd/av9////82dL/d0P5B9QP/XBHkgrLLj0AkQ3
8H17BKILngQ9Aanzd1j9cT+Q7rf/8wWkfoJOyk6Q/Ia8OXdA8vbHa/aD5ONZ
e66B6POVKi9AdD5f222w+WqMb0Dq+g+Y3QaJ15/1+Qqi93fP+g+WTxJjcACJ
N8wE2/P/1MYHIPEG9n/nQPriF3x7BRJff33zUxDNb914GUxPOPcJbN8LDoh4
EcNvsL3G+z6A6VMt70C0/L/WuyDzDPS5roDcnbCu4Q6IZshv/wgyX96x9wfY
XeVuL8H+6J3GcABk7tqc7yC+/uzXj8HmXdVaDOYHC4Ll5XeyQsKFVRgsv96Q
6RfYPTsLL4Bo/4On5oHp45VbQPY7RBzbBbJv/xInsD3rxYTA5uhHtj0Duz/y
9HOQug2np34G+1vc6DVI/P6pt5dA9Py/LH9A8h/WVBwAuf+A688f4Pha538X
pL7+8xGwOfFGXuDwOm8hBFavICXK4AAAusw3Dg==
             "], "LeafValues" -> 
            RawArray["Real32",{
              0.18313749134540558`, -0.9030166864395142, \
-0.08617717772722244, -0.23422348499298096`, 0.1700560301542282, 
              0.06696197390556335, -0.008226971141994, -0.009797685779631138, \
-0.005614485591650009, -0.0387025848031044, 
              0.06329289078712463, -0.11933894455432892`, 
              0.15559668838977814`, 0.03617505729198456, -0.05893376097083092,
               0.005008922424167395, -0.08602582663297653, 
              0.16991060972213745`, 0.19767779111862183`, -4.483515739440918, 
              0.12862497568130493`, 0.14330007135868073`, 
              0.19170863926410675`, -0.012398690916597843`, \
-0.006545539945363998, -0.0803472176194191, 0.0115674352273345, 
              0.13001665472984314`, 
              0.1578272432088852, -0.014234703034162521`, 
              0.0022496648598462343`, 0.060181573033332825`, 
              0.19764848053455353`, 0.18003754317760468`, 
              0.09863723069429398, -0.23203817009925842`, -0.644373893737793, \
-1.068947434425354, -0.03175339102745056, 0.031351685523986816`, 
              0.21826235949993134`, 0.14614953100681305`, 
              0.0052679311484098434`, 0.20011907815933228`, 
              0.18865413963794708`, 0.20131148397922516`, 0.202356219291687, 
              0.20185843110084534`, 0.22081917524337769`, 
              0.11272864043712616`, -0.03421707823872566, 
              0.20192831754684448`, -0.051721733063459396`, \
-1.4973640441894531`, 0.1350732445716858, 0.21557553112506866`, 
              0.18841329216957092`, 
              0.20105387270450592`, -0.09277968853712082, 0.09016460180282593,
               0.2013295292854309, 0.20429222285747528`, 0.2025023251771927, 
              0.20146922767162323`}], "Children" -> 
            RawArray["Integer16",{{2, 18}, {19, 3}, {4, 11}, {5, 8}, {6, 
              7}, {-3, -7}, {-6, -8}, {9, 10}, {-5, -10}, {-9, -11}, {13, 
              12}, {15, 14}, {17, 
              16}, {-13, -15}, {-12, -16}, {-14, -17}, {-4, -18}, {44, 26}, {
              20, 37}, {21, 22}, {25, 48}, {23, 
              24}, {-21, -24}, {-23, -25}, {-1, -26}, {27, 28}, {38, 34}, {32,
               29}, {30, 31}, {-29, -31}, {-30, -32}, {33, 49}, {-27, -34}, {
              35, 36}, {-28, -36}, {-35, -37}, {56, 39}, {42, 43}, {41, 
              40}, {-40, -41}, {-38, -42}, {-19, -43}, {-39, -44}, {45, 50}, {
              46, 60}, {47, 63}, {-2, -48}, {-22, -49}, {-33, -50}, {53, 
              51}, {55, 52}, {-52, -53}, {59, 54}, {-54, -55}, {-51, -56}, {
              57, 58}, {-20, -58}, {-57, -59}, {-45, -60}, {62, 
              61}, {-61, -62}, {-46, -63}, {-47, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{5, 7, 4, 2, 1, 8, 15, 8, 4, 4, 4, 20, 22, 
              12, 5, 15, 10, 15, 15, 12, 17, 8, 1, 1, 22, 8, 2, 7, 7, 20, 11, 
              11, 22, 4, 1, 8, 15, 8, 21, 8, 22, 5, 7, 7, 9, 2, 2, 7, 7, 4, 4,
               7, 13, 8, 1, 2, 2, 7, 2, 20}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwAeL////7Oy74tR9I5x+4+gNE66spfAXR8eJGr0E0/+6G
NyD6/+f7H0C0/V2d72Dx0J47YFqU7QCI3n/zJpi/3/wI2Lx6/S9vweb15W0B
8wOXfgTR86Xz/u4H2i8Q0PjCHkgf0PTZZg8yd8vXFyD5+3c0NoHtc2P8BKaZ
F34G0+2Kh0D6LqiogNXn5/oeBfEfNAk+APHlu5zA7tNvDrgCVn9i0UWwe1wD
VoH5Qsl7wfzf7WB3+E/bDTa/X/VoD9i/N879Bpm34Kf0fbB5hm2PwO7+1vsP
TPuUL4bQsuBwqV/2eTVI/Qbn11dA6v2ZlcHq3nOy/ga7Y9H+XyD5A4/XPwLJ
37ddAQ4X/ZKJ00DiCf1+B+zB5m3eBjavT+APiJaXZgG7w2AZ1wNQ+Gz4IvgP
RBt8K9gHUn9+F8MZkHzD/RmvwOF3TPUNiC54fuQUSJ6f7eAfkHxBRugzewDI
XjcX
             "], "LeafValues" -> 
            RawArray["Real32",{0.1978747397661209, 0.13671591877937317`, 
              0.17370164394378662`, -0.11885202676057816`, 
              0.08287377655506134, 0.00865725427865982, -0.06101345270872116, 
              0.00553876394405961, 0.12454304844141006`, 
              0.1287534534931183, -0.04154978320002556, -0.02350291982293129, 
              0.07634951174259186, 0.12701496481895447`, -0.01260063610970974,
               0.028770705685019493`, -1.4108022451400757`, 
              0.032845523208379745`, 0.1471829116344452, 0.1898856908082962, 
              0.05676114186644554, -0.04327475279569626, -1.2704111337661743`,
               0.2104301005601883, -0.06012414023280144, 
              0.1820489913225174, -0.16251814365386963`, 
              0.1819225549697876, -0.133411705493927, 
              0.15888835489749908`, -0.018975388258695602`, \
-0.020498167723417282`, 0.005815169773995876, 0.17532750964164734`, 
              0.11896815896034241`, 0.19831770658493042`, 
              0.03829963505268097, -0.039996229112148285`, \
-0.05066791921854019, 0.05528636276721954, 0.19579094648361206`, 
              0.19987399876117706`, -8.490145683288574, -0.009547516703605652,
               0.08754220604896545, 0.2633660137653351, 0.20173440873622894`, 
              0.2156304121017456, 0.2233252227306366, 0.0677349865436554, 
              0.12379637360572815`, 0.19409485161304474`, 0.2338811606168747, 
              0.20531414449214935`, 
              0.2008708417415619, -6.117096900939941, -0.024147529155015945`, 
              0.19064518809318542`, 0.22115585207939148`, 0.2049654722213745, 
              0.2022937685251236}], "Children" -> 
            RawArray["Integer16",{{15, 2}, {16, 3}, {11, 4}, {8, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {9, 10}, {-4, -10}, {-9, -11}, {34, 
              12}, {13, 14}, {-12, -14}, {-13, -15}, {42, 22}, {17, 31}, {18, 
              19}, {41, 32}, {21, 20}, {-20, -21}, {-18, -22}, {23, 24}, {25, 
              35}, {37, 27}, {26, 30}, {-16, -27}, {29, 
              28}, {-28, -29}, {-25, -30}, {-26, -31}, {-17, 
              33}, {-19, -33}, {51, 43}, {50, 39}, {36, 52}, {-24, -37}, {38, 
              40}, {-23, -39}, {-35, -40}, {-38, -41}, {-2, -42}, {53, 
              44}, {-34, -44}, {45, 47}, {46, 59}, {-43, -47}, {48, 
              49}, {-45, -49}, {-48, -50}, {-3, -51}, {-32, -52}, {-36, -53}, \
{56, 54}, {60, 55}, {-55, -56}, {58, 
              57}, {-57, -58}, {-1, -59}, {-46, -60}, {-54, -61}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{5, 4, 2, 8, 1, 7, 5, 5, 5, 5, 18, 4, 8, 7, 
              4, 2, 24, 1, 7, 8, 7, 1, 1, 8, 2, 7, 2, 2, 2, 5, 2, 5, 24, 11, 
              22, 9, 13, 18, 8, 7, 16, 3, 8, 24, 2, 7, 8, 2, 2, 5, 22, 4, 2, 
              12, 7, 13, 2, 6, 2, 2, 2}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwBeL////Lv1n/eT+Qts85/QRE+09e9gpE83ddBfPtPfhf
gMULqh7tB+orWFN61R5IL9h5aI09SB07E1h8w1yXByBxhav1T0H0hHds50Dy
8l1OH8DmlcV8Bqlb4JR5GSR+PiroF0g8v8/1I4iOD1R4AJI3eOwO1n/gVup3
e5i9QLr+/KVrcBoo71BqfQqkzuCHwxGwPQ5XT4Dk51+W3Qai/1enfd4P9OKB
pVNXWYDkDwj+Bdt3o/QBiO4XvHkPZA5DYfAHsDnM/U9A9IPPAY/A/vpl+Qxs
X9uOGyB1E5YknAfJf/j8COx+/UX7we5/b+N+BhxO7c+eg9Uf+PIdTO+5/h4s
72N8FESf97kGlpc3bAP753141h8w/8KW3+DwZVb+B6L3+9SDw8lAUO4P2J6S
idPA6tM/vAC7I0D3ODhc7FoPg92f8Y/DAeQvqT6w/vvPVf6BxBvuz3gFUrf/
g+/P/QDqaC1p
             "], "LeafValues" -> 
            RawArray["Real32",{-0.6000951528549194, 0.15237286686897278`, 
              0.1944490671157837, 0.1703973263502121, 0.1984546184539795, 
              0.04443705081939697, -0.07976921647787094, \
-0.0015495102852582932`, -0.06970427185297012, -0.1595562994480133, 
              0.03287293016910553, -0.06245585158467293, 
              0.10792074352502823`, -0.050920892506837845`, 
              0.04072388634085655, -0.047053489834070206`, \
-0.06328389048576355, 0.10986211895942688`, 0.12935969233512878`, 
              0.20555193722248077`, 0.22113895416259766`, 
              0.14841918647289276`, 0.20295663177967072`, 
              0.004073325544595718, -0.05385471135377884, 
              0.06474294513463974, -0.1077481210231781, \
-0.14190606772899628`, -0.051472824066877365`, -0.01538581307977438, 
              0.009478013031184673, -0.0011329487897455692`, 
              0.117216557264328, 0.1530296802520752, 0.20235110819339752`, 
              0.1604388952255249, 0.15823565423488617`, 0.04971347749233246, 
              0.12434109300374985`, 0.1139475628733635, 0.511215090751648, 
              0.9008975028991699, -0.036387424916028976`, \
-0.006422867998480797, 0.08282691240310669, 
              0.20636840164661407`, -0.02150546945631504, -0.0938144102692604,
               5.266815662384033, 1.372784972190857, 0.06848164647817612, 
              0.04993567615747452, 0.17181965708732605`, 0.1505904197692871, 
              0.008598580956459045, 0.2109651416540146, 
              0.7329883575439453, -0.2491193413734436, 0.20628707110881805`, 
              0.25510579347610474`, 0.1527187079191208, 
              0.32496461272239685`}], "Children" -> 
            RawArray["Integer16",{{30, 2}, {17, 3}, {4, 5}, {8, 14}, {6, 9}, {
              7, 10}, {-4, -8}, {32, 12}, {13, 
              11}, {-7, -11}, {-10, -12}, {-9, -13}, {-6, -14}, {15, 
              16}, {-5, -16}, {-15, -17}, {18, 21}, {19, 20}, {31, 39}, {28, 
              29}, {22, 23}, {27, 25}, {24, 
              26}, {-22, -25}, {-23, -26}, {-24, -27}, {-18, -28}, {-19, \
-29}, {-21, -30}, {40, 33}, {-2, -32}, {-3, -33}, {35, 34}, {45, 51}, {37, 
              36}, {44, 43}, {38, 42}, {-31, -39}, {-20, -40}, {41, 50}, {56, 
              48}, {-38, -43}, {-37, -44}, {-36, -45}, {47, 
              46}, {-46, -47}, {-34, -48}, {-42, 49}, {-49, -50}, {58, 53}, {
              57, 52}, {-52, -53}, {55, 54}, {-54, -55}, {-51, -56}, {-1, 
              59}, {-35, -58}, {61, 60}, {-57, -60}, {-59, -61}, {-41, -62}}],
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
             "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{10, 8, 7, 2, 1, 4, 1, 8, 2, 7, 1, 14, 22, 
              21, 12, 7, 23, 3, 4, 5, 5, 7, 8, 4, 7, 8, 2, 4, 10, 7, 8, 8, 7, 
              1, 7, 19, 1, 5, 1, 1, 10, 1, 3, 9, 11, 2, 6, 5, 1, 13, 4, 14, 6,
               16, 11, 2, 2, 5}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwAmIgnRC66K/9////45sX/dwPpN8Lb/sOovtfeH0D0fG7
l4DpfGGzLyB6v6bobxAtP23rH7D68Cwwfb7YEyw+/4LaFRCtv7vr8X6g+QpH
qxaCzOff6X4DrD8piOEAkF5//cousPnfej+DzVc/+AlEr084+gFszvWu1yCa
f0fTKTA/1A/Ml7c78xKs/vK7m2B3hqceAtH3s2cvB9lX0O32xR5Ib5j9/CWI
nnB78jMQ7SDy7g7IHf0/pf6B3efSfBWsP736HthdF0vA/rf3EgD7x99KaBHY
f7ZHv4LN39V1FGT+AXemLSBzzu9iOAPiJzCuuwa2R+jEJZC4PO8UsP/6ZYUZ
DgDFDbynMjgA6YY5c/+A5P+b8v0F+0c6D0yfDxcGh+97RonLILq+YeZHMJ1g
8gFk/oWZ/A/B/nFN+wiiH2ya9xdEf7hy9z+ILvg8F2y+wfrorfYAPcYj5g==

             "], "LeafValues" -> 
            RawArray["Real32",{0.21265915036201477`, -0.5751333832740784, 
              0.5485765337944031, 0.07002677023410797, 0.10763677209615707`, 
              0.019535716623067856`, -0.027661573141813278`, 
              0.025817982852458954`, 
              0.17693686485290527`, -0.02529967576265335, 0.1622476875782013, 
              0.03775664046406746, 0.013246120885014534`, 0.07594108581542969,
               0.0095280846580863, -0.4795425534248352, 0.1950296312570572, 
              0.16591164469718933`, 0.025752175599336624`, 0.2277512550354004,
               0.16616076231002808`, 0.07686423510313034, 
              0.13119007647037506`, -0.1448374092578888, 0.009127791970968246,
               0.15022355318069458`, -0.13563647866249084`, 
              0.2244977205991745, -0.25147292017936707`, -0.09842609614133835,
               0.13449256122112274`, 0.04844948649406433, 
              0.19228258728981018`, 0.020502246916294098`, 0.2082032710313797,
               0.07555735856294632, 0.1529591679573059, 0.14888019859790802`, 
              0.1943831443786621, 0.21617956459522247`, 0.0529925599694252, 
              0.028113309293985367`, -0.17639704048633575`, \
-0.795094907283783, 0.11390575766563416`, -0.2584218382835388, 
              0.11141979694366455`, 0.19248296320438385`, 
              0.17339716851711273`, 
              0.22226056456565857`, -0.36680489778518677`, 
              0.06858575344085693, 0.2407885491847992, 0.20882567763328552`, 
              0.0034014990087598562`, 
              0.22067564725875854`, -0.39187151193618774`, 0.2048412710428238,
               0.1696520894765854}], "Children" -> 
            RawArray["Integer16",{{2, 15}, {8, 3}, {10, 4}, {9, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {31, 16}, {30, 11}, {35, 
              12}, {-10, -12}, {14, 13}, {-13, -14}, {-11, -15}, {34, 19}, {
              27, 17}, {41, 18}, {-18, -19}, {21, 20}, {32, 22}, {25, 51}, {
              24, 23}, {-23, -24}, {-21, -25}, {37, 26}, {-26, -27}, {29, 
              28}, {-28, -29}, {-9, -30}, {-4, -31}, {56, 38}, {46, 
              33}, {-33, -34}, {45, 42}, {48, 36}, {-36, -37}, {-16, -38}, {
              39, 40}, {-32, -40}, {-39, -41}, {-17, -42}, {49, 43}, {47, 
              44}, {-44, -45}, {-2, 53}, {-20, -47}, {-43, -48}, {-3, -49}, {
              50, 54}, {-35, -51}, {55, 
              52}, {-52, -53}, {-46, -54}, {-50, -55}, {-22, -56}, {58, 
              57}, {-57, -58}, {-1, -59}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{9, 22, 19, 5, 4, 2, 4, 19, 22, 2, 2, 1, 6, 
              8, 7, 5, 4, 9, 5, 11, 14, 10, 5, 4, 2, 5, 4, 2, 2, 13, 8, 17, 1,
               1, 21, 8, 8, 17, 4, 7, 22, 8, 15, 1, 4, 10, 12, 2, 1, 10, 8, 5,
               21, 22, 6, 17, 10, 5, 1, 1, 4}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwBeL////vDzj5cz+Q9pdX/A6i+6+/+wqi36t8AtP6G7e9
BdHxDpKfwXwFm18gmj9U6B+Inm8s9R8sX+/6fT/Q3At7JV7ag8QvqF0BiZ/f
eukZ2PzgP2D99ilWX8D2CN68B+YzvLwM1v9VBWzOfOm8v2D103Z/AsvXNh4G
mRvwb+pnkLn859o+gtWpGn8CiW/w5LhnD6QXHEycBpKvT9TdBTZ/yuULIPkJ
862+guQfSPgxOIDsmRNyFyT+4OA0MP98uPA3kPr6sow7IFp+8RSGAyD9Gu5g
f963uPwOTE/lZwKJ1xvUfADbH+r3GkT/XzgH7O76mLj3YLqXFSz/v24yWN/6
Fu1l4HCTuf8SZK9ASPFjkDvPX3VYDVZXmnMfJF7w/wfYf/VTlv8GmyO6ChxO
6z8Ggs1bvyYY7O//pnx/Qeod7K/8BPlLQHLBf3sk9fkPZj4Ch7tY1wNwPBpp
HdkPAFJ8SnY=
             "], "LeafValues" -> 
            RawArray["Real32",{0.20522935688495636`, -0.83082115650177, 
              0.1277199536561966, 0.17666292190551758`, 0.061315178871154785`,
               
              0.014802678488194942`, -0.03775256127119064, \
-0.00041320009040646255`, -0.00402839807793498, 0.15717953443527222`, 
              0.007750126998871565, 0.08474212139844894, 0.18067404627799988`,
               0.1901751309633255, 0.1225019171833992, 0.010638879612088203`, 
              0.10118629783391953`, -0.11607302725315094`, 
              0.16602511703968048`, 0.12265796214342117`, 
              0.019928598776459694`, 0.06257534772157669, -0.2533129155635834,
               0.020401643589138985`, -0.011202400550246239`, 
              0.11890476942062378`, 0.15735885500907898`, 0.2093411087989807, 
              0.0051768990233540535`, 0.17703880369663239`, 
              0.15064096450805664`, -0.23795951902866364`, 
              0.13680437207221985`, -0.10173027217388153`, 
              0.026743443682789803`, 0.1588679850101471, 0.21892839670181274`,
               0.062260594218969345`, -0.3078533113002777, 
              0.08281348645687103, -0.13173027336597443`, -0.7289301753044128,
               0.2121414989233017, 0.15281304717063904`, 
              0.07687947154045105, -0.1064675897359848, 
              0.10295572876930237`, -1.6146899461746216`, 
              0.09897055476903915, -0.025702230632305145`, \
-0.30084383487701416`, -0.28295302391052246`, 0.13700982928276062`, 
              0.22932341694831848`, -0.8336352109909058, 0.1885950267314911, 
              0.20997749269008636`, -0.30500513315200806`, 
              0.10301922261714935`, 0.004498797468841076, 
              0.17858260869979858`, 0.15722376108169556`}], "Children" -> 
            RawArray["Integer16",{{18, 2}, {9, 3}, {8, 4}, {19, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {30, 10}, {33, 13}, {12, 
              11}, {-11, -12}, {-9, -13}, {16, 14}, {21, 15}, {-15, -16}, {38,
               17}, {-17, -18}, {32, 22}, {48, 20}, {-20, -21}, {-14, -22}, {
              23, 28}, {27, 24}, {26, 25}, {-25, -26}, {-24, -27}, {34, 52}, {
              56, 29}, {31, 49}, {37, 50}, {-29, -32}, {36, 53}, {40, 
              35}, {-19, -35}, {55, 39}, {46, 
              43}, {-3, -38}, {-10, -39}, {-36, -40}, {42, 
              41}, {-41, -42}, {-2, -43}, {45, 44}, {-44, -45}, {-37, -46}, {
              51, 47}, {-47, -48}, {-4, -49}, {-30, -50}, {-31, -51}, {-1, \
-52}, {-28, -53}, {54, 59}, {57, -55}, {-34, -56}, {-23, 
              58}, {-33, -58}, {-57, -59}, {61, 60}, {-60, -61}, {-54, -62}}],
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
             "NominalNodeNumber" -> 0|>]}, "ClassNumber" -> 2, 
        "IterationsNumber" -> 50, "Processor" -> 
        MachineLearning`MLProcessor[
         "Sequence", <|
          "Input" -> <|
            "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
           "Output" -> <|
            "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
           "Processors" -> {
             MachineLearning`MLProcessor[
             "DensifyNumericalVector", <|
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
               "StructurePreserving" -> True, 
               "Input" -> <|
                "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
               "Version" -> {13., 1}, "ID" -> 6203373351504339791, 
               "Output" -> <|
                "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
             MachineLearning`MLProcessor[
             "FirstValues", <|
              "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
               "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
               False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
           "Perfect", "StructurePreserving" -> False, "Missing" -> 
           "Allowed"|>], "Calibrator" -> None, "Method" -> 
        "GradientBoostedTrees", "PostProcessor" -> 
        MachineLearning`MLProcessor["Identity"], 
        "Options" -> <|
         "BoostingMethod" -> <|"Value" -> "Gradient", "Options" -> <||>|>, 
          MaxTrainingRounds -> <|"Value" -> 50, "Options" -> <||>|>, 
          "LeavesNumber" -> <|"Value" -> 110, "Options" -> <||>|>, 
          "LearningRate" -> <|"Value" -> 0.2, "Options" -> <||>|>, 
          ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
          "MaxBinNumber" -> <|"Value" -> 255, "Options" -> <||>|>, 
          "ThreadNumber" -> <|"Value" -> 8, "Options" -> <||>|>, 
          "MaxDepth" -> <|"Value" -> 6, "Options" -> <||>|>, 
          "LeafSize" -> <|"Value" -> 15, "Options" -> <||>|>, 
          "FeatureFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
          "BaggingFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
          "BaggingFrequency" -> <|"Value" -> 0, "Options" -> <||>|>, 
          "MinGainToSplit" -> <|"Value" -> 0, "Options" -> <||>|>, 
          "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
          "L2Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
          "LossFunction" -> <|"Value" -> Automatic, "Options" -> <||>|>|>|>, 
      "TrainingInformation" -> <|
       "PanelCell" -> CellObject[427521], "TrainingFunction" -> Classify, 
        "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
        "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
        9.335587`7.42168662406666, "LossName" -> "MeanCrossEntropy", 
        "BestModelInformation" -> 
        Dataset[<|
          "MeanCrossEntropy" -> 
           Around[0.10598766791788199`, 0.0010070169250233456`], "Accuracy" -> 
           Around[0.9695352321815662, 0.0006479908017076471], 
           "EvaluationTime" -> 8.059614258541611*^-6, "TestSize" -> 70300, 
           "ModelMemory" -> 212984, "ModelUtility" -> 1.5493558501087152`, 
           "TrainingSize" -> 800000, "TrainingTime" -> 1.9952623149688797`, 
           "TrainingMemory" -> 627274272, "ExperimentCount" -> 1, 
           "MeanCrossEntropyHistory" -> {
             Around[0.10598766791788199`, 0.0010070169250233456`]}, 
           "AccuracyHistory" -> {
             Around[0.9695352321815662, 0.0006479908017076471]}, 
           "Configuration" -> {
            "GradientBoostedTrees", "BoostingMethod" -> "Gradient", 
             MaxTrainingRounds -> 50, "LeavesNumber" -> 110, "LearningRate" -> 
             0.2, ValidationSet -> Automatic, "MaxBinNumber" -> 255, 
             "ThreadNumber" -> 8, "MaxDepth" -> 6, "LeafSize" -> 15, 
             "FeatureFraction" -> 1, "BaggingFraction" -> 1, 
             "BaggingFrequency" -> 0, "MinGainToSplit" -> 0, 
             "L1Regularization" -> 0, "L2Regularization" -> 0, "LossFunction" -> 
             Automatic}, "FinalTrainingSize" -> 1000000|>, 
          
          TypeSystem`Struct[{
           "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
            "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
            "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
            "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[TypeSystem`AnyType, 1], 
            TypeSystem`Vector[TypeSystem`AnyType, 1], 
            TypeSystem`Vector[TypeSystem`AnyType, 17], 
            TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
        Dataset[<|<|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 0.1|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.6976349910606692, 0.0033359930839772876`], 
                "Accuracy" -> Around[0.5410064454139645, 0.01565724451166245],
                 "EvaluationTime" -> 7.560511183089043*^-6, "TestSize" -> 
                2000, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.33405116158669834`, "TrainingSize" -> 
                1500, "TrainingTime" -> 0.1, "TrainingMemory" -> 1232616, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.6976349910606692, 0.0023589033316717637`]}, 
                "AccuracyHistory" -> {
                  Around[0.5410064454139645, 0.01107134376889237]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 7.560511183089043*^-6, "MeanCrossEntropy" -> 
               Around[0.6976349910606692, 0.0033359930839772876`], 
               "ModelMemory" -> 9088, "TrainingMemory" -> 1232616, 
               "TrainingTime" -> 66.76666666666667|>, "Index" -> 1|>, <|
            "Value" -> "NaiveBayes", 
             "Options" -> <|
              "SmoothingParameter" -> <|"Value" -> 0.2|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[1.434719600072037, 0.13136391335001846`], "Accuracy" -> 
                Around[0.808212445724582, 0.013424906211069393`], 
                "EvaluationTime" -> 0.00008440258867053434, "TestSize" -> 
                1700, "ModelMemory" -> 163872, 
                "ModelUtility" -> -1.0722885100930613`, "TrainingSize" -> 
                7000, "TrainingTime" -> 0.5011872336272722, "TrainingMemory" -> 
                20504872, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.434719600072037, 0.09288831393300008]}, 
                "AccuracyHistory" -> {
                  Around[0.808212445724582, 0.009492842218640567]}|>, <|
               "MeanCrossEntropy" -> 
                Around[1.5346368735302804`, 0.21993543111906663`], "Accuracy" -> 
                Around[0.7642556422119232, 0.02428552324884886], 
                "EvaluationTime" -> 0.00027698578149339766`, "TestSize" -> 
                300, "ModelMemory" -> 118048, 
                "ModelUtility" -> -1.1497210050615363`, "TrainingSize" -> 
                1500, "TrainingTime" -> 0.1, "TrainingMemory" -> 4474672, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.5346368735302804`, 0.21993543111906663`]}, 
                "AccuracyHistory" -> {
                  Around[0.7642556422119232, 0.02428552324884886]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 0.00027698578149339766`, "MeanCrossEntropy" -> 
               Around[1.5346368735302804`, 0.21993543111906663`], 
               "ModelMemory" -> 118048, "TrainingMemory" -> 4474672, 
               "TrainingTime" -> 67.16785390029395|>, "Index" -> 2|>, <|
            "Value" -> "DecisionTree", 
             "Options" -> <|
              "DistributionSmoothing" -> <|"Value" -> 1|>, 
               "FeatureFraction" -> <|"Value" -> 1|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.21378928136456082`, 0.004213767763957583], 
                "Accuracy" -> 
                Around[0.9346549613748081, 0.0013487659250778015`], 
                "EvaluationTime" -> 6.3292656292715014`*^-6, "TestSize" -> 
                67100, "ModelMemory" -> 30056, "ModelUtility" -> 
                0.8456732478244284, "TrainingSize" -> 30000, "TrainingTime" -> 
                1.5848931924611136`, "TrainingMemory" -> 21926224, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.21378928136456082`, 0.0029795837602396825`]}, 
                "AccuracyHistory" -> {
                  Around[0.9346549613748081, 0.0009537215318558603]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.4055427386188248, 0.015378855915500596`], "Accuracy" -> 
                Around[0.8597388330474696, 0.005512787316816951], 
                "EvaluationTime" -> 7.84669106013196*^-6, "TestSize" -> 7900, 
                "ModelMemory" -> 9832, "ModelUtility" -> 0.2018187151865758, 
                "TrainingSize" -> 1500, "TrainingTime" -> 0.1, 
                "TrainingMemory" -> 1123736, "ExperimentCount" -> 1, 
                "MeanCrossEntropyHistory" -> {
                  Around[0.4055427386188248, 0.010874493304741321`]}, 
                "AccuracyHistory" -> {
                  Around[0.8597388330474696, 0.003898129294960458]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.3077209204409789, 0.009246755632076536], "Accuracy" -> 
                Around[0.9041045629928859, 0.0028928873204807507`], 
                "EvaluationTime" -> 6.4544552037989384`*^-6, "TestSize" -> 
                20700, "ModelMemory" -> 16744, "ModelUtility" -> 
                0.47941477878070726`, "TrainingSize" -> 7000, "TrainingTime" -> 
                0.25118864315095796`, "TrainingMemory" -> 4976464, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.3077209204409789, 0.0065384436114162186`]}, 
                "AccuracyHistory" -> {
                  Around[0.9041045629928859, 0.0020455802415205197`]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 6.4544552037989384`*^-6, "MeanCrossEntropy" -> 
               Around[0.3077209204409789, 0.009246755632076536], 
               "ModelMemory" -> 16744, "TrainingMemory" -> 4976464, 
               "TrainingTime" -> 37.4689850711694|>, "Index" -> 3|>, <|
            "Value" -> "RandomForest", 
             "Options" -> <|
              "FeatureFraction" -> <|"Value" -> Automatic|>, 
               "LeafSize" -> <|"Value" -> Automatic|>, 
               "TreeNumber" -> <|"Value" -> Automatic|>, 
               "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
               "Implementation" -> <|"Value" -> Automatic|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.34944458471893675`, 0.006825880836299983], 
                "Accuracy" -> 
                Around[0.9036520516830437, 0.007232368272488073], 
                "EvaluationTime" -> 0.00002026043180264481, "TestSize" -> 
                3300, "ModelMemory" -> 145336, "ModelUtility" -> 
                0.35434082517367127`, "TrainingSize" -> 1500, "TrainingTime" -> 
                0.03981071705534971, "TrainingMemory" -> 1162528, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.34944458471893675`, 0.00482662662691902]}, 
                "AccuracyHistory" -> {
                  Around[0.9036520516830437, 0.005114056649514752]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.260253149518057, 0.0038654031957544546`], "Accuracy" -> 
                Around[0.9318059260751581, 0.0033176360160863845`], 
                "EvaluationTime" -> 0.000013893572664504149`, "TestSize" -> 
                11500, "ModelMemory" -> 294008, "ModelUtility" -> 
                0.6499467076401576, "TrainingSize" -> 7000, "TrainingTime" -> 
                0.07943282347242814, "TrainingMemory" -> 4782272, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.260253149518057, 0.0027332528117381266`]}, 
                "AccuracyHistory" -> {
                  Around[0.9318059260751581, 0.002345922924483404]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.20014018305384648`, 0.0023404271137218986`], 
                "Accuracy" -> 
                Around[0.9493366297807383, 0.0018549866761698322`], 
                "EvaluationTime" -> 0.000011259253991888941`, "TestSize" -> 
                27900, "ModelMemory" -> 778488, "ModelUtility" -> 
                0.9131571169338759, "TrainingSize" -> 30000, "TrainingTime" -> 
                0.31622776601683794`, "TrainingMemory" -> 20036472, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.20014018305384648`, 0.0016549318829856133`]}, 
                "AccuracyHistory" -> {
                  Around[0.9493366297807383, 0.0013116736577303825`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.15128548026042093`, 0.0011870858587893864`], 
                "Accuracy" -> 
                Around[0.9629144195809036, 0.0008628459159213491], 
                "EvaluationTime" -> 7.996163906070748*^-6, "TestSize" -> 
                95900, "ModelMemory" -> 2778616, "ModelUtility" -> 
                1.0890768258858894`, "TrainingSize" -> 150000, "TrainingTime" -> 
                3.1622776601683795`, "TrainingMemory" -> 98733296, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.15128548026042093`, 0.0008393964606006315]}, 
                "AccuracyHistory" -> {
                  Around[0.9629144195809036, 0.0006101241982671036]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 7.996163906070748*^-6, "MeanCrossEntropy" -> 
               Around[0.15128548026042093`, 0.0011870858587893864`], 
               "ModelMemory" -> 2778616, "TrainingMemory" -> 98733296, 
               "TrainingTime" -> 21.121661784844548`|>, "Index" -> 4|>, <|
            "Value" -> "NearestNeighbors", 
             "Options" -> <|
              "NeighborsNumber" -> <|"Value" -> Automatic|>, 
               "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
               "NearestMethod" -> <|"Value" -> Automatic|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.3112361675033857, 0.007332093341422057], "Accuracy" -> 
                Around[0.883192627487073, 0.005380252856682849], 
                "EvaluationTime" -> 8.413387921600887*^-6, "TestSize" -> 7100,
                 "ModelMemory" -> 308120, "ModelUtility" -> 
                0.4693134363411319, "TrainingSize" -> 1500, "TrainingTime" -> 
                0.07943282347242814, "TrainingMemory" -> 3507624, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.3112361675033857, 0.005184572922012268]}, 
                "AccuracyHistory" -> {
                  Around[0.883192627487073, 0.003804413279458736]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.23460618782746276`, 0.00558391542279781], "Accuracy" -> 
                Around[0.9240857524333146, 0.003686762854176829], 
                "EvaluationTime" -> 0.00001781425930022634, "TestSize" -> 
                10300, "ModelMemory" -> 1414744, "ModelUtility" -> 
                0.7132317275180052, "TrainingSize" -> 7000, "TrainingTime" -> 
                0.03162277660168379, "TrainingMemory" -> 6991544, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.23460618782746276`, 0.0039484244610324785`]}, 
                "AccuracyHistory" -> {
                  Around[0.9240857524333146, 0.0026069350148151065`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.18233859263137092`, 0.0058185817388127755`], 
                "Accuracy" -> 
                Around[0.9450321888412903, 0.004218478493040936], 
                "EvaluationTime" -> 0.00012718989774383903`, "TestSize" -> 
                2900, "ModelMemory" -> 6037816, "ModelUtility" -> 
                0.8203625023070344, "TrainingSize" -> 30000, "TrainingTime" -> 
                0.19952623149688792`, "TrainingMemory" -> 25062736, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.18233859263137092`, 0.0058185817388127755`]}, 
                "AccuracyHistory" -> {
                  Around[0.9450321888412903, 0.004218478493040936]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.14781524570740623`, 0.012467788570628902`], 
                "Accuracy" -> 
                Around[0.9601253453110699, 0.009733888880393457], 
                "EvaluationTime" -> 0.0007943282347242814, "TestSize" -> 400, 
                "ModelMemory" -> 30156424, "ModelUtility" -> 
                0.8564108714336494, "TrainingSize" -> 150000, "TrainingTime" -> 
                0.7943282347242815, "TrainingMemory" -> 121051040, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.14781524570740623`, 0.012467788570628902`]}, 
                "AccuracyHistory" -> {
                  Around[0.9601253453110699, 0.009733888880393457]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.12061926540801111`, 0.015750614544927006`], 
                "Accuracy" -> 
                Around[0.9592955601805998, 0.011376757043911468`], 
                "EvaluationTime" -> 0.005444439372449126, "TestSize" -> 300, 
                "ModelMemory" -> 160806424, "ModelUtility" -> 
                0.6975363314209918, "TrainingSize" -> 800000, "TrainingTime" -> 
                6.309573444801933, "TrainingMemory" -> 487467904, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.12061926540801111`, 0.015750614544927006`]}, 
                "AccuracyHistory" -> {
                  Around[0.9592955601805998, 0.011376757043911468`]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 0.005444439372449126, "MeanCrossEntropy" -> 
               Around[0.12061926540801111`, 0.015750614544927006`], 
               "ModelMemory" -> 160806424, "TrainingMemory" -> 487467904, 
               "TrainingTime" -> 7.966399629474845|>, "Index" -> 5|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 0.0001|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.709375585422943, 0.0007237547241222881], "Accuracy" -> 
                Around[0.5237878435373171, 0.002549661501025935], 
                "EvaluationTime" -> 8.239122629786982*^-7, "TestSize" -> 
                76700, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.34998836842303493`, "TrainingSize" -> 
                1500, "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
                1226672, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.709375585422943, 0.0005117718733426689]}, 
                "AccuracyHistory" -> {
                  Around[0.5237878435373171, 0.00180288293710571]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 8.239122629786982*^-7, "MeanCrossEntropy" -> 
               Around[0.709375585422943, 0.0007237547241222881], 
               "ModelMemory" -> 9088, "TrainingMemory" -> 1226672, 
               "TrainingTime" -> 26.58028875395516|>, "Index" -> 6|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 100.|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.6977209541448225, 0.000446293219837132], "Accuracy" -> 
                Around[0.556915854623158, 0.0025903983512069475`], 
                "EvaluationTime" -> 8.487001950966328*^-7, "TestSize" -> 
                73500, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.3333463736435627, "TrainingSize" -> 1500,
                 "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
                1226608, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.6977209541448225, 0.0003155769621444146]}, 
                "AccuracyHistory" -> {
                  Around[0.556915854623158, 0.0018316882401128844`]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 8.487001950966328*^-7, "MeanCrossEntropy" -> 
               Around[0.6977209541448225, 0.000446293219837132], 
               "ModelMemory" -> 9088, "TrainingMemory" -> 1226608, 
               "TrainingTime" -> 26.58028875395516|>, "Index" -> 7|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 100000.|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.6932143594176574, 0.00030864517558919333`], 
                "Accuracy" -> 
                Around[0.5400973317092977, 0.005090714249230553], 
                "EvaluationTime" -> 1.8886045081164053`*^-6, "TestSize" -> 
                19100, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.3268275262287451, "TrainingSize" -> 1500,
                 "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
                1226608, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.6932143594176574, 0.00021824509663963124`]}, 
                "AccuracyHistory" -> {
                  Around[0.5400973317092977, 0.0035996785667139083`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.6933539092217927, 0.00003992628590633135], 
                "Accuracy" -> Around[0.542910925991851, 0.001877930068470149],
                 "EvaluationTime" -> 7.988794712820361*^-7, "TestSize" -> 
                140700, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.3269512863908599, "TrainingSize" -> 7000,
                 "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
                5583568, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.6933539092217927, 0.000028232147511959773`]}, 
                "AccuracyHistory" -> {
                  Around[0.542910925991851, 0.0013278970860093598`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.6936645616087916, 0.0000611666714846824], "Accuracy" -> 
                Around[0.5477558418875358, 0.0013008934492894748`], 
                "EvaluationTime" -> 1.0064722073876013`*^-6, "TestSize" -> 
                292700, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.3274053481497653, "TrainingSize" -> 
                30000, "TrainingTime" -> 0.15848931924611134`, 
                "TrainingMemory" -> 23798384, "ExperimentCount" -> 1, 
                "MeanCrossEntropyHistory" -> {
                  Around[0.6936645616087916, 0.000043251368189428744`]}, 
                "AccuracyHistory" -> {
                  Around[0.5477558418875358, 0.0009198705795937457]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 1.0064722073876013`*^-6, "MeanCrossEntropy" -> 
               Around[0.6936645616087916, 0.0000611666714846824], 
               "ModelMemory" -> 9088, "TrainingMemory" -> 23798384, 
               "TrainingTime" -> 5.2988262401283235`|>, "Index" -> 8|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 1.*^-6|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.7088558655376189, 0.0009363294204580197], "Accuracy" -> 
                Around[0.525628215950425, 0.0032802539731431432`], 
                "EvaluationTime" -> 1.0333395558337709`*^-6, "TestSize" -> 
                46300, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.3493155683314625, "TrainingSize" -> 1500,
                 "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
                1226672, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.7088558655376189, 0.0006620848826303357]}, 
                "AccuracyHistory" -> {
                  Around[0.525628215950425, 0.0023194898284236314`]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 1.0333395558337709`*^-6, "MeanCrossEntropy" -> 
               Around[0.7088558655376189, 0.0009363294204580197], 
               "ModelMemory" -> 9088, "TrainingMemory" -> 1226672, 
               "TrainingTime" -> 33.462600965180876`|>, "Index" -> 9|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 1.|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.6982166739454241, 0.0004660129463537739], "Accuracy" -> 
                Around[0.5579972412750611, 0.002535138532278017], 
                "EvaluationTime" -> 8.200983621809755*^-7, "TestSize" -> 
                76700, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.33406216270940836`, "TrainingSize" -> 
                1500, "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
                1226608, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.6982166739454241, 0.0003295209144874763]}, 
                "AccuracyHistory" -> {
                  Around[0.5579972412750611, 0.001792613647421097]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 8.200983621809755*^-7, "MeanCrossEntropy" -> 
               Around[0.6982166739454241, 0.0004660129463537739], 
               "ModelMemory" -> 9088, "TrainingMemory" -> 1226608, 
               "TrainingTime" -> 26.58028875395516|>, "Index" -> 10|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 0.001|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.7061560798708709, 0.0023829056776449105`], 
                "Accuracy" -> 
                Around[0.5325102041960957, 0.008143237389994786], 
                "EvaluationTime" -> 6.303206524107021*^-6, "TestSize" -> 7400,
                 "ModelMemory" -> 9088, "ModelUtility" -> -0.3459101713790492,
                 "TrainingSize" -> 1500, "TrainingTime" -> 
                0.03981071705534971, "TrainingMemory" -> 1226544, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.7061560798708709, 0.0016849687635906415`]}, 
                "AccuracyHistory" -> {
                  Around[0.5325102041960957, 0.005758138379277155]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 6.303206524107021*^-6, "MeanCrossEntropy" -> 
               Around[0.7061560798708709, 0.0023829056776449105`], 
               "ModelMemory" -> 9088, "TrainingMemory" -> 1226544, 
               "TrainingTime" -> 26.58028875395516|>, "Index" -> 11|>, <|
            "Value" -> "GradientBoostedTrees", 
             "Options" -> <|
              "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
               MaxTrainingRounds -> <|"Value" -> 50|>, 
               "LeavesNumber" -> <|"Value" -> 25|>, 
               "LearningRate" -> <|"Value" -> 0.1|>, 
               ValidationSet -> <|"Value" -> Automatic|>, 
               "MaxBinNumber" -> <|"Value" -> 255|>, 
               "ThreadNumber" -> <|"Value" -> 8|>, 
               "MaxDepth" -> <|"Value" -> 6|>, 
               "LeafSize" -> <|"Value" -> 15|>, 
               "FeatureFraction" -> <|"Value" -> 1|>, 
               "BaggingFraction" -> <|"Value" -> 1|>, 
               "BaggingFrequency" -> <|"Value" -> 0|>, 
               "MinGainToSplit" -> <|"Value" -> 0|>, 
               "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 0|>, 
               "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.19408126029194772`, 0.009293837058418667], 
                "Accuracy" -> Around[0.9312249460108, 0.005855638728136306], 
                "EvaluationTime" -> 0.000020721935955649237`, "TestSize" -> 
                3700, "ModelMemory" -> 148040, "ModelUtility" -> 
                0.936775963378323, "TrainingSize" -> 1500, "TrainingTime" -> 
                0.07943282347242814, "TrainingMemory" -> 1625976, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.19408126029194772`, 0.006571735207250674]}, 
                "AccuracyHistory" -> {
                  Around[0.9312249460108, 0.004140561852843752]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.16962188663961844`, 0.0033347758189659453`], 
                "Accuracy" -> 
                Around[0.9470512885822261, 0.0022430095566340364`], 
                "EvaluationTime" -> 0.000010593655561315554`, "TestSize" -> 
                19900, "ModelMemory" -> 149048, "ModelUtility" -> 
                1.0770884227682598`, "TrainingSize" -> 7000, "TrainingTime" -> 
                0.1, "TrainingMemory" -> 5599232, "ExperimentCount" -> 1, 
                "MeanCrossEntropyHistory" -> {
                  Around[0.16962188663961844`, 0.0023580425953277423`]}, 
                "AccuracyHistory" -> {
                  Around[0.9470512885822261, 0.0015860472677621583`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.16055136994254196`, 0.0024051309027365003`], 
                "Accuracy" -> 
                Around[0.954138545220268, 0.0016555963483671338`], 
                "EvaluationTime" -> 0.000010505497747619355`, "TestSize" -> 
                31900, "ModelMemory" -> 149048, "ModelUtility" -> 
                1.1329789246543047`, "TrainingSize" -> 30000, "TrainingTime" -> 
                0.12589254117941673`, "TrainingMemory" -> 23813920, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.16055136994254196`, 0.0017006843709663018`]}, 
                "AccuracyHistory" -> {
                  Around[0.954138545220268, 0.0011706834048380859`]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 0.000010505497747619355`, 
               "MeanCrossEntropy" -> 
               Around[0.16055136994254196`, 0.0024051309027365003`], 
               "ModelMemory" -> 149048, "TrainingMemory" -> 23813920, 
               "TrainingTime" -> 4.275850862786319|>, "Index" -> 12|>, <|
            "Value" -> "GradientBoostedTrees", 
             "Options" -> <|
              "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
               MaxTrainingRounds -> <|"Value" -> 50|>, 
               "LeavesNumber" -> <|"Value" -> 110|>, 
               "LearningRate" -> <|"Value" -> 0.1|>, 
               ValidationSet -> <|"Value" -> Automatic|>, 
               "MaxBinNumber" -> <|"Value" -> 255|>, 
               "ThreadNumber" -> <|"Value" -> 8|>, 
               "MaxDepth" -> <|"Value" -> 6|>, 
               "LeafSize" -> <|"Value" -> 35|>, 
               "FeatureFraction" -> <|"Value" -> 1|>, 
               "BaggingFraction" -> <|"Value" -> 1|>, 
               "BaggingFrequency" -> <|"Value" -> 0|>, 
               "MinGainToSplit" -> <|"Value" -> 0|>, 
               "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 0|>, 
               "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.2202788394910454, 0.013852322182082811`], "Accuracy" -> 
                Around[0.9204421756591997, 0.009258107975177256], 
                "EvaluationTime" -> 0.00004942876368734263, "TestSize" -> 
                1700, "ModelMemory" -> 138856, "ModelUtility" -> 
                0.8071927942670402, "TrainingSize" -> 1500, "TrainingTime" -> 
                0.0630957344480193, "TrainingMemory" -> 1467336, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.2202788394910454, 0.009795070950131587]}, 
                "AccuracyHistory" -> {
                  Around[0.9204421756591997, 0.006546470930205094]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.1657851536830182, 0.0037936368535791422`], 
                "Accuracy" -> 
                Around[0.9464045325386785, 0.0025232822375583605`], 
                "EvaluationTime" -> 0.00001030794844936831, "TestSize" -> 
                15900, "ModelMemory" -> 182744, "ModelUtility" -> 
                1.0993217404502005`, "TrainingSize" -> 7000, "TrainingTime" -> 
                0.12589254117941673`, "TrainingMemory" -> 5599168, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.1657851536830182, 0.002682506344525009]}, 
                "AccuracyHistory" -> {
                  Around[0.9464045325386785, 0.0017842299810250815`]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 0.00001030794844936831, "MeanCrossEntropy" -> 
               Around[0.1657851536830182, 0.0037936368535791422`], 
               "ModelMemory" -> 182744, "TrainingMemory" -> 5599168, 
               "TrainingTime" -> 18.0477444743647|>, "Index" -> 13|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 0.01|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.7038057773069419, 0.0007347114458704232], "Accuracy" -> 
                Around[0.5342079822958293, 0.0030711222314322812`], 
                "EvaluationTime" -> 1.1640235074443057`*^-6, "TestSize" -> 
                52700, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.3421104038552626, "TrainingSize" -> 1500,
                 "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
                1226672, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.7038057773069419, 0.0005195194455903493]}, 
                "AccuracyHistory" -> {
                  Around[0.5342079822958293, 0.0021716113556985274`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.702025822109862, 0.00038037996824935653`], 
                "Accuracy" -> 
                Around[0.5324091800174346, 0.0016977249297124755`], 
                "EvaluationTime" -> 8.130535942985886*^-7, "TestSize" -> 
                172700, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.3394777567517654, "TrainingSize" -> 7000,
                 "TrainingTime" -> 0.1, "TrainingMemory" -> 5583600, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.702025822109862, 0.0002689692549766436]}, 
                "AccuracyHistory" -> {
                  Around[0.5324091800174346, 0.0012004728103891462`]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 8.130535942985886*^-7, "MeanCrossEntropy" -> 
               Around[0.702025822109862, 0.00038037996824935653`], 
               "ModelMemory" -> 9088, "TrainingMemory" -> 5583600, 
               "TrainingTime" -> 14.325525002769636`|>, "Index" -> 14|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 10.|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.6974286151894825, 0.000856528772520434], "Accuracy" -> 
                Around[0.5583761949958086, 0.0047007616727773645`], 
                "EvaluationTime" -> 3.6057665183854683`*^-6, "TestSize" -> 
                22300, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.33304497132793853`, "TrainingSize" -> 
                1500, "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
                1226736, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.6974286151894825, 0.0006056573033305886]}, 
                "AccuracyHistory" -> {
                  Around[0.5583761949958086, 0.003323940455562693]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 3.6057665183854683`*^-6, "MeanCrossEntropy" -> 
               Around[0.6974286151894825, 0.000856528772520434], 
               "ModelMemory" -> 9088, "TrainingMemory" -> 1226736, 
               "TrainingTime" -> 26.58028875395516|>, "Index" -> 15|>, <|
            "Value" -> "GradientBoostedTrees", 
             "Options" -> <|
              "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
               MaxTrainingRounds -> <|"Value" -> 50|>, 
               "LeavesNumber" -> <|"Value" -> 250|>, 
               "LearningRate" -> <|"Value" -> 0.04|>, 
               ValidationSet -> <|"Value" -> Automatic|>, 
               "MaxBinNumber" -> <|"Value" -> 255|>, 
               "ThreadNumber" -> <|"Value" -> 8|>, 
               "MaxDepth" -> <|"Value" -> 6|>, 
               "LeafSize" -> <|"Value" -> 15|>, 
               "FeatureFraction" -> <|"Value" -> 1|>, 
               "BaggingFraction" -> <|"Value" -> 1|>, 
               "BaggingFrequency" -> <|"Value" -> 0|>, 
               "MinGainToSplit" -> <|"Value" -> 0|>, 
               "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 0|>, 
               "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.3040043794360557, 0.015105447717625786`], "Accuracy" -> 
                Around[0.9100245304096706, 0.012719147283412344`], 
                "EvaluationTime" -> 0.0000869791693432797, "TestSize" -> 1000,
                 "ModelMemory" -> 174872, "ModelUtility" -> 
                0.4876506997783244, "TrainingSize" -> 1500, "TrainingTime" -> 
                0.1, "TrainingMemory" -> 1969496, "ExperimentCount" -> 1, 
                "MeanCrossEntropyHistory" -> {
                  Around[0.3040043794360557, 0.01068116451399205]}, 
                "AccuracyHistory" -> {
                  Around[0.9100245304096706, 0.008993795295011322]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.2611697750983505, 0.00297526134058459], "Accuracy" -> 
                Around[0.9348050566243792, 0.002699829396365658], 
                "EvaluationTime" -> 0.000010367506814414859`, "TestSize" -> 
                16700, "ModelMemory" -> 207032, "ModelUtility" -> 
                0.6471312422643346, "TrainingSize" -> 7000, "TrainingTime" -> 
                0.12589254117941673`, "TrainingMemory" -> 5599112, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.2611697750983505, 0.0021038274697295417`]}, 
                "AccuracyHistory" -> {
                  Around[0.9348050566243792, 0.0019090676742169398`]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 0.000010367506814414859`, 
               "MeanCrossEntropy" -> 
               Around[0.2611697750983505, 0.00297526134058459], "ModelMemory" -> 
               207032, "TrainingMemory" -> 5599112, "TrainingTime" -> 
               18.08464873991668|>, "Index" -> 16|>, <|
            "Value" -> "GradientBoostedTrees", 
             "Options" -> <|
              "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
               MaxTrainingRounds -> <|"Value" -> 50|>, 
               "LeavesNumber" -> <|"Value" -> 13|>, 
               "LearningRate" -> <|"Value" -> 0.01|>, 
               ValidationSet -> <|"Value" -> Automatic|>, 
               "MaxBinNumber" -> <|"Value" -> 255|>, 
               "ThreadNumber" -> <|"Value" -> 8|>, 
               "MaxDepth" -> <|"Value" -> 6|>, 
               "LeafSize" -> <|"Value" -> 90|>, 
               "FeatureFraction" -> <|"Value" -> 1|>, 
               "BaggingFraction" -> <|"Value" -> 1|>, 
               "BaggingFrequency" -> <|"Value" -> 0|>, 
               "MinGainToSplit" -> <|"Value" -> 0|>, 
               "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 0|>, 
               "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.5233232663643181, 0.003971869251349445], "Accuracy" -> 
                Around[0.8644237066114481, 0.008149648948138024], 
                "EvaluationTime" -> 0.000022611941597881477`, "TestSize" -> 
                3500, "ModelMemory" -> 124072, 
                "ModelUtility" -> -0.04712878031447498, "TrainingSize" -> 
                1500, "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
                1242048, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.5233232663643181, 0.0028085356816155284`]}, 
                "AccuracyHistory" -> {
                  Around[0.8644237066114481, 0.00576267203551821]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.5086385498558283, 0.0015647085283141716`], 
                "Accuracy" -> 
                Around[0.9021357958078017, 0.0032488457861706522`], 
                "EvaluationTime" -> 0.000010289800161209517`, "TestSize" -> 
                16700, "ModelMemory" -> 128248, 
                "ModelUtility" -> -0.017765801350814403`, "TrainingSize" -> 
                7000, "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 
                5599168, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.5086385498558283, 0.0011064160109513737`]}, 
                "AccuracyHistory" -> {
                  Around[0.9021357958078017, 0.0022972808864306082`]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 0.000010289800161209517`, 
               "MeanCrossEntropy" -> 
               Around[0.5086385498558283, 0.0015647085283141716`], 
               "ModelMemory" -> 128248, "TrainingMemory" -> 5599168, 
               "TrainingTime" -> 9.06379507307977|>, "Index" -> 17|>, <|
            "Value" -> "GradientBoostedTrees", 
             "Options" -> <|
              "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
               MaxTrainingRounds -> <|"Value" -> 50|>, 
               "LeavesNumber" -> <|"Value" -> 110|>, 
               "LearningRate" -> <|"Value" -> 0.2|>, 
               ValidationSet -> <|"Value" -> Automatic|>, 
               "MaxBinNumber" -> <|"Value" -> 255|>, 
               "ThreadNumber" -> <|"Value" -> 8|>, 
               "MaxDepth" -> <|"Value" -> 6|>, 
               "LeafSize" -> <|"Value" -> 15|>, 
               "FeatureFraction" -> <|"Value" -> 1|>, 
               "BaggingFraction" -> <|"Value" -> 1|>, 
               "BaggingFrequency" -> <|"Value" -> 0|>, 
               "MinGainToSplit" -> <|"Value" -> 0|>, 
               "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 0|>, 
               "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.17527500237852012`, 0.008992786046159823], 
                "Accuracy" -> Around[0.935321821928136, 0.004115927755481419],
                 "EvaluationTime" -> 0.000013670010768069548`, "TestSize" -> 
                7100, "ModelMemory" -> 154024, "ModelUtility" -> 
                1.0380186679746806`, "TrainingSize" -> 1500, "TrainingTime" -> 
                0.07943282347242814, "TrainingMemory" -> 1696888, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.17527500237852012`, 0.006358859994999372]}, 
                "AccuracyHistory" -> {
                  Around[0.935321821928136, 0.002910400426774837]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.12875392340426495`, 0.004062465939357208], 
                "Accuracy" -> Around[0.955721770730997, 0.00224896189423506], 
                "EvaluationTime" -> 0.000010289800161209517`, "TestSize" -> 
                16700, "ModelMemory" -> 186232, "ModelUtility" -> 
                1.350386539876955, "TrainingSize" -> 7000, "TrainingTime" -> 
                0.12589254117941673`, "TrainingMemory" -> 5599112, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.12875392340426495`, 0.002872597214058859]}, 
                "AccuracyHistory" -> {
                  Around[0.955721770730997, 0.0015902562060437539`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.11434977695470742`, 0.0018891515108477614`], 
                "Accuracy" -> 
                Around[0.9650055435824019, 0.0011493387012645032`], 
                "EvaluationTime" -> 8.362228403492855*^-6, "TestSize" -> 
                51100, "ModelMemory" -> 202296, "ModelUtility" -> 
                1.4720176046464366`, "TrainingSize" -> 30000, "TrainingTime" -> 
                0.19952623149688792`, "TrainingMemory" -> 23813920, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.11434977695470742`, 0.0013358318440092635`]}, 
                "AccuracyHistory" -> {
                  Around[0.9650055435824019, 0.0008127051895442698]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.10884671969704197`, 0.0028693502598924874`], 
                "Accuracy" -> 
                Around[0.9693970541133284, 0.0018874643996104421`], 
                "EvaluationTime" -> 0.000015513857194134994`, "TestSize" -> 
                8300, "ModelMemory" -> 210168, "ModelUtility" -> 
                1.5193782888454215`, "TrainingSize" -> 150000, "TrainingTime" -> 
                0.5011872336272722, "TrainingMemory" -> 117657048, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.10884671969704197`, 0.0028693502598924874`]}, 
                "AccuracyHistory" -> {
                  Around[0.9693970541133284, 0.0018874643996104421`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.10598766791788199`, 0.0010070169250233456`], 
                "Accuracy" -> 
                Around[0.9695352321815662, 0.0006479908017076471], 
                "EvaluationTime" -> 8.059614258541611*^-6, "TestSize" -> 
                70300, "ModelMemory" -> 212984, "ModelUtility" -> 
                1.5493558501087152`, "TrainingSize" -> 800000, "TrainingTime" -> 
                1.9952623149688797`, "TrainingMemory" -> 627274272, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.10598766791788199`, 0.0010070169250233456`]}, 
                "AccuracyHistory" -> {
                  Around[0.9695352321815662, 0.0006479908017076471]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 8.059614258541611*^-6, "MeanCrossEntropy" -> 
               Around[0.10598766791788199`, 0.0010070169250233456`], 
               "ModelMemory" -> 212984, "TrainingMemory" -> 627274272, 
               "TrainingTime" -> 2.5735107171835283`|>, "Index" -> 18|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 1000.|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.6954065306678503, 0.00025987540112807104`], 
                "Accuracy" -> Around[0.5537123451601, 0.0023083235930396726`],
                 "EvaluationTime" -> 9.052433927658373*^-7, "TestSize" -> 
                92700, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.32997055790407315`, "TrainingSize" -> 
                1500, "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
                1226608, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.6954065306678503, 0.0001837596584012332]}, 
                "AccuracyHistory" -> {
                  Around[0.5537123451601, 0.001632231265811249]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.6975882001575612, 0.0002879385386741066], "Accuracy" -> 
                Around[0.5452759169885432, 0.001663738381462625], 
                "EvaluationTime" -> 8.006955101470262*^-7, "TestSize" -> 
                179100, "ModelMemory" -> 9088, 
                "ModelUtility" -> -0.33311071596940867`, "TrainingSize" -> 
                7000, "TrainingTime" -> 0.1, "TrainingMemory" -> 5583600, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.6975882001575612, 0.00020360329326140573`]}, 
                "AccuracyHistory" -> {
                  Around[0.5452759169885432, 0.001176440691652553]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 8.006955101470262*^-7, "MeanCrossEntropy" -> 
               Around[0.6975882001575612, 0.0002879385386741066], 
               "ModelMemory" -> 9088, "TrainingMemory" -> 5583600, 
               "TrainingTime" -> 14.31733706231597|>, "Index" -> 19|>|>, 
          TypeSystem`Assoc[
           TypeSystem`Struct[{"Value", "Options"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "DecisionTree", "GradientBoostedTrees", "LogisticRegression", 
               "NaiveBayes", "NearestNeighbors", "RandomForest"]], 
             TypeSystem`Assoc[TypeSystem`AnyType, 
              TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
              TypeSystem`AnyLength]}], 
           
           TypeSystem`Struct[{
            "Experiments", "PredictedPerformances", "Index"}, {
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
                "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime",
                 "TrainingMemory", "ExperimentCount", 
                "MeanCrossEntropyHistory", "AccuracyHistory"}, {
               TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Vector[TypeSystem`AnyType, 1], 
                TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
              TypeSystem`AnyLength], 
             
             TypeSystem`Struct[{
              "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
               "TrainingMemory", "TrainingTime"}, {
               TypeSystem`Atom[Real], TypeSystem`AnyType, 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real]}], 
             TypeSystem`Atom[Integer]}], 19], <||>], "MaxTrainingSize" -> 
        1000000, "PreprocessorEvaluationTime" -> 4.375*^-6, 
        "PreprocessorMemory" -> 53640, "InputDimension" -> 24, 
        "OutputDimension" -> 1, 
        "BaselineLogProbability" -> -0.6931471805599453, "VariableBudget" -> 
        True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
        False, "NaturalStop" -> True, "AbortStop" -> False, 
        "LastReportingTime" -> 3.912693836540902`16.34505085538343*^9, 
        "RoundPartitioning" -> 
        Dataset[{<|
           "TrainingSizes" -> 1500, "TimeBudgets" -> 3.282644637636448, 
            "ElapsedTimes" -> 7.947817000000001, "ExperimentCounts" -> 19|>, <|
           "TrainingSizes" -> 7000, "TimeBudgets" -> 4.689492339480636, 
            "ElapsedTimes" -> 7.827386, "ExperimentCounts" -> 12|>, <|
           "TrainingSizes" -> 30000, "TimeBudgets" -> 6.699274770686631, 
            "ElapsedTimes" -> 7.431413999999999, "ExperimentCounts" -> 6|>, <|
           "TrainingSizes" -> 150000, "TimeBudgets" -> 9.570392529552318, 
            "ElapsedTimes" -> 8.781769, "ExperimentCounts" -> 3|>, <|
           "TrainingSizes" -> 800000, "TimeBudgets" -> 13.671989327931879`, 
            "ElapsedTimes" -> 12.399149999999999`, "ExperimentCounts" -> 2|>}, 
          TypeSystem`Vector[
           TypeSystem`Struct[{
            "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
             "ExperimentCounts"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer]}], 5], <||>]|>, "AnomalyDetector" -> 
      None, "Log" -> <|
       "Example" -> 
        MachineLearning`MLDataset[<|
          "f1" -> <|
            "Type" -> "NumericalVector", "Weight" -> 1, 
             "Values" -> {{0.21431097984473113`, 0.3596485367073792, 
              0.42604048344788964`, 0.3031208890960728, 0.3202475265991668, 
              0.3766315843047604, 0.35769955210407767`, 0.4449725156485723, 
              0.1973279322473499, 0.28697975827605515`, 0.28697975827605515`, 
              0.42604048344788964`, 0.31168420784761974`, 
              0.31168420784761974`, 0.3766315843047604, 0.401336033876325, 
              0.401336033876325, 0.1973279322473499, 0.3766315843047604, 
              0.1973279322473499, 0.42604048344788964`, 0.42604048344788964`, 
              0.3766315843047604, 0.1973279322473499}}, "ID" -> 
             6830086986086829909|>|>, <|
          "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
           0, "RawExample" -> False|>], "TrainingTime" -> 59.656196, 
        "MaxTrainingMemory" -> 1408678424, "DataMemory" -> 696000080, 
        "FunctionMemory" -> 522312, "LanguageVersion" -> {13., 1}, "Date" -> 
        DateObject[{2023, 12, 27, 19, 24, 1.143746`6.8109045771149574}, 
          "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, "ProcessorType" -> 
        "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
        "Evaluations" -> {}|>|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.912690241258751*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"729acd8d-ed63-4af7-bad7-a02b75a11a2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<C3[0.5m].wmlf\>\"", ",", "C3"}], "]"}]], "Input",
 CellChangeTimes->{{3.9126705657646933`*^9, 3.912670591203693*^9}, {
  3.9126876514896383`*^9, 3.912687653785523*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"eda68ae9-42e3-4376-851c-7d29b35e54f3"],

Cell[BoxData["\<\"C3[0.5m].wmlf\"\>"], "Output",
 CellChangeTimes->{3.9126902415596323`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"5ed7b57d-815b-4ddd-92f3-712e95bbdac6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["[N=4] (500,000) ", "Section",
 CellChangeTimes->{{3.910483630337904*^9, 3.910483651650279*^9}, 
   3.9104843687705793`*^9, {3.912669744807241*^9, 3.912669768382608*^9}, {
   3.912669999962676*^9, 3.9126700006509237`*^9}, {3.9126811586785307`*^9, 
   3.912681164487453*^9}, {3.9126825875072203`*^9, 3.912682587592857*^9}, {
   3.9126876791670628`*^9, 
   3.91268767925494*^9}},ExpressionUUID->"4b022ebe-2b01-4ebb-b0d0-\
ee12145f17e0"],

Cell["\<\
The code for N=4 works analogous to the code above. Note that the input for \
the classifier function is now a 60-dimensional vector.\
\>", "Text",
 CellChangeTimes->{{3.912680877267222*^9, 3.91268088852304*^9}, {
  3.9126809368143044`*^9, 3.912681016337852*^9}, {3.914382684904999*^9, 
  3.9143827724209013`*^9}},ExpressionUUID->"a4d33552-223b-43a0-a106-\
aae97b88e170"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMcList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMcTDG", "[", 
   RowBox[{"4", ",", "500000"}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"N4NMcML", "=", "NMcList"}], ";"}]}], "Input",
 CellChangeTimes->{{3.910483009274996*^9, 3.910483014650721*^9}, 
   3.9104836161791067`*^9, 3.910483973746859*^9, {3.9126698151746264`*^9, 
   3.9126698666241293`*^9}, {3.912670003874763*^9, 3.9126700041464777`*^9}, {
   3.912670193156889*^9, 3.912670205685875*^9}, {3.9126812252008467`*^9, 
   3.9126812293719*^9}, {3.912682582133955*^9, 3.9126825822282753`*^9}, {
   3.912687682091817*^9, 3.912687684988468*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->
  "In[109]:=",ExpressionUUID->"36f2d291-2482-4312-9ba4-a31405b8f197"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3788.272159`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.912694029936658*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"cdae159d-9a1b-4e8b-a547-dc801fd1ee20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMvList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";", 
  RowBox[{"\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "=", "0"}], 
  ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMvTDG", "[", 
   RowBox[{"4", ",", "500000"}], "]"}], 
  "]"}], "\n", "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "\n", 
 RowBox[{
  RowBox[{"N4NMvML", "=", "NMvList"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.910483621114415*^9, 3.9104839891474237`*^9, {3.912669899245468*^9, 
   3.912669946002523*^9}, {3.912670006040786*^9, 3.912670006245411*^9}, {
   3.912670195614608*^9, 3.91267019595757*^9}, {3.912681240878553*^9, 
   3.91268124412292*^9}, {3.912682584891491*^9, 3.9126825849829807`*^9}, {
   3.912687692816221*^9, 3.912687695718135*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->
  "In[112]:=",ExpressionUUID->"922ea1d2-771e-4634-910a-95e57659ba26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8330.469991`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.912702360458939*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"7ed67d04-6b3b-43c8-855d-37ff067a803e"],

Cell[BoxData["23772427"], "Output",
 CellChangeTimes->{3.912702360465805*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"bf22bb80-9a21-49ce-80f9-ebd9f9adcabd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N4NMcML.mx\>\"", ",", "N4NMcML"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N4NMvML.mx\>\"", ",", "N4NMvML"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.908690601480736*^9, 3.908690611036413*^9}, {
  3.9087707182617407`*^9, 3.908770728366908*^9}, {3.909456857685276*^9, 
  3.909456873640235*^9}, {3.909459751477572*^9, 3.9094597579538097`*^9}, {
  3.9095293710148067`*^9, 3.909529371194326*^9}, {3.910484098292221*^9, 
  3.9104841038119926`*^9}, {3.910484204872611*^9, 3.910484237918084*^9}, {
  3.912670040010648*^9, 3.9126700512197943`*^9}, {3.91267021200352*^9, 
  3.9126702303245487`*^9}, {3.91268129363735*^9, 3.912681295537278*^9}, {
  3.9126875357609377`*^9, 3.912687551054615*^9}, {3.912687703336872*^9, 
  3.912687713970653*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"2a80b940-ee54-476d-bf86-dc4e94ee660a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N4NMcMLpvec", "=", 
   RowBox[{"N4NMcML", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"N4NMvMLpvec", "=", 
   RowBox[{"N4NMvML", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.910573162452499*^9, 3.9105731903853893`*^9}, 
   3.910573413743643*^9, {3.912670080851851*^9, 3.912670097555316*^9}, {
   3.912670241107245*^9, 3.912670254973012*^9}, {3.9126875539386*^9, 
   3.912687570346867*^9}, {3.912687720269331*^9, 3.912687729964829*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"5101856a-7d2e-4ac2-969e-9a728e5bacde"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N4NMcMLpvecTD", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"N4NMcMLpvec", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "N4NMcMLpvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"N4NMvMLpvecTD", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"N4NMvMLpvec", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "N4NMvMLpvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"N4MLTD", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"N4NMcMLpvecTD", ",", "N4NMvMLpvecTD"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.910573265952787*^9, 3.910573266140539*^9}, {
  3.9105734021208363`*^9, 3.9105734039112997`*^9}, {3.9105734464547443`*^9, 
  3.91057349143458*^9}, {3.912670154899829*^9, 3.912670182407646*^9}, {
  3.9126702658270607`*^9, 3.912670326222733*^9}, {3.912679117494461*^9, 
  3.912679118362091*^9}, {3.912687592911025*^9, 3.912687628059002*^9}, {
  3.912687736304072*^9, 3.912687777141161*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"338467b9-1d20-473f-928e-5be82b277fa7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"C4", "=", 
   RowBox[{"Classify", "[", "N4MLTD", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9104840598378057`*^9, 3.9104840661335297`*^9}, {
  3.912670559292276*^9, 3.9126705602042303`*^9}, {3.912687630431072*^9, 
  3.912687635722947*^9}, {3.912687779416903*^9, 3.912687782346958*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"0dc4fdc3-ec6d-46d4-bb34-25dcf4f6ffd7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"297.830867`", ",", 
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["ClassifierFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "60", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "0", "1"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "60", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "0", "1"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["1000000", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               
               BoxForm`EmbedSummaryLabel[ClassifierFunction, 18090728, 
                Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             "Choose", ClassifierFunction, 18090728, 
              11597512018149923164801283218178009991453646864495834642336, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm, 
              ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
            "SummaryEmbedButton", ImageSize -> Inherited, 
            BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
    False,
    BoxID -> 11597512018149923164801283218178009991453646864495834642336,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.91270273154002*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"65db28c3-0b08-44d7-a347-e27b822c7327"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<C4[0.5m].wmlf\>\"", ",", "C4"}], "]"}]], "Input",
 CellChangeTimes->{{3.9126705657646933`*^9, 3.912670591203693*^9}, {
  3.9126876514896383`*^9, 3.912687653785523*^9}, {3.912687786993802*^9, 
  3.912687789190126*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"f104c16e-3203-481a-bea0-463416e749e2"],

Cell[BoxData["\<\"C4[0.5m].wmlf\"\>"], "Output",
 CellChangeTimes->{3.912702732940332*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"2c18f4b9-a839-4542-bd65-58c2a1d56da3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["[N=5] (500,000) ", "Section",
 CellChangeTimes->{{3.910483630337904*^9, 3.910483651650279*^9}, 
   3.9104843687705793`*^9, {3.912669744807241*^9, 3.912669768382608*^9}, {
   3.912669999962676*^9, 3.9126700006509237`*^9}, {3.9126811586785307`*^9, 
   3.912681164487453*^9}, {3.9126825875072203`*^9, 3.912682587592857*^9}, {
   3.9126876791670628`*^9, 3.91268767925494*^9}, {3.912699172705233*^9, 
   3.9126991727888117`*^9}},ExpressionUUID->"14e7a9c6-9b63-44fd-ac3a-\
756d031a5aa7"],

Cell["\<\
The code for N=4 works analogous to the code above. Note that the input for \
the classifier function is now a 120-dimensional vector.\
\>", "Text",
 CellChangeTimes->{{3.912680877267222*^9, 3.91268088852304*^9}, {
  3.9126809368143044`*^9, 3.912681016337852*^9}, {3.914382684904999*^9, 
  3.91438277992318*^9}},ExpressionUUID->"f2c44676-a36b-4b85-8f30-\
ccf3f79cd87b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMcList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMcTDG", "[", 
   RowBox[{"5", ",", "500000"}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"N5NMcML", "=", "NMcList"}], ";"}]}], "Input",
 CellChangeTimes->{{3.910483009274996*^9, 3.910483014650721*^9}, 
   3.9104836161791067`*^9, 3.910483973746859*^9, {3.9126698151746264`*^9, 
   3.9126698666241293`*^9}, {3.912670003874763*^9, 3.9126700041464777`*^9}, {
   3.912670193156889*^9, 3.912670205685875*^9}, {3.9126812252008467`*^9, 
   3.9126812293719*^9}, {3.912682582133955*^9, 3.9126825822282753`*^9}, {
   3.912687682091817*^9, 3.912687684988468*^9}, {3.91269917687875*^9, 
   3.912699179381987*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->
  "In[126]:=",ExpressionUUID->"0bc22b8e-e4a6-436c-9378-ea592cfc43bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3845.898133`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.912706581042737*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"5ea161de-d8f7-4989-b378-802ef5ea8f17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NMvList", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"\[ScriptJ]", "=", "0"}], ";", 
  RowBox[{"\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "=", "0"}], 
  ";"}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"NMvTDG", "[", 
   RowBox[{"5", ",", "500000"}], "]"}], 
  "]"}], "\n", "\[ScriptC]\[ScriptO]\[ScriptU]\[ScriptN]\[ScriptT]", "\n", 
 RowBox[{
  RowBox[{"N5NMvML", "=", "NMvList"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.910483621114415*^9, 3.9104839891474237`*^9, {3.912669899245468*^9, 
   3.912669946002523*^9}, {3.912670006040786*^9, 3.912670006245411*^9}, {
   3.912670195614608*^9, 3.91267019595757*^9}, {3.912681240878553*^9, 
   3.91268124412292*^9}, {3.912682584891491*^9, 3.9126825849829807`*^9}, {
   3.912687692816221*^9, 3.912687695718135*^9}, {3.912699182690708*^9, 
   3.912699185506844*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->
  "In[129]:=",ExpressionUUID->"7e494e55-cce9-4b50-b1ad-e464c370b3ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"40651.83995`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.912747233406444*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"087af81c-7099-47c3-91b2-a4f6cb0686c9"],

Cell[BoxData["92760173"], "Output",
 CellChangeTimes->{3.9127472337061*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"a43c0233-353b-4af6-9c03-c0aed3c798b6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N5NMcML.mx\>\"", ",", "N5NMcML"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<N5NMvML.mx\>\"", ",", "N5NMvML"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.908690601480736*^9, 3.908690611036413*^9}, {
  3.9087707182617407`*^9, 3.908770728366908*^9}, {3.909456857685276*^9, 
  3.909456873640235*^9}, {3.909459751477572*^9, 3.9094597579538097`*^9}, {
  3.9095293710148067`*^9, 3.909529371194326*^9}, {3.910484098292221*^9, 
  3.9104841038119926`*^9}, {3.910484204872611*^9, 3.910484237918084*^9}, {
  3.912670040010648*^9, 3.9126700512197943`*^9}, {3.91267021200352*^9, 
  3.9126702303245487`*^9}, {3.91268129363735*^9, 3.912681295537278*^9}, {
  3.9126875357609377`*^9, 3.912687551054615*^9}, {3.912687703336872*^9, 
  3.912687713970653*^9}, {3.912699188795024*^9, 3.912699199978376*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"6e67b2b8-9053-4541-9fa3-9984e19b147f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N5NMcMLpvec", "=", 
   RowBox[{"N5NMcML", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"N5NMvMLpvec", "=", 
   RowBox[{"N5NMvML", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.910573162452499*^9, 3.9105731903853893`*^9}, 
   3.910573413743643*^9, {3.912670080851851*^9, 3.912670097555316*^9}, {
   3.912670241107245*^9, 3.912670254973012*^9}, {3.9126875539386*^9, 
   3.912687570346867*^9}, {3.912687720269331*^9, 3.912687729964829*^9}, {
   3.912699218701391*^9, 3.91269922570676*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"bed269b3-9caf-4ac6-895c-3546b8a1840a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N5NMcMLpvecTD", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"N5NMcMLpvec", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "N5NMcMLpvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"N5NMvMLpvecTD", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"N5NMvMLpvec", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "N5NMvMLpvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"N5MLTD", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"N5NMcMLpvecTD", ",", "N5NMvMLpvecTD"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.910573265952787*^9, 3.910573266140539*^9}, {
  3.9105734021208363`*^9, 3.9105734039112997`*^9}, {3.9105734464547443`*^9, 
  3.91057349143458*^9}, {3.912670154899829*^9, 3.912670182407646*^9}, {
  3.9126702658270607`*^9, 3.912670326222733*^9}, {3.912679117494461*^9, 
  3.912679118362091*^9}, {3.912687592911025*^9, 3.912687628059002*^9}, {
  3.912687736304072*^9, 3.912687777141161*^9}, {3.912699227797927*^9, 
  3.912699248836966*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"60415dff-989d-46b3-97a6-d5b873cc7b5a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"C5", "=", 
   RowBox[{"Classify", "[", "N5MLTD", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9104840598378057`*^9, 3.9104840661335297`*^9}, {
  3.912670559292276*^9, 3.9126705602042303`*^9}, {3.912687630431072*^9, 
  3.912687635722947*^9}, {3.912687779416903*^9, 3.912687782346958*^9}, {
  3.9126992506815357`*^9, 3.912699252413707*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"fbf0ad4c-fa1d-4613-9281-1a7c7af16ee0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"410.049953`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["ClassifierFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "120", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "0", "1"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "120", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "0", "1"}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"GradientBoostedTrees\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["1000000", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ClassifierFunction[<|
     "ExampleNumber" -> 1000000, "ClassNumber" -> 2, 
      "Input" -> <|
       "Preprocessor" -> 
        MachineLearning`MLProcessor[
         "ToMLDataset", <|
          "Input" -> <|
            "f1" -> <|"Type" -> "NumericalVector", "Length" -> 120|>|>, 
           "Output" -> <|
            "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
           "Preprocessor" -> 
           MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                MachineLearning`MLProcessor["List"], 
                MachineLearning`MLProcessor[
                "WrapMLDataset", <|
                 "FeatureTypes" -> {"NumericalVector"}, 
                  "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                  "ExampleWeights" -> Automatic, "RawExample" -> 
                  Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                  False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
           "Perfect", "StructurePreserving" -> False, "Missing" -> 
           "Allowed"|>], "Processor" -> 
        MachineLearning`MLProcessor[
         "Sequence", <|
          "Input" -> <|
            "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
           "Output" -> <|
            "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
           "Processors" -> {
             MachineLearning`MLProcessor[
             "SynthesizeMissingValues", <|
              "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
               "StructurePreserving" -> True, 
               "Input" -> <|
                "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
               "Distribution" -> 
               LearnedDistribution[<|
                 "ExampleNumber" -> 1000000, "Preprocessor" -> 
                  MachineLearning`MLProcessor[
                   "ToMLDataset", <|
                    "Input" -> <|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Length" -> 120|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Processor" -> MachineLearning`MLProcessor["Identity"], 
                  "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                  Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["

1: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
2wfKwb/cz+1M9/pc+IL67/z59Xk6q2Vhh6cuiou5hcrkk5DzAVvZD94c1NBa
VafOfQQDfOVBH09m4e1Pq/Jl99qQZTqLg5otEJ7tNlGdCsxDEf56SNRvwh0z
Qk8GrGpQ8gUPdUhsM+49XOvgtvgUr/52mlpxjkGlx1YmegydyOLm+OT2uBWk
LTZxBdJ0QTr1Ld/XmSTk4fnKpHW3AqwvfZs7L5UO20q8jlh5P4fbJrSm/FNl
oKf28sdH2k68ujL+231zCUgx3pI4dSIMJYub9zPsboUDj47PPBWuQGElSykO
gxLo2pKSz7FpGGKsPi3I3SmBsH1DUqdveODQKaHilMIcoNkapV99qhUVFxV2
U3AgvAwuOCVyDfESlUbcNG8W8ikdjGzKrcE1Gt3L1a5pIGIkr0DVVAcyNjuM
zpESoSR+LN3UpAl/ULKcUvEswZjv/M/vZbbBDI8Fx/2eAPSPuximqu+Bl5+o
DqTQZqPH6LzglZwmsOKx66ierwNRlG4oSEmCXL2G4C0SkehHHzl2prYEj3vl
f78dVIhekrI0aZ3eeOgfzf0XS+6oICvLuDSVCcXWr2hnS7MwWY3bQTErEyzp
pefeM7lgZ7vSxHj7OfhvvzIh+lXT//arSaJfWW30K1f5jX4l5UP0K0Hc6Fe3
N/qVbvZGvyIR/cqD6FfKRL9yHsl4sXo6C/8oHPzd9GF9vr47IMlHboOy82UK
qzQNYF2etfpOcP35fMhVKEy7BXQE74QV/wkBtxDKQFpRMohkDmrmQCl0LX3e
N/qiAg+FHZU52hOBUrWxqqST1bCqz8wnGpUFGsbWFpYqqbD9cJ4ysrYDfXAp
HTN/CjBVRf/2M0wHCg5Bq7UTJIg4nOpQ87wc/zR0cTmphEFBUbJqWhIJ4g7S
q8sGVAJVhdt1sx/NKLyTnznPpww+iFF+LDlWD2rht6bTvVLB7enoJdJaKzYE
SSo4PSqEic3MTHcScmCL9+fv564MwnMqg2fn/EhAtY35ghFNLR5TEeb911eK
tuSEMv4uG/ix44T7inYByuxY6Ez1LEczUQFp7s2ZeLb6tyrlyTL8GcJ37vkW
BJ9T5RKVb7NQE849NKBvhYtyCeTnFC2QR3skS868CBV33vw5scUfzE7NZz74
3QOMw4EFRy/Gw4jsr7Lfcrfxe/N3/P7eCnu3RQzp2+fjapfZ1x+jNXg+uP7e
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
JYV9sGKjE2dkUwSkodhdmlZtON9pH2u0sxqcpatSz0xToMCfYfkpSzKqdY7e
1YqMBR7W9OMx1kW4KWQq5N5MA76kqb9VeCEB1qVtj5K5W4Qd3KNzIdWFGJum
l2BlVw0mKh/z7t8MxrwUb5ZOpgRUMsnkOKWRCApPRZhbMBdGX+vxnukpAtML
GvKreiLAoHWLe2hdKuRtnZRNWnkep4/nmh/aHgkYNiczLFWJZa/jNnP5e0Mn
73GV5tW5UGt1sYGuxh/XOzCzOggHovpU7KElGR/svC/g4ekcgupeorf9aXKA
26L/0V4hY3g8/ChVQCEVjZSrP917kYS18jKKElfz8aBQS8uF8QT8pQZHlc46
48EwZf7jHxKBzuBmL2t6ApQx+bpVtgTBA5m4DzynPMHLImt2w1Q8rv4sGvHa
zwGyn0uPFLoB/pc/b/5nfrDyv/z5Asmf9an5M40INX+mESH5Mx3Jn3uo+XME
mR80IfnzOjI/KEHyZwZN1W5nsShsu0WJ+dzsBgNWfInrdcqh48H71KG/70P1
aIbh+Nhg2K5I63GrKQbu7hyYeXavDEYO3Ps9KZcAx1hbdm0si8CUOZqqwYOF
6FVxV/1WZS3YTY90SK1uQOb6OwvlTYn4Yf76FsVTvqAw+vMyo7kDPlCw1mUO
LsK4X9Ew+TUAizbvu13o5w89qst+YqkUeFdpnTZvXISsOfTNikfz8Gz1pZl9
SV6Qr3jL4a58KqS05g/41JbgJnbvMze3xWNPflLr2lUVYJt8c/5xSCbIiNRw
lLxJxT/9DZ8z9+QCrfOnRqOVvjhjwVWlW1iFs+ZWsgVhBbjUKbxb1jgZTq0Q
ajOmi4SdvbYPe/MrIeEFm8uurVnAFvTUxnqxGFmVrU/fEirCKtvZP08PpsNw
zjXG5ZwI9LQcuPYhpxWPeSh8e9FiDcc3TenCUsHfe/TR8PCeAvhlxuDwKrQA
2QbOyK16UwD7teM36Tq64q9iS8arF/Nhim0w8IO9G0pbXY+jmfXHceETSYEv
H+MMg3NTxXIxWLKXffpB34TJdFc7IlsbYNvvx2VTz2LR0Y7P73KTLAgVHhjZ
2d6IlnBx/nNEIpq47pRdOIJ4YuyZ6dmrN/D4YddDEYxN4MFm5Lt6SB+ULjcH
K9jlYkJQ865l7Uoc8ts3Lvc5DS6dcr2kLOyPopSxvLDfGTj56vi+SvsiZHOY
W7QbawQzn8qHdvZ1sNrMRmdF5wMwPFnDInEuHPe/X3h7wz0XTJsOr3fTvA7n
e2OlLp5oRG/RrAO8XxFWJezzoK8pxFCRxMnUqXq44pMS1e2aglNmc44GHC0Y
rRTdeasrGqo/Zsn23k6CLw9fXdF7lw/hfZ/bQ/6cg2CmT99yVJqAwfRb11GX
InQ49Zr17Y1O2PB+7OvdiWLspQwe4W2ggLZHdxLbmirU++Te2bO+HGV8hhQ1
U8rQF0uZHGIq4J7nU+YLazOhcvnL+Cb2PqysaLoYIZUH7Jk+B03S/n6O7jCn
tV1tOCt3WDD3Zxra8p4tSL/RhMXqN1at29EFypZcjfGqFDy1YPye91s5xLj3
b29aVwjWrqZMbCUPsY/u0nSewXVkvBZQyLFUiwLnrtdXWkbiNuaRFSWRVVB8
uTLpVnQ90HQHVtDrLNSNDkR+ODTGBQUf8zjTF1ZDz9jshkp6Ftw/5113t3wT
zooqiV+4thXddRmlWU7Y4Y68pYVXYyq4zfi2XSqLFfwK0C1ktHaBHlm1lXs7
0rHdB4amdiegWXlnTqZQNqjEykv2FZQg0+adtMoOrihtHX/y6LEk9FKwgZ1f
IoGZk9HnydVgUCgtelaqoA8qy2E2MhejkXmG9k3L2yDkVXorOSd3A8O6DX1n
AzPQeO7MZfZdUUAJZz7dJBGKBQI7nXbWnMTP34vprN+5wFG9iss7dAPQw2Na
NtLvEY7SBwUvushDhnKTomZ2MHpH7vazNE/ELZdFlVaWpkPLGdW0q8UhGDXo
GXbg/t/ztNfhr5e1E8HnjCjnthhjrBJW2fG2Ih0KD07zt5Y6Q8P2VElTCEcB
3ocW80ecscFWI3Bfew4uiK/8WvP3+RSc7xX/NTkY7h7LnwhvcACzFxkf9YbT
cOrte8fZzCLw25eS1FMagLP9LasjNWKBjuWV3KRtAX6SU86T+RoGX/2vvRU+
U4M7tzkEya17CH+EJkzkIgNh8MXz6eyaVOw9VCpt2RqFHSxnGfZMF8HLzxnB
zxoCcR1j+hOvljR4wj3nUW6ahsYHT9AVpVTACoOkpf6H2Ti3dizlfkQ1bgys
vzQ9fRps3nU6RlVbw6afze6SW8tgZ8kVx+9dNfiAPkM7/+8LwPTIzqlHtRRk
/JMlb6CZgZppoe/zy1xR/DaOpqUU4w2d9vS0bQiFPh62N/+eixMZbLRp3pXB
i33lLbwbSkF+d24h18YEnN7YHT85nIPfHghyz9O3opJS1fHdNysxL9/h1DhG
oXa5xJrdNf5wzk7gEn9LGZjrTwYzvCrHgdAv7tp76+FjQKiJ+Hg62C7VpPcl
FWCdR/6+vhuW+P1KXO22tW6gGFNuv29DN56l++w3I9iFOoLDGey9QdAgK/po
8PVL2K/g82XYJxRvqHQNHXndg0ejOcvvMjTimCvzD77hPtRR/ZUgH56IeNBo
q3ZoIxzbw8E9aV+Mqm1e3qH72mFkwv7Zu7+/b6LhVvoxzwpcb7h1/uXhBlys
hqMv+vJwWj1drsa7Dk1uz21ZyC6DzEWu3M2WnTh/jUvWpakAvfh49Wk+1YH3
Hp5uqQ/N8E1BKsHq3APoVJiNdH1SiRNaoRnbH5fgmGFZoem2UDB16KxwVzTD
j5e6u3jYPbFN55P11JgLtu3mbxncmAYaHJ6TeIuC6U46v5JedMKh+GArlufV
yP3wQYPHg2C8ZeO72XVuGC2PbL7EfSUZ+faJH81gCsELNrbXsjgGMHaxr/6F
62P4JlzOLWvqC1r4MnyRKRbLzq6VHuXNgZ79PMENh4sg9zv/Pl/3UAzaLWPH
xEbBFcfdDjhWhuN5w8CLbMINGLFv4EygRBoU6+Zmn/ncAHuvXY4oX1UIGdJ/
9qRsrQWh5xpBa3PLkY355I/IZ/moM7F2/bChBbSoLferH2iAqIAAb47j5agY
8Ku7JSYeCpt3Pbf/HY8eO3h6uIxzsSlQU3b7fCXGeYZsqlWPBsXrDJ/XStaB
TSVry4tDFHhP4TvdIeWDr5w4mlf71ELNqc97XZkbgSXvw7D1dQdYrz6qjYJZ
oEIbWOida4KcJy6rSCiVISfbCaNr6kUgt0FJUrCsBeyZ2RlpW8tQL2B8zrIW
UYyR4vPFJxlFNwUuFHYn4cq32ydYDVKRnf+AasnJQLzHtMMh9WwaRnw6v+Zz
tgtoX4ztUHhehWlPmMwmviai0u9nR3Z4XkOmoOPz2q8KgPYE86OEagrmSWWZ
XNudAmuKpGWvz5UCt16zTtJYFSovsqZp7M+GMMmdW03j0+D5fqbjj4wLoP+i
W6HZjir0ZCtZo9bahAl5HM4beBKgvtDPtzoqFnWKHVrrpBJQTrzBO2Pb3/N4
LV2mY3cCjDDe6HA2aEWTd95HaAVc4Dnr75looVsgc3F+M0XTF0JXrSlk3JIH
IZqlm42uFOPoJsk52Wv3IVbXT4Crww89Y4TYpA31wD57OjTvog1iNM08LV8I
+rjFBZ+K0Meo4U98NC8SQPWylcFwawqo0nusVx5KwJdJJgPCXhWQ0hvzkPXv
30HvoLp5cWcIsvAuzOYWh8AKjbGZp0rlaE0puhYslIhMEKWRfdwLRRKH7miw
+aE9reKodWooLOcOcm9Ycwdm3k7dcFuhDpuczjI5LUbhoUQKy1u8i9+Y3DM1
evxx6lOQpIymBbLN0n1N/BCEC/qp8dGef98jagMmtFyBwP16kn79xENgCWVe
Ee6Yjg9GXm38cj4BMteOaAcX62DX23Bf1Z+RqHnrrqF4qxWUvVR1mlZOB1p6
VjrDzDtw9IHY/dudQTiz/QieVvfCbsmzelKdbngU5tPEKEX42zr3Oe0ZJ3z/
tU1t2uUG0hpWldx8Jg+s1zQoZ/4IgJyYeTbf3/N3hWO+Z360HZpNsZqVRMaA
p/XSc5k7FVguL5br97ITd0ob9294Vg2WgY2X7G8Fw579m99ofB2GQbEjN0XP
JoPgONO5s5tDQHCNAMfLtwOwJythRYZ6O9Ke/Ka1ztAPpYI1/sQvxMIU8fuE
+A0gfh8Rv99kqX71iV+a/VS/dcTvJuI3i/jdRPwur6f6vUP8thG/CcTvrD/V
bzHxG0D8UojfEuL35D9+9xK/fcRvCfHbk0v1u4b4paGj+qX9x++xf/xqEb9m
xO9h4vfbG6pfEeLXnPjVIX4vE78FxK8z8buO+KUnfrOIX3bil4/4lf/H7zPi
9xnx60X8hhG/0cSvNvErTvw++MevMvE7TvyqEr/BxG8E8VtB/PoSvwyxVL9e
xG898cv5j98LxK8G8TtG/CYRv9eJX3bil/4fv3zErxzxe4/4tSJ+m4hfduKX
h/it+MfvJuKXxoDqdyfxy0b8shO/tsSvN/H7jPiVJ36ziN+9xK8E8fuS+G0l
fkWJ3602VL8DxO+fG1S/64jff/dfvf53ftCJ5Fcbyf6rCJJf7SH5VRDJr0yo
+ZUlhZpfjZP86i2ZH9xE8isXmSl3seUkyNl6YEW8aBEobDFoYxJrhG3Fm9im
WnJA4ELNx3djWdiW3rSRPTUYWL6pKXx42AI0wZev97rXQjanO6e8Yhps5hfS
L9kShVq89Jve9txDmqoFEa6TtVD3ImP70pFcCOo09m/5Ewl7BSe4u6ozcF3G
XVMDgVgQUA7h73+dAF7vl0vsRLLQbwWtUuKhLAhnMHRPfBGEWvbZ1jodlqDA
kyX3w7cQlk4/2FLPUAuhdAw0jLENwFP3bfHspmj4eeEhz5rvsWCs8CflelsZ
XJA/WKNUUf33HuTatLfVAocvJf5u3GGDb9rrLg4/yoQmI10bymgS/o6/rj4U
mwff2n4v12pQcKrt2LdnB+OhQO7xup+7quDSwI6ttj/SIEPwuDL3rUKsGIlb
y6vaiC3O7yWO6zagidPkhaqf1djBpOW5qrYGAkeyN3qqUZA9qrR5x+sQdOvr
E3jST8H7Yldz7l4rwpu+p912/uiFi9sv3KHdUg7zd/xdn0/FYUVXw89fR1wx
q2jrR4eKB+A8tn/49BodrDOS/j2r5gNKVf49uVH1ONPWfvy+fwmuv9q2I/e7
IewoCNQ+L05B36TeV5nVNXjaaajc/U4yeuXCu0bvAqCj8zaq3fr3XP+q+idv
cw3u7/j50cqqAJIdh3aJnmvDcs1TlCiGSDxoln53Z0Q2jK2wOhA3FI2/3Qw3
JL4NAxkG4Q2PdOvw6ebJa/KXCpB7ywfLOulw5NhRfDNbuxKSxQf18uuLUJRB
hr/hbRT4hr5g0VOh4M3jWvs8TDKxnUvi0b6IONgpzLRdaLoXvHiZLj2lc0Lt
VYHRAweykL7gdPce41KsZiinH8RSqJ1dpSrb7YK0dPI7krcXgXWb4bqZJyFw
/7DlQv79RmRwOUpRexuBAjycPLo8dVjw4vC8Vmk9run6xhRBF4gX0nRc3vOG
Ynf4edeSjYmg6Dp0sjSpDlq8BF+EaHRAxfKl4aYIExhRvL1y30goLIolF7uf
rf37fzglIfygF3Y+vwpPtyaB3Cfln6GlBXAyvGTBzN8DFhM3Xwl7Ww7Mamt9
dEeKsSjiU9cez1isebc3YmOGMxiwP2JnHgH8t3/17/yg81LT/9+/qpem9q9o
pKj9q1FWav9qNILsfx6lzg9Omf3f/SsxBmr/Spnsf044OctvzJOFIYMyRh/j
vbHi7NJ1SmE91E2vC41xjYQdAzfFDyg7weqTTjrxF5xBXe1FGKucH3K1dZyc
mI2GD82/3tOlheCxd2Nu5lcKIPNY2nFzhgTopnzvMdYOQW4NlZsFWxIh2XWT
j/HdYOwOKHf+5RMGKc/3hvPtysMl/xDFyM8xMN+xnmKknArfurzYJE+bwXDQ
jwG4kIj3ksyzV132Rs7rrm3bDhTg5NdVaykimeDh+ljAVTAVfCbSmWOTCnF3
xW8XGUopDocaN0BOFsyVWb/54xcAm9zjO3bdVsAHNS0fW0dL4JApTYx+Yj1k
8CrrOo4aQfql8KK+YyVodNtmjYWDE3iICfMWGgSjkEf98sebrvjZaovxj29p
OK4b66IvVg9f1bi2JE/54GJu5Bm1mBhw7VaOU75TAZp3ddjqX5Yhd+EFscWZ
Ahj5+PPtmH0StNlofHhnGQY5+4f1do2Uwmq3uVM3WcOB2y5A45V7KyrYnqNb
PJsCS3bthWzHTkJ9dKear2UKJhpYeap9LcOnEYrJWz7Wg1J6ucHYj2q8JFAh
U91aC741U7p/jEowQrc8T9Q0Ed9lCPEp3ahGn10yEZWry2GI56fOzIp0MOph
+rr+WCZIqqjZO0R3AXfaqm8v2ovxjdCjW1yh2bDesJjuwmArcAf/2XLB9DGY
8/VeLqrtwYPNZSudjGIhqDi61/FhDwRdKk27ONuCRhZTyncDnaDIf4Nq2ZFM
NHywp2NihILVnh56uj8QN/EaKpaX12BgqwTDLqV2PHM1dWSjqQ1W1fjbHZfq
B6Mr8VG0ryLxMC9lMl8iHB5I3Zs0XduBsmfy6jQZ7NFMi+1Xokk0/JZwtzg6
2YBytFtiahU6UUcO2/eKlcL0JwuRCIMC2B9n+oFeOgIMrIXko52T4Kx44Ae2
KwUYFmU5+quKggIf4+7IMGeD0Y8m4RXZmRD75uGxXRzx+KGTz16wNBSajgln
31O0RU3zjHsFEsW4feR2yMGCYny15PSgUjQdp5gfe6JkJrJrGT//vLMY9IWG
6Oe6imBcvP3+wOZ07HiXeS7xpRuyP35yvf+iJdbeO2nI9dQAGEh+xfe/5VfD
JL8aouZXNCS/0pmk5lcF36j5Vb04Nb9KI/nVCZJfCZD86gPJr15u138mOZeB
NHRmHsofE1A0ia29Ij4XdDc/9r26rwg/FMvKla3Th/f+T0r5KSmoKFw1dj89
DDxL6oruRCcAxTfvRtJGZ5zKkfp5rd0NxXmmIpKdgrCkeqX2/R9nIcZLnp99
Wxx+XfHBidPRGp+JF7tOOwdimMR3uxJmV7Cpv7bhdVw4mN72HdX+4IPPlyNG
tr4LwIyUfI+gyggYM1/DKcHuitx+8qkzXQ6YnsVIy38jBVjOjl42642Fb6XD
xa0fk8FQ4saevvxI+HHJvGL//hwM0eXnXNEeCYeCbrnL/D1/Xq9YZ+4skgVR
r9d/nLycB++2dH0eto0Ey9WnbVi+PsQ2heO+517rwR1XkQNmnIWodDZ7/UFe
B5Qqr3Xq8ItE/UDGtf5XM2Bdz7NFB51EjFvZIdt3JwoTebX9KIIFYJLxzqeA
qQhlIy++CNcKREP56Kctt+7A5JxfogxTLnwpz8i2Wy7Cyd/yGWXGCWDa03HN
440dBMhINV920APZ6F9uXJrJMHFZaLcutkLhtgLJbVrZyJI8ZRncGYotPBXc
oeWVOL5rYKUqbyJw0maEX6bLwhvP9rYH3M/DjdEFhqHnH0DpUvnpvUoN2BQr
/Y1/dxveoPULXP8pA3mj03i4xktwQPNjEK1JPQgFKzMbzsWgoNJjNnOdNtgW
PvZKZ3cRvv4tfdn8syP0FE4eoyw2IduutCi6hARsYZuUqGDyx32F68ofnElB
Tt/K1IwzuXiteYDW5WMCzE+tTfy86iVWP59rDt5egBW/F5fi2xrQ8JSL/ZWV
CXhugi/5R3oNOITbANe3IJwNoRj/sOuC3uDt4tuVPJDD5aH9MdVsSE+8zXF1
NgXT7m7ZOetahqd2UdxoFIeh2ret0yXYBZbZHkVd6c9BC5naVGvzUjB/CT2D
lztgtnS07NzKCDxRmz2xXqEUrGq6rknrF6L+8p7j/9Nv8ixIc0kMbwapUGbV
Qe5LyLUprUOxOhzMJ1WlNr0WBeYE1bVHd2dhpIPDYPKmCtSsZ7Z3vtmCD3Q5
5A04O/BXkUaNvWE0lAnnNfz6+/y/qaTBeGWoFPydNgfe7o3C0/VtM4WS9uDR
MUAT6FcM7QdK6Ta+QAyp3hHJaBKJafuvjKx3S0DT4srgdTmdUNlbvfQyrQe0
8iSlBs504t6JaYkLD6vAymxBVSK2D9ivqNpmRzWjj0c85UZcNITk/nF2be2B
/m3cv5K0/r7/a2i5FBf6obN7u7zMS2+MybxwqFk9Cwv+HOXzWWuBeZNck7U+
FXizu0C4ZKoQzX4qs+0vK4VPEYzHBhwL0fO838QURy7sPjZ++y5HJYbM7Ltq
y5iNfXyvfmlYeYLBjjwek8eJeMrvnKvcaCTKCHq6r7x4G45J7xZUbYjG08Em
MZsrEL573TusI96JYV/8Ey49zoGY47qsRldiQFW7tcHueCxer3VJN5M0giRh
5Qe5pe7QYhhjU6bxEFetvTeU+bEa6hzii+9QokGxwX7ce7wOc/e/dlPa04mb
4mb+lGil4lXu1X0RvynoNNAzvE7y733+mG3eGq77IFp/UDPtdSzoKw73nt9G
wZbxrKuqDunQ3eW4UM/biCuFDktn8RaAm+zk/X3LxRgyfqD8m0o4fLXNpel8
ngN2urYrmnMT0FmYfX5vshSYN03T81/xAGhX6nznEgR8xU2c+7opEBBRyTiu
korHbo8w3qxLQh2+pJ+bVkfC9i0bGFJFwuGE05JkXV8EdPOsFB0MCMWJkAzx
LwEp0OC2wto8JRzc9D7P6WlFwdWPNiV0GnWQFB/PIiyUDosbzlwL6C+AmuqY
5zQryrBsbYqySGAdpkTFTBZHBGJl2R2JnWlZKGxHF02nVwaf6PgX64dtcfCQ
NA1lqQiGxiY/1drmw+M6+jCuX6lQdPmi0hT/Q1jOGflzqjjg73OPoejPZBKk
l7LQXl4wx91PuLjY3idiBWf5y9DAYsiPPcJyXcUPne1+7BVcLEfvCP4//lmJ
cO52XMxB5wS0TDeS39j9APwXtgxmvGgBpY1z0f10j+DTY5p76866wWGlwI0F
rKlQXyvcsPaOFbIY/4LwdcXQk2fFt2wRge/mxdfFJYeBfChH+2iCKiQGD6no
zuai5cegW7bPI7GJrfDjN74sZJkr9kgwt4L9ObtDV5+MQQchnzsvv4Zgz8Wv
iiInwmHceayRIh+OvzRPHTtXG4SWioELBT9ccX/9pUmK/y7k+HLo/NSiO9z/
VlnuFBIIRpypB9Y+L0DPyy/HVjLfRdPmfo4PtuFwuaJdOi60AbecAumhggBk
wdI7wGaByS7+82lHANgD3vkLGh4Efh3P7wdmM2HAJlRvR1sJ/hgUeBHyMAC3
MR6SrHkdippr/b7w53eiiYs8zd2MHrzf/OPG/PlOSEvLGhz0rEIeV4fFldF9
yM/i9mkkphmYzhoz0fjEYLMkV2jGxae4asq1wIyuBL6mygbsLnyOLcRvBvGr
8pvqN5H49SJ+k4nfBeK3gPj9IU31W0z82vJS/SoQvzrE751dVL+yxK8S8btM
/OYRvwHELy3x219D9btE/MbcoPpdQ/xSiF9t4jfnH79GxK8b8RtH/L5Cql9d
4neB+O0kfpmJ3/vEL4X4ZbOj+nUmfndsovpNJX4FiF9+4jeK+JUgfpWJXwXi
l5X4fUz8DhC/94lfF+JXk/j9SPz+IH7rid984tef+K0ifncTv6+J31fEbx3x
i8RvGvHLk0v1K0r8WhK/QPwWEL9FxO994jeU+D1J/FoTv0HE71nit4r4PUD8
Pid+l25R/bYRvyXE737iN4b4NSR+O4hfRuJXgfiNJn7Nid8i4pfuCtXvA+I3
oI7qV5D4tSR+bxC/D4lfY+JXm/hlIX4PEr8fiN/f/lS/5v/L/uf/099QJf0N
E9Lf2Ev6G3tIf4OJ9DcKqP2NKdLfSCH9DQbS3zAi/Y2e5CPXJS+E4sKpa+1/
xLzh/i192zTmcviz0WI6SLMIc0LkTsYGRODR8JHFhfYg6NpU4fwpvRDcoqsf
XRrJBAEKF6/NrVi092DSvBTnCm63rzCLyjXCcoKN+n35XJxlbG7Pt3uAp4pn
WF79T0//059vd96lwpYDnUw/vTLQ5znne1/6UPSSWXAyMvUA2kw+l+JfjfBU
h3uatrYUAyIf8KdtqMap3QkH8xv+nttPezY+kkrCxuqIc9sxAb2KZz+9Tc8A
Rbn78WrHbMFSiWV47HAScl9Ke2n+IAf/iM91zPKlQw/HkTdyWs5we+inuD4b
4o3LYts30lRg3dQ2oGN4BJTpysMq7YnQvbKOSaXIBw6/v2qXo1UKG2z3qI+I
J+FMxOpr/e6luG/VqtJ+xUIwUZlWVZkMAaNTgqxqpS1Ie016rJguFTgujK/0
XkyDXUdoO0/mF8KMnzGrmUg8TrzZGzt5phbCG9XnQ99TMMbI7qOJhwXKrn1S
uiE5AWayOgRn9LNArrK3QudKJuy/fq09XcEXDYPu7SiOvYVRVTQ8QwxpeGXo
5WHPiSS49SNLVK+0GCNv2vXyeJej7epR55CSBKBjfNWhIl0G1S7noroEioDr
fYgl/9ZsWIhJV+y1KUJL8Uaa/BR/fPJeVtvDpQiFuOyibWSL8JfFwaibohR8
uMnv0PiZVqzz7Ou2v1uPK3hDPT+d6IJPZgqzwi3leFWxNP79UinSSOy727A+
H+RTpxzlAyLgu/vbjxK6ldjpLbDihmkaZqulRVUNN0IJnYLTfvVEiPD9lcgB
2UgjJPqy7WQVyk04SoBRBxzzk/uhJK8LJyZOhZwdjIJIVbVb/klNoNih4i5A
Wwd0Upc2sN3txGS97rN6ihXQ+n38jJ9nE1KCra7NMpaisxOF68CbaIh77i9U
KZ0EyXTJdup5tcBt18Tw+O/fpy16/M+EUDE88H4ybvOoAegM5mPkYnqgLjOp
73xCCAb+0ivWZLBBpQmOTX152bA1q1R7t3wmOt6/rf8xqQK4Sqwd2HkGMGlw
k0ZRYRk26rA8rXEuxmEh5QoKfzI2hij3D9Leh4KD7+qsva5A8P+SX43/t//K
hTo/WN9Hza8uk/lBGh2y/2qGml/Vq1HnB20tqPkVLcmvetZQ8ysmMj/oqVzV
NVSsg2lvm1JLDXPgFPfM7i6LIth/Sirq1eZU9JaXvl6xWI0nxe2M9nAWo9HI
iFzHyhRMidmqwbUvA+6t3n5/hD0YJXqmNt9cYwFvHJJjD6hVQcPS47q6ZAok
hE05DYgE4gOJqL20nA3wZZuN2uVFZxjbqSLGRlsOn/aveC1ZkwC9KQMX4+Oi
0D13A+8VU0S3GxnqrFoZ2LHy1OoS53xwNT2S9zi8F965svs6birB9hEPOvkL
uVglL8Bm+b4Qpn6u1LQVbQTF+ON715S5w/7zsVWvyptg1uBjSUxpDVaz9UTu
ulmLtwbvCZ8cbQR3xvNvPd444XYley7hmaK/z3c/AQ2gQN0KJTVpShwypThe
0Fp8ABMSEqk//gRBZHShrbdgHQj9qbi+vjsYDlmv5Bi+XI7OLTp+vraVeO/N
C9GXR8rAp993188nJagcF7nCOrQOnB0XtuovUlDqg4CN060m3PRMRVfItAEr
1tmvdZyyxD02ocoWmZ3IaqHK6C4UCy5l20TeJTdC855Yz7WT1VjpaW1S052I
X3LhxcjdWugTdVvO+VOEF1fxxW13rMDt59gXD2ZWgMep1XULW57C994ynYAd
OTg2H+wYn9mMGsfON5oPdMArxqGOYLNsfHlI078nLRjbN159G/f3Pca9fr3P
p7AAXJYz1atMToZl90PHzJurcIvpNreV8XlwdLNi15WeVOCxpF89npoGVwQU
9j+Xi8BrqiwiDSv8cfVLNhkh/QR4ulHN0WRVAVyjvCyLFonFDRt1F+iiEiF9
zVVXv0fl8O7CRon90RXgQ+Ge7P5QBsuc7X6aQQXA6UUzHMpciH2hCb5Y1odV
Nu6OtwsVYf8l5YuMfzLQk0nTPLkgGqZzWeiTO4Jhq1rN6IalfLSWdB494Z2H
SVFYpNOTjidUxPqafxWgQfvC8OP+FDx5Xnruxe8yPCRmIdcQVwmNW5WG+JbN
4YW31uDVx0E4aBoSmVTnAGLcbNUmPVF/n2tX3B58D8AmEZvrSpZFsGDiVb+F
xhG+w8kvPbcTYGxPhCBTayUwJXWoSq3JxJ26TH+K+ELwbWTjlvp8Y2jse58v
GCkH//Wv+El+tZXkVyX/5VdPqfmVzAtqfiUzQ82v6kep+VXCF2p+VSBCza+S
SH6lQPIrfpJf0QRS86umvKR5scFMnOJS1KtOSMSouPnbIbFZEN4qnrdfqAyT
AqK/7qwIwKe6rlYu3Gm455pYbTVXKNz0+P0y1DgTvg0V7veatsQTbw7cStUP
xdLc86dkZSwh5F2lfkC+Djx8CzO3Y5Px8fSLvm9fQvFjd+GXX7MmmDRsF9D5
NBw/0Z8TL2SNRiFp1tyQ6EeowjHsQGn8+7731Rt4W6GKO2IVbWS5knBTzLuc
PuFboBjIx5W3HAur8i6nnWbUx9lakRO04olg77GrV+paKHTu+sJ0QPkBds4r
8IevScHwiGje7dFeoHPwLvf73RYo4ytzbt/1YLgwWvBEczAZVmf0Pcz28YKi
F5+TPrK5Q3rSThGLr+aw7RLnc7kVRTj0PXbRlTYUOIW3rfnuUgwllTFWDf6e
sP34uB84BEHpV3qr+FtR0DGbl/Y97jpWVCrZq8hVwmS71vqzxQWwl4997VUd
TWTLMREW+RmHJ1vtt/7PPID1j62iIuWxaBzYZsyoXwUGAeLzNkaluOJELOuH
NUWwRa+rsrQhB09XvA85+7QZlzY1ptyadseXzaW5Va+vwPUyeoGks7549Kx6
vc7uKhSTcHziesQTbnG+fdZ5pBDZM3/s6Rw0h7QwyaOXK9PgrqXy/tE9nsBz
dzGH904tRPg/sZPnLsaRvJvN0k3e8EJq6+cLcdVw8lcKq7ZRIcx1Clq842zE
9Ed1B/fVP8O+fgWm91f9oaDrevd3jiCULh65IVAfisMRFhrcUhEwpqcx/v16
E8oNdvX6r3uO+UPj3TY15hA72LMY1ZKJC6YSMaE3k1DogwiroVk4enrFFg69
zAWa6u3fU3t6wZOy23XHir+fZ/fqw460rTga2R6i870Mnt57ubJu7TM8x6/F
W8HfBsVLeUbCzM/ATq5TuV2sEi1OXnss87AZL651Z4K//3/Mjrp5u9soqHjT
7MuiWjUqtjkJ1IUlYHle3rrILWn44KztlmlaF+wy1nb/WtSGHftDtTZnPUSb
0AN2RevSsWTDIQ2fo84wTrnbaPz+7z2vs3i72NMkpA111jyyIQW8D6gWvw1u
xIY1+m/DBAvw/a7I6aYOT8j8o97UWXMASo4bOTR/tEXWuGcfnSkNwBoa+vml
fjLeyKsTuu+djoOfMlOfBHSCn/aQ9auJEqyYLf/00sQOxTruudp5t0MIV8v7
TJsIUBO6+ehL2Gv8abDDtc+iA6VEcjrkonrxpev6V1mbn0C1SIKHjUQZvm46
Ji3dHYCh7esL9xRmQsgdytmp9jTIeRtoLSsdi9xR8rvvrsvB0Pf16347NCKT
QEsKGOZjDjvrSf6yAHy/Y6271mQReO1SfnZ9uQEnO8fktQMrcLdHYeEh9k7o
WvrhG2L89z365ZbypdJozPv5yFDiWTxsqryoLPT3eXlz5ZuBre2tyBJzyG6t
YyAqdG6Kkad0AwPz89iDT7uAvpFTdcWOIAjvFvrzpbwQit7ZHM1fZY+ce9es
XywvgdyGehom9XKgc6K/G5FZgheEdu2t92uAOb9s0zb5QgCX1Hr6+gww+mWv
0MUVhVbmvnxv7pSi9oXQ0C2vMsH5bGp/X08KVNzV2njf0B6N8move37WAlFh
NsoT2gS8zCg1VvTLGj7wnNL2PloIPSLSY4JvvLHDYyyw1bIA184KOJuY/b3n
zgtVLq+JBwN69hUbGuqhIqODJ1/eC/38V3FrnnaBWP4G3t5jCbD5+9P7wYvJ
uObE7ZRh2SzQ2e5RcuhVOVRxHy5QP2YEz+fuXH3xIQCmFK9N5f9xAINrjdrx
J4OxaMizc/1wIRw9v6XinEY5Dg8FcoxvTkDauNudr30egol4KZMOUzrsOMAd
30AfA8tnvd8Zs4ShwsbjKHnVBbfejDg68CEJf2S2em11//uc049+8YESi9ds
67YJO6YD+wf38NgQb9TcNa6/kSEe0x8kyYV7ReKNK53GJ2OjoH2HoGj4QCKK
nStedf5jOeamXLWWlykEhv4r1jujrfD8S3lDTcZgeJLXsjwxnAROq28kF6RH
otiJkzssaSJQczVj/2SWMY72Lua/A21cM8qpcUciGtJXvuefCXODggOhBz1F
4oHreVs1/bQxfj3n1Mg45I2Bzy6PtFc/AB93p0vZ80XosFsrtqbpEbA/Hej9
Zv/351qZ9m3FR8h2+lXnudEcfNpacXS6MgKjgg14jolUgESls0M3bxJUD09+
0BdOxJrba+iWZXxRizLxYUnIEttNVwmahRcgt4rk6pq/96GXuit1JXcXYp26
/1s5G0MYXqoSeTXlCS37D0ktKhVgU68lfXahGQwm1idu03LDS+Odj3qPnQdZ
G43ewrJD8IJp4tYf69t4uqHyt55NOVQ4MFY4ZUeiyh+d9vsjcajVG35ylW8n
Dn+VP9wxUQK2eekMNxxs4coee6kSj3asv1DGfMo1AsOTLeViw1/DoNBx4XzN
TuArr60+c7gP1PWYxkM3dmOei6GIxHwZyBC/nsRvFfHb+YbqV4P4zSV+o/ip
fvWJ3yfErzPx+4L45SZ+KcQvzVeq32Lidyvxe4P4pSV+TxC/NMRvKYXqN5L4
lSd+6YnfIuJ3HfF7nvh9R/xqEr+6xK8l8atH/IYTvzTWVL+2+VS/h4lfGeJ3
hvhl2Ef1W078riF+XYnfq8SvM/F7mvjNIH6/L1D9/pCn+lUnfn22U/1+JX4r
zlD9ahK/ucSvIvHbRfz+iKX6tSN+mYjfz8SvK/G7ifilyaL6TSJ+VYlfAeL3
AvEbRvzqEr9txO8B4jeH+F16RvWrQPy2E793id8LxO9+4ncH8UtP/BYQv73E
74F+qt8m4jeI+PUifl2JX27i14D4ZSF+64jfeOJ3F/FbSPymEL/2xG8P8buF
+O0ifpuI3w7it5r4rSd+p4hfZeJXiPj9d37wv/3tM//1r4JJ/+oItX81+t/8
oBC1f+UcTvpXsdT+lRKZH/Qm/atyMj/4g/Sv9FeYfsvveYjKHoNrOeUi4UA0
SvBfbISXokMburd44fG95ypqxgqxJ4cjd+hREFzjazW9KtwKp4Jj523YH6Eg
h+E6qy9eqAQyb5/WVcEHTY1GERl/WHxqnXNEuB64OTR/bztSg4yt7FmzBqlw
M+y304kMH1CkYXLJsisAge2Ol/i7/bHe8/GW9+HSqHTY78xFg1LcmyUnd35D
PVQq9hyztshHLaOpXY/5PcFR8Nv2U/PpqNuupa+sXYtLF9yC22ticTGC42C8
bgwIs47FpW8NRnb3q2sdzyWhju/HvfecDUH3bejX1OFk0HC4vEurm4K53MIC
X6ZrIFd1d3IjXT3wG6+Oyt2bjigfbS77JBFTUyUnxt4n4ue6XhNHlRqYiJUZ
k97TidOOSzJWOX+dSKYkH9cLxBXu3/NvTQcDG0uq4wHzShjUy95azBkCWVY8
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
lO41ice41b+P6Q8oIX2U3MvfFt2Yb+f9zIzFBcoD3f4e/hKMu4cdn9uzdCKd
i8HtjGOl4E5jxXVVNxkeTL49ZMKfilH/H2HnHc71//1/FaE0jFBKkiRKUiSp
Q5SRFVIpe0T2TFb23nt72XvveV5m2SpEUYikJKu0/fw+Xu/Pdf3ev+t7ff/v
qoue98c553Y/44G77feD4ejTKLdze2UJeJ/5aYuez/Dct4pmt416tTYTg6hN
m+HJQL/QzeuFeG+dbL93XSbu0Pt0JZVAhIosY2a1xTR8uLKTeLqxBBwuaNj+
4LYCTt8tny/V3QcGGYeIwLVAuPbu7aUAV3NMSH9twXCNiCP9TccHC/IQqLYP
U66XQf7Azqg9qh2gMnDy3cudlTByeF/oMaEnUHa9VW97cCksDFXIKZtt6GU7
V9pxtl5cX2fTPvbGH1Nmk5uLucrRisyF4854Gdo6CGvOujyFClk9kZnBcBhz
SOe7fZ0IW2P5znKdQRRncaBKFS2Hx4d1HbIKUiGXsJrFwVYPke3WL7jfZmDw
tGiy+oo3FnxS6j6wtRz5+A39b88j/DU7TTPR242xqX9/Mv/tRNP07ojw8Gos
mKIumFxPhztLhQ9vVFVB3Wn2teLUBOyu9HryJ9gfRFpZ8omRCPa/z3H1uBIx
9rz2R+N9+Wh4QeNLzW2ENcj6em62Bvr6cn6osJfAzPecS+9PJKJrZsutSz2U
cFtNJ+HmWj7Q9Zy1DFSpxaqh5g8UVfUwfUzPHrZaAt0rdfceuQBkMzr0WJA/
HfyqWHN72MuAm8MvSH06B49/POSTH0vEmD7jYu5lJyjME5mJ2ai/nJ7vV3rr
XIYMvY0Lfp/TQeSXTeggVTPsqBI5GVpcCZTPJ7Ob8yrBdDr9YfarZLCq9WuT
q6gCvrzHBCGJMjggNmlhlWYHTu9+mocxNONwk+fN0YEqpEq5SL3rUyoKlAul
sX/vxmmqYj5ZqgbYc8JpVwNdMDZ7kMlNaRWAyylB33tGoXDA67ZPnrIJStll
jzTYuCHzxZO9f8tLsM3PXV1tbxhqvz+mm72YiByrtTvqP9dj3c1JfYWwJBAs
ftqtszUNuJ+YvUokOuBzx4Jv8yHC+L/1X/2z/0prfJNfTSxu8qu970j7r76S
9rcLb/KrUBK/8iDxKxsSv1Ik8SvieSNFHodcJA+UD+pdT0VNQtB7vuZyKNVh
If45k4050aWTIVfjcJAu/+qRqhi8JUoXGbc7DD6vLsuK7y4BuqypJ8ujjlhW
5yM8aJ+PWWmSC3NKJchmuvzoomga8H2lzyw9EAdFmho29vFRoNX/2ouftQSn
DTxPdKgQgEv8zUvbk8lAWBKTVqXxw0/HZC0cWyrAXTaksepZPEh7T16n+VmC
yyMdzTlbK0BAeoeqoEkWKBYwWhUP1eBJmRQFtrpoFEvYZlXvWQUufxMvdjV5
wZQo2/qLsVrQOtAlrrnFEwl7PympsSQg+2A4odMhFhd2NyWFR+UhT0GQ94J9
DD4vtM0jq0pGywMHq9s/xYL6gVc5piNxsNvpj4/aFV0w7lt6xdNbhV7M6SeW
Wiux85U0sVhSH6w1pvqCqmyxLCLeXNexCY4Mja/UhA3geY7VPCJZM/oNreu8
aE9Cl9tawvkPyjAwiEPVlikPOc1HSru5e0BgetlZUO0pCtpXZ/JdzwNHl+7m
1q0lqPz9+quRzhz4YlpErrZOwCX3z2Lo3giE3k+fiNd0cOzs44+zyWWwnLdj
MsrEBprH79aYztRjn2x6WeW5Nhi85vmbK8ISwh+qp7Rt1O0ZNxn7qLcglutU
DZiX5GJrhfTveq82GDMef3DPdRxmjz388iOrBPdQnlLtik6HQfeoScdzG+9M
pel5dd08SBBEfXt1d4w/N/TU0SgJzZlxqKi/GS2VQ36FPSiFjxUz3UNviDA9
/bOEuDUGGEern4lq1qNRfVAgz64iYCrgHaC3LgCJhfcfkouzQNBY+TB2ZACV
fFGs/O9Q7HOjiV6naAERfqHWjmPF4CA0dnrvxRLYQ69rlKtUj8c5ix0H+IdB
evCQpK1RPfzW7KN4P9QEXEZkGoqxieg9HnVdSiAED/WPExvr/OGsyfsrtNq5
UO6vFJ5HHwxmv8IoF93rsZtxDu6xZOMVgUndlfp67OV8RR1blAK09FfpthVG
wgneOI6JiAIcV0t+XLNMhO5Lyj88Bivxab1OxkfLjXqR+MRlTbMGyChLW699
L8VvlwZLqzojod/kYmPsqu5//aN9/0P8JU6Q4u9xUv+zPqn/OYYUf2NJ/tHa
pn80Qoq/XKT4W0GKv5Gk+DvAYqqlne4Adwof/a7xyMeD42nUsjaJUES369wX
fsRVcbdfGaZP0GlJzDpM1wNcXz+4LqclghlaP8dMG6rwsanXrq1xDbD91cqF
y9k+AKrjQ6oUSWByyvk5X0Ap+HpZR1jq5aOiUczF4XZVUHwQ1nrwpi+uTx5N
MTMtRkk7Bka9mwWQJmY2e4I6Dygv5++8+6gEvJRSpHYH5cDtA6cVyOQNMM1M
hse8shDnzXfMW55swFVNDkLNvjQ4VzRM+LKSi47afO+qjFLBtPpJEv/RerBP
dRVj48vDOn+1y/b+pag35DZrZ1uCr18u5Ip+88XuQ/ZmBxk6cXdggXOOeDWW
/hxnqzauhs+POZbPnIlHun3vftRqRcJY5HbTYncEg4SkhejCGugxOmQ48bgN
mRcqVaPLO+Gb0WBInE4QfN1tIsy78ftYv/m2hro1DdWVwiipT5aC95/6uK1i
GXCu+8/8p4oaNI+DT27jT5E8dPH62qwLvM+6sXD3ZDle35ojF0X0x46nxhbE
+j6cjn289LGpFnOM5d+lpnXhQY38e6xG7ejrMTp7/74+6NEq7R7qrYGu+OG8
D51PUVp25Piz3TXgbFl8I/hRBxTpP+uU8oxEji7TN+YD5YiqV7vsTteBQJup
KDaUgFy/0lBsWQ26VJU1WteXoDkLVVomoQrDCzMFA5/WQfjMZMuYXyqcTdwo
MU/FQy+bkm1McAP8FThzIJvmOQYuXEzmiq/F33raMZehEi9Pnkyq1CrCUr69
egJmwWjLt7znvq01Kja92yG7ewCE/iq+09PIhrtmd9M7B2rAtW/nyvy1TBD1
ZpPZ0uOFzlh2LSmnBVwUOzuvdrvDIHPegQXpHjQb3VGka+CDBCWmy8Fjlfh9
p0W4dGEMiho1MVxOswKOXNby7uxQ0HLy3/36bQWk0FCNMH+JRL2z40bTY+Xo
/9LoYf/PNAx0ITgUhUfBVyoTnrlHaei3bejHg/FUTHw99b7IsAEC95+LK5Pz
B2k+M00rvxY44u2xY+j7FTxy5P69IJl8SHRW/bqmcAOkdIalQ9di8DUj/Xnt
qyHoV603Of/KCq4v9l++1ivz3/j7P/lHrn2k+PuKdD/l82b8XSTFX9eVzfg7
ILAZf2tI8TeOFH/1SPGX/Z/7KXXcnz/uK8Kt9fapbIMZWDTY0tlPVQUZcW4y
DQHpmKzx8S7fahgy3Qw8/qLbA6c0PySdYo8AFyWrgJUX0dB6gClp0cQNw1ou
S0jm5KHi4a8JgomZGPxq5kn0pAcSc7P999sm4cs7lF3ZgQHAYDsDB3kJ8OrL
8B9hdktUHiC7T8lgiSYat6tyk2zwV2Wej+OaF16dLX9sVBwKl5I9XSKrs3Cs
Nu+LmUAoCD0sDJG+EQ4OasGKE0eb8WhGQYRCkA04mIfMZyeVwNTFtqK/B+Kw
TTdm1MNQE/UtnZz7LMJA7dnSL331ROjxdcy4ejwP78btv/RyOB6/vJH/qTcd
ArmPD5XJ3PFH+bN++37rEYBXSoUs8VQ6mHxYL6LgqgCHXfp/In3q8M4qw2Tt
8RhcIleLNxxKgWnxkZP6C1YgyNBkDXHZIMiWoXRHJg56HYq1vOhjkTdzrlB5
491xJweVk2YJmFrLw/LLsA5jmWzit+c2Ix19I79LTw58bp+hvKXlCRzhugyy
rnU4GBYufdY8EehsdfQ8lHJBWH9PMzG+GMQcxpJETKywjLZ0QcUvCkcur3ad
OJoOnK+T0oclSzEW3ZyXX9XCJ/k0M4NDzdAi8LaLW68E3650+tIca0Bb88qu
tmOlYClDf7rFtxnqnEoqOHOIWNI6H3BzNROM/fq97ghXYo+cVch+xlY0z6C4
+bqtGbQWlHzCejbyZ9b862PXk3Hxb/O84Kc+HCscT1Yhr4LFbM7E2z4pWHEo
/VP1ngq0Y8l9R3OkHYW2NBBFTQpgTLdNgj64Esm/Ue+9G18AJqkdvR/kvDGg
3aTdpKINnu4YjeUqJWDMeVZpbsVuzJX+WNXEGA5m2nnMHa6t4EPuUxxUXgmR
pZwSp2VHsJFf3CtDuRu/kd0eDKB2Q5dnedtZr8dga5GLY83rCiQ/1KrN8icS
zIw09tn3p8FXLfXilPBHuPyb7XrYxSyUaekqluLuhBW6LRcOPsqCZo7HAwKn
a+Fp6Afy8v6neOjG27/kK1GwJmFtWl39AqT13n/cFhEK4S8Ldh659QyvPvCc
32qXiFJDOjVfz1vAhRpbm/fmkmD+r/uDE/+eH0wizQ+e3JwfnAjbnB8kntmc
H3SNIM0Ppm7ODz4l3R9sIs0PWpHmB0+S5gfT/+5QMHlQgFLvD5zmtIxE3gkl
0Yd/vcFbQmiZIYmAvDJTx2tGS6Htou5iRWINWonVtWUyRWJg+L7rcTohoBhq
bbytvRldjoaRxY404L0Xwj2Bns048Zhm9Lu4PWodGZin9qtGtkIhVcY7RLRu
ff2TSrQa5tij8wp0E+G0nJJJakwCrkaeuJ3hkwO58zH57sX1oDfEbnH8HgGF
qk/usI3xgjaq6ERlRlfQvcZKce1LFowc1NmxElaKiWNS0oGfHcFe1b0rTSAB
hGO+Jj1OasbZPHmry2iH4z9dz6V3ZSJKWG6jeFgJgubd3ewEazToV2BoFunB
7ddK9tstx+KEIyHuZKQZSkHieY5rEdAd8f7v3d6Kjbg7sv+ZXiIw40V/kbvZ
4JbFbnQyog06DvFIl5m0gOTBrQncn3JgL8veub3qTdBKfdvw/KUW0B5yLz79
tgEnuluZUwwJsMzIER7lGQYs6YaEoSOuaLnGshouXI83xZPfa6c24LD8SLL/
3VY8xst7j8W1BBN4o+yH9riC7AxNh5xqI4rdM+vau9yBh7/MJRxWaUcK1lia
eZ6n+G3LPGj8jQabr5eXXdxq0fLgWLuwaC10GU/c6yW24+2XeIfpbTvcvmNd
qOOcjtX793gdKasHworEOJ9ZBujOKW786Xi4ePLXqDKxFubH3wl3BpTAt4+M
7nUHCbDLbLArbLQUOe/T2nB8ewJb5uLlNX+UQU6FQnIKYyyYGO/5pR2WhU7j
Crb1UghKgZTebHRE/DXyexcTRS7oLe2hCzvUhSeJvV20PToQGKytmpJQh1nX
vjE8uFQOP4LpTD6tN2OHe1e7vWooPGJWCgxtb0XDEJqVHt0qPMZsUCOdV4of
omx4BEezwWFr21idSyvyb1+5ymzaCDvc9fVFfrTBj0Qu2bLoCgg2DGPqSmiB
RaKGxataF6SXv7fvoWY/qP182butJgK8qapqNcTqsFPN1k+hOhS4B4d3bsty
QPLSpxFxonnwN8u5zT6iEo6VrI5jWTH4E52jtZ09sP2PJPl0SjqUi9Adda0M
ANvrU1P2dHnIPKK8oDXgC4W3wG+UUwEt/4f+yf/ur5Mk9U/WbPZPkv3TP3mF
1D+5jdQ/GVryn/7JEVL/5DRpf90jUv9kjftm/6S6msXYQGcmKhoezrEd1oaS
9ptXwly08dffaJMW83i4QqZe2+DcDLZ3ZUPpPauRRiNZB5Py0Zj9fe1EUCao
PCMcCj3ehi7kZFF06g148Fi2+BUuIpSFmfsOvI4Fi7d7C/M4y/GxtfiTrMA6
/B78ITzUMB3/euzdzSxUBkc4cxcH/tSiDsWE3behBLiqYUJGo/gUWVUvf3gc
monJl94VvszxxJwDR0f9jQvRZaFVQHq1HqdHh+dNuerAP1mFPiakCxWKxhle
mziAMMvRVddbzehWVfRZpL0FfK7RlMqVdUCLs0ymQWIkKNGcXXM7Ewm8x4cZ
Es/WIleWDFut3BNw18zJkigthKGXBtmar2Jw9wVlmwzGBhTdepVF90YECiT2
zM/xE3CiXeAZrNTAfae9fUmcz/GBA52STmwnWO5r0v67UTdc7iuUa8wtwY6T
hsqVO59hefdXrBx+ipc5rigKt7SiRnZs+5fD2cibPrnXuL4QLPWHcs2FasCE
euprt2EHuJKzFXHmE7F6lcI1SqMa27+2i0o9aERJqicHjMjbkMzWYP2OQjMc
+F7Q/lqkEQcqeOJy5lpRmSosr8ohF3tuDyj72qRhf5ud3XOLZAgJa/SoP9OA
hh/38ZU53cFKqf7DW6SroUpRqjiTuQx6XvIWrrk1okNCjpUwXwT8XKoVOjju
hQ/1xN8rM5bCXsbuw6LTNnBiW/n0em85vgySYjzOWIoXrwnkrmXFY+O6/NcG
r3wcuHy5hOdgIsYMsEV2E2KxxlLsO6t1HNBqJGs+udgE1Hdm/HUn3dHP/Lji
ydMNsEtf8zFHQQ7sWRs8dSQxCHgtzwWPb9Q5S/OqRvp9GZDN5+kXOJ0DYiZ6
aZ66j8GBsd9RQdgNl/uG9y4l+QH1Mo37fe8KoAtmslg1D8BSe+VZrXcJIOlM
XmEikYPzhqMSbTKVUFN7qeyTTzN4H6Ei/6acguBk0Ot5zh4Prnesaoma4KBn
4PMaDj4ky5WaLDichTVM5oI7bzeCcpffotGcNZaCtnTYki388irj3b6zEcl+
h3IyjfnDZSt5gtCkJh7rPgVc75WgzOZtc76pCP77/sI//tG7f+4vhG76R2Qc
m/5RTZvRf/wjgvbezf11uiT/qGXTP9prtukfbSf5RxbbN/0ji4JN/8gwWSDt
Qpo53Hn35Hs8WyZEfXasLyqtAvmcDLdDh9OQrSHNUZnKGzokL3IYqfugHH/E
xO7YArim/3jrbd96zPEapVo8FIm5czpfJQVLQdXBvn/nQiVYjpaqPNcIR27L
t1pS87XI+eOWlKr8CJ59MCz67ks3OvHyvhe6VgW7jgvli1fXguAKZR///nB8
m5T12ckiB/jKBniuGuhDoe/Q/dErbfCEvjFRdYoIYyd5p7nFWsEwuo7iyKMs
ZMw1Wb1klgmyzSuM4Qw98ENKJqmgqBF/3x4Y59F+gp79Z7+7Mebhri+vJZRq
ezBDB3Ra+Z9AUodU+/SOZoyvsk99eSwbF3MEC+jTnSGhIiVEcIwAj05phTKM
bOSTvTIM7F7xINM4qpB4ogsVZyq55/cQ0Onp7ku3XYsgdMkq/JNyOfid/j4j
c6EWrOg0HF6IdUI0+WTAl+hcDJs05Xv9LBusFl86Cln74rGSLS9crAvQpEdL
feepUpAeKe3yim4G7uvrT222tEBMWkNVmX4q8Pnk7zDibIGkbeFkV8XL4cLV
mIAKmyogBnAKx9E3gJImG//ZLSbgnyWrvrs2G/B+YXT0Rp4pcXromHRsOhSm
B+5mOFOw8e5tGY3z7ES73w8W88/GoYPRsvSd3puoSl0lZr3x7hpQfFAvKfZF
oXraS3dtaqG0eP7p0MVMqKUT4DXzIkLRhb4J1Tv2aLaDcEVcIQNdD9trP/6T
iez3t2VKpceD5SCTgtOVGoyeUu4PoIjG25djt6ibaeA05/gzReYAfC7b7H7s
dTX6cj/z+eETBSrzag9pv+dAjpbIVOLeM3B98ND2e7uswPcWRd/3po08XPGT
TI2eDVJeaA35czARih98sDQ8vVGEH7xZfJ22BISvix600ExDM0E6o206idCW
JS1oNKINJofIfJIueyLE0jT7r4VD2a9PV0ysq1FuvuC3pjcBp3w9zkkkJ0Hx
TW///MGNd+rF4enf4zGwy4hOhG+uEW+tKuYcsS5BB3LGMwpibriDrCOtizER
k7sO6Q7tCQVlriHznrZ25PlxdpvGrix88S6H7KlpDLRWOTwiRFvgMRahhmfC
ohD5v/i/rk9J/q8Byf+9tun/ilZt+r+EpE39kr3f1C+b6f+rXxvS/ZQq0v2U
iYu60ju9RfFsZfvYh4vpoGXJdN7KsRDI/cPm713IRoukoBz7T9mgWctqUNJc
iCm/pxdD3tQAMYph+6H4RODQnZ/teZeH25QJP/ZH1kJVVjeHz/Y0yOJIEhu3
igHGtIHQisU4YLWXKdC/1ow3bE0nXu9IxrY/3M9sErOB+Yskhy8TgufIL2FG
7wDc6VZ95Wd8BayfUz/dFZ8MkzZL9SNIgMBd4kZfjhRBUlWgGHVfM1S6yuS/
+NoO692Pg1qEyjGq2NEpwq0D6hw0rD9svA9vT2cHWTe0waFrb884n6hDxaov
rsFJNbid+gbcmivFLdsbDD83dWB1NJl7AEMBOj12dSm7H4ChNNfm+NvzUCNa
JqXIF8Gg2iLdwMUaV7zvNlTNbtRpDPFErsRUML1wOPAZoRWznPSL2PVyceqz
lHSvZC06Pv9eDSal+Ixc7Pj0pQzs2GVwnSuyAziqSyc1ykpxK0+e4HWxGmge
4P91gcIAlTvniq2riPAjr/bnpVvP8YykbXFdXg3GHe6gvlBThbyDDOY7XBpQ
ijvGz9s5Bp5quf92a8+B0/YOrDw3qsHNXWzLjXMl2Dfjpvh7rBveW1IP/+XJ
AS7O6l0h1/tg/7Q6P01tHpRMRX0cdLFEK/YtNw5xVaF2jc6d2+cH4Pg4ISK2
IwPf7B3NUq1qwq7B3aMXv4Qi/+fmiGpiBya9CTv4hTcMHn6/4fbsQjiE5x2q
W49OhTgxNwopqVQ4V9nFpPekHurXTWboDiXi/On+3fMuafCnzdfoaHk9ZtHY
eOhc80XKeWfjuZZ6vFdjp1HvV4tOZXVqp06nIlmMs7k4WRTIXBKiPVyQC/Vz
LncSfaOQ90/Yi5tfC0A1iuX8ww+6+Ec9eXcNVx0u06i+brAsgeGfJZf4H6ai
XFEbg0pmAfx8Zx43ld+AZVUOwY1+njgsVzHF+KgFLA6e7r9GlQVCN8qPxO9O
Qu57rEIUcipwWvDzCS0fTcij3imT/SodeEt8FZLJKkBLtMB6uMYX9Ma+tr28
YI13912r7EkoweBDjSk+p1qA5fvnoTDqEhCJtKR4880OSqO56DNEL+PymRiq
fXaS6Pav+QWzf80vED+R+PMuEn/m3eTPWnYk/uzb9v/ML3wgzS+okPjzh3/N
L0jq3NzaWx+HXGtRQ89/laFa7VsNfrkS+GD4/jCDfTPWndTiFLxYj1XVtxXN
XSJQ56xjS8OVEJiSOnV1rCkeXba5Jb3yLoO1ybLY7LkcENWpFxG61gzPRyto
JWVbcMKbnaJhpAruZVVPaygU4F/xdcXjcqWguO0i/4qTDkp9M/KyHQjF2y+U
LnwvLIcsm8nVkNAa8E2+fzPjXANgeEQya2wd5FZWJ0iE24A8Vhpc4irF4TlF
C7k9tXCbNt1Ds6IdJSJnyRM+9YGC9FHXJMcOCDpQ0fnBoxqb1j4TfrFEgPHa
Jz8+xXaIPyMTWkdXhjetXivPkT3FkD9L71K/NWH2fMfEAcE0cK7W5edMagc9
pSMJBuP5yD3XdopvuQvon7PYX1Rtg0fz716LCRCBnro2v5W6FQNT1mPXpquB
fc7kvZ7mUyB2B2Wb+zZDrtl7vhGzZpjtms8sVulGGhWnOAPyLMR1l+k9XbEw
WN8qqXw2DXzIY++5N7Qid+mtuUlqW7jY8UfQW6kKXMRcOw+dq4SZQF7fpZNZ
cLfcMaXidB3s6eyQyXPIghkzYpJGQBu2u4jQpm3ke2pTC8bPvRF9R5Yzs3dV
476eAOYqo3zY0VaY5funEimJnTx5A5VQ0XU32OFKMlDUVR6jFakF2XM3Fpqb
yqB7ttuq41IqpCkzkRVtbYWDq20FWyoj8aNpkvOPUX+Ivjgi2q71BMtiB4LH
VJtgm3EzpWBIGnpvi53klCTgvWtVNsXbk/F+QOgD8sZ4kHNe2CNXEwb1gjdK
mzpLgfn1K43Q5WqMa/CRYGHpxhzbLzRO2b5Qzhy8u+yZLyRI/uW2KE3DRDLx
fZYhmcDKE8lW4lEOcqGHnp58ZwcDzHWi7hSpeFIo+kwvRzo4KVIQeJ5rwELP
FhYOcIWxZ+rV4T9DUc4k8U/xlQxoUuJ5uU4WhvLTNWr3nItRbsQ5PdA/HRJu
Uxpm/05GyZrJIAXxDLhxXbI8NrsENJdvLWUGxsBI/YOziX+ywEXoiJiBdia+
0VHeGeRjgjdEHPP0EytA/Jk3rWJcBkjwHjH0vJAAnuLClx8722L/b+F9mabc
SPkv/szyb/+XxJ9dX2/yZ9F/9m983eTPhNlN/kw8v8mfY0n82aFkkz/TkPjz
cugmf36goJYV2EmElzNfklrJ+qBu/fROo74WeJTGwpZxrRrzaU8GllzvxJbA
uPQ5aMNaje/80TNPsGf414/tZVngcdPA+7N/DbiZsZXwe4VDWj+zEntQHwzV
fT7TvvHefDgzmuhd1Ag2Wy+PCaxvxKsvx6MuhwXA17Ta1639dTj+0fS0nm0p
mvB+cyTaPMNhKZYDCRKdGLG1sbdy43N/T/Fr1x9iOvCskWeI1btiaG2CRL0+
EYeib1RK785Dmn3n6l5MVgNN0DuOxmxXoPwiy1H7oQGCBwcelseGoffT50vJ
MhWwo7OkJi6/Ak+ZVByLvlSHg+nnlvOo0mCbhzzDqI4Hut6TenneHEH9kzqH
0u1sXI5j4qajqAEP5fIExudJaMD7k3vPbDUoas6MeHXXwZ2orfbOpzvg4I+0
7+QUDfB5cfwiZXEKMDiUn7+6kTe/tyobYGPIBNFmCVeiMhEUk08F6WtlQtDd
uPGtH1vA42vj3M2OYlA5J+gXfL4E0jWociRoS6Fx4K/q6Yyn2ER0uKOcloes
k1z2r+44wtiOydhf1snIzWdZtMDZCFHTa3Ku99JR4FZwL69HOebnXvpZN0hA
6Vde83n7PID2Je+gsEI83AxKCGE02fj37WyffRBpxqAvkq++m+cDXxh375av
jzD4GLMtf30FsFQOrYn1aWHmIHfayWtNEDsl/Gj32VKwWA1mkHu/kT8apxRR
rnsixbGXRP7Ukv+7B8llqq8Xsry3jefvCUdhWmbrU7kE0Hp85tulozkQY+z1
IYKpBf/kfAu5FW4O+fftfE6yZWHW2RQxlo36/ICL4cHmT9lYbx4nP6hXghlL
Vkx3Vyow2Ein6ZpfIebNUYzEUsWAz4LvY/1XPjC5rNK+stcYhsoSKd6ZxuCk
WpOnhFstjlut3OWliIU8Mx5qcksimHJIcbdezoNDFe7fHr2rAOnbaa8rD6TD
sdjLlZOm4XAiiK06LfMepsOQ13xaGCyO0V4Iry/HN2Erag8GiyFtTf3vnshg
tCiNXXHmfwyNtt3Tv9m8UFCWrko1/yZ+KKCl9zW/CEvLjyRvJ2nBVZW2C2Lc
qnDk/sVTgn/E0JTEn+dJ/HmZxJ/f/8OfU0n8OXCTP7vGk/jz+U3+TLAm8efz
bv/hz/NNm/x56dYmf27g2eTPsgc3+XOjmf5vy7octFYrwdIkLygxFPg50VyE
4axnBzUvt2CTLhk/70a9JRZGvKI/TMQ/DkvD0jtf4Lk37c4nOja+g/jjPBxO
wfDW8RTF1neZwHbNoWxHTz0aZlgHOwfVY1HwZ11D2QKcCdaMXXtdg3zB7vtp
Uwege9f5o8tPynA5NtzD6F0vyLk/XognxMBq50h19V4/sKWztBu/MoiJAmGO
TI1VmBTE83XkdjHocT1edqePQiXZx78fmofi94C8Wq1f7kDGGdide7QDwtvo
z83uL4HaaPajWbJVIFTbalnx1hII555Zna4ogtMNeeVxr4rR+cCeWLfhLFTq
Hlf1EazE5733wxgutMDxU0vEteF0rHn2/Ub5oRzsz1PlqnikgYaPbzVuWy1C
spWUQDPXjZ//xY83f0Q6UWatfH4xqQibKXnnV/NiMJqz8rOtXCWUjGa+pBTI
wqM2XGevT+bCAZOER/1GHsDO3OmpomAJD97mfbTnSsekOgnJni1PYS+rya38
oFzMPOt5xSmTCN/3qGf83dEGgqYXqB/YZeNd39Hk+domkKjhK2U/1IEL3+62
ndxdA6M7XVt2r4Xhreu19dYGLejJQVwpvxEHZ2/MDrwJyMTAbHeNjvv5OBH7
ubB/vgKMVA2tMjfy6a88qce+5KRjlHRu5cPWjZS/acSqdl8O8DRekd9WGw9b
8i/y7dybDz/GXW75iG/o0Zsw8OppCQz+dtba2d2IhkyGDqIq+VAmeZ+a/XAU
ZkjFL/joJOKYIefFvOMFEDneY63WQEBz47qZuw2tELJ+fkzEOhQXA69/8Z5M
gwrvC6wvlspgavkzwXvYFt6KevrVMdaifmVKx8/nebC4lZZIbZgEhjeeh1YN
22/Udz9lR4m1eIuTI26QNgEOpuzcz74zFz1WNdoqk/PQeOnJt78bdZrh31gn
PmkCTtsIKl2dKAEPgTDPGK5SiJKn+9CfkoDX7RmsovWz4WPCtnRJWUv426Kc
rjFYivxu5FxP5KPg2TSPon9yBr4tGtVrm8vAXrUpu8OW/rjw0Z8ifDUW26Se
+B3bHoc7OGd+t7+OhwuyjCOSdA7YuFUkl9FKASz/t/spQOLPgyT+fIR0P4Wf
xJ+BxJ8nNu+nEEn8mdxykz8r/4s/h8oHfH/+NwKjg3qz87vDYCRwu0mHqB0E
/4hWZvpSjkyZlq6XVbLhjOnv49XuzejkkEM42JaGCmMHIz7JpcDgO/1vcguZ
GJE5HRxUVgqfWke1bpg0QYBmdQDdgSyUCc7/PScdjknt7Oc/JxbjlIJ5ZhZX
GrRCTZ+bSA9kBVyhFslugBPbeorParjCxIxwLl/mn6Z439qJ89lNYL3r41pn
pTfY7btyJyCuDCN/5rz8WmyGx1h4rk6od0J7Vge5/K0XGPtSqp8nKxEPP3n/
27gzExQ5tI433AoAwcsagkxbyiH8vu2zwOYmGP98Tp8pNgoqytJ3CqUWgKvB
Xe2gfQZwo0jqchNdGdBv6yweMelF4m2Hq4EdNdC5wO298rsB5xWMmblf1mJy
CqX0X/sSfOt1vvKQ+gDceE3nNvy1DS+2tt6lkSqH+lAC2X3KVsg4oTN55WUW
ZieF6wnQVqOA34KxLVc3JrumHTvIWYPy1lun9s40ICu1sfzXugr8+MzzFoVF
Avy8Qvurgq0Sz/i/23PcvQwdhWfHtMTL4aozJcvDpzWQFFP418uwHWv3vPh9
dHsZ9s4Ycnf7NOJqqAOZzlAajHDUPV+9lYArBo8eoG8ZTozHcpfM5uI5LrY8
sm53PHie7VdjeQE2/33Eey+CiN3GdTSc7zby6Oc2U6wsMXjHo+78MdVEtDA9
WvzrhCPOXXOMYWWuwmGeY8//Hq0Gp3r3i+UuZZDS6sr6xj4DDmjZGDEZOgIx
KrUllrMQjGSaav08CKDhNrekQpWCbyQHHmSmNaJgj2p4h0cMSMl7ULzJuYH3
PioL5e1IwMdCl1iEXCJAmGXWdHmjnn0zo2J+8MQJDJ3+KsVjXorpZ2QGEk0i
MVzsp+LYjTSIVaRjVrrqBxZSTA0Vp9qxXdKe4mGbOrw1uDnZ012/8X3+eav9
Jhe2xkZff3a2D1hrk46NvO/Hxi97H89eD8VdDl2ryraZUGz0PiZK1xq9tgte
L4Uq0OormfQZzoSEunrv6PpWTEgJDnxnuVHf9H53tNriAaImqQWp2nnA5vHl
b0C9E5zMYaDh8DOAXG5nnZU4dQw5V3B+/uLl/12/yiT9fj/5H/2KniT5R4dI
+uUj6Zdt0z/S2rOp3wbbTf3uJ+mX4LWpX+K02oOJ0XD4vpL7edoiA/yPniY7
lVoNHneXqd+8K0IrTlZBQm45ajst7D6VWAPzqy923lK3QbJs/jGTacRP862v
FT82w4ve5ucx/fHwBle0pe6UY8nTpyvHn2z83M33iPt+6kLk3YQvRldr0Pvh
/YVAryjYkRKnmUzzBCgVZJQE+UsgtLHWjVUpGkurPnjK0KQDSNp3DB5yB4uk
9/ZPHtagdLqmCL9BMx6jY8rjdK7FfTHsJZ9PlGLOJ/rWsKlMzPskcNsu9Akc
HRu29o96itZZJneNqeygfKJpibalCyPald7bseXAVoWcbRmjXpBDTSZ4SGMY
Rq9YRqBbFT6oNZtj8X8CPsXbf24VbAB38h6zFCNEbqaXE0Vi8eAi3Pv7y+4U
5Is47jzPVALBmr39Wd8RX86nn7eZTwMZTjS014nBSMqrsU+YemDt4469kzmN
uOux8DWf86V4vjPstvzfYhBYiG+VJxJgiJx9KHClBAL7L38nZx7E4yHmKk+Y
S1F86xVdB/969Dcdsp1pysM0oo+R+FI1EF8IHeQceYImielxwjOhYK1e8n2p
pR/OUn4QETuaiVq01O6XjKOxmqtI3CghFXbTWYy96Y1HvxHewrTiHHCKFq6/
ebYCDzXVcPvsvg8/pmOX0igL8W6/uNse5WR4FT1Lpn03G4/oJf+mG8vZyHNp
JVruVuD+TM2nssezMPT4upW5Ti2axqNCwHAT7hUfbAv/UQEjIlNyTvut0V/R
KopryBS/qhzgxeV0sKdipl98JIB0jAWJ3/uTkOuXNoGXNgZY77scnfNJBC26
WqZfhCwQ4PohflgnDHcRVpmP26ZCbLzCxdXyYpzhNpndIlAPU0RLMRN7fbB1
yF/n9C5FVkjTmPMLgy8u0S+f8t7HOKMg7jcqNqjOEq29XTQd1D2ydEPTIpHK
lC+UVS4XE8K+WoycqYZza8HbWV+U4l3rhbsfraLQnpNm9u5KAJp7R7UekGrH
bjWJ9UKKTNghoNlauFKNTRIXOoxvmsBlXiH+8b9J8Nuu9+HApxa4aux6dumO
EU4+TW4bN/bB+PSiGZdAPWAI8tLNVJH4//yj/+9+94NN/iwqMvcf/kwlu8mf
tSw3/SPX0k3+zPZx8/6R/bVN/tyYu8mfaXZu8ueKUpJ/ZBlY5GeVBrOyst4D
L2KArGp6LxPVRv6r+AgrFfIw/N3W95e7iMjCc7P5T1oHKthsP7JcOAhMF+XE
ffZ1wOB286SAv+0oehDnM5R8kINBX+USZzJMdT2x5HzVijwnzNf87cqh8sbU
guvzFoiYU93z8EkzahB+x8oFjqADz6TA384ItJd6wPGcNxSNsvhCab/lAe/2
5er8i6no1TFtVuVVirWnaggaThnIaPa96n3sK5wN/fS46l4p/rgbFULNX4pC
YxGOwQaV8Pzrg4nIwQbsyv+ytWs2GyOzKn/9yanHnPPJ696EQqTIq7ipvBgF
vzmYu2OPtIClzctos6+VyDU8+eEVZxDUpvA8UruSheb7/WIiZwvRny67ZtpS
Bfhlv+o5GtejBb1rzvPGaqRPGpZLjffGuqs+ZIShJxBbS0nuMuOLDbyEO3G3
CkFq3c3MuzIeHUMDlh31rSGl4t4jZsMW1Op8qfjjYiYYepb9uB5ehCe1iIYT
Sa7wdbr6T25zMDyUFzL/3OyKzyrtFy2cOmDbvQt9JvJhUJognUPYePdE+u6n
Z0h1oBGxTX1ZKxNVrBOtOXK88VTecWYzmWwomn/P4K6aga7i3xiHVr2wM18g
5tjWVFzeW9vCsPH/O70y7beNKQqOOvIUXkvNgQA+9lucWZ44c8Ci3W3EC+hq
4cP24gL0nLqtVvw6DeYWo1pbHHPQ8p3nW4Xpcthq3FawTSgN2na7tUbPnYD3
uQkFAT8jMNV7+8vQ0Hhcklewu8+QhlcknrL+WMoHbkO6fk9CAi7eZm47weIH
7lO1HR4L0cBbEH3pQGcEVLQuBVDsNYIFhvTPxL9tYERPKTzwOxl2XpNgkL6b
B3t0/VpcwySRIdFeJJYiCn6ym1NbvE3EVd6WOtXkizAZbSgtRu4PXae1j76m
D0H3C1N6MB8D0ltYbee0W+GvlVOIG68nCH92ka2NDIHrh8Mpb6ncQT3/tFTq
py7g0JDI1/MxBleeFeXGH4nBA7uuq5muEyCS6pvRAbcgeH1w5tlP7ps4IzB1
Ze96HTzJ6fh4dqNui92/U+31shPKdDUI0hjchG4burM7zh+Bf/qfGUj82ZXE
n5HEn8kWSfx5kfM//Jksh7Q/x/uf/TnNm/xZdHP+yDVzkz9TVW7y5zwSfyY7
v8mfu2nX7Xa+rgKLsm+sBynSwaZuLHLrNyJ8qR7aVnmkHTlorn4hhvsjTfRR
gVkKbxQf0b9tzzCwUf1LKXNp9uKV1Bv0CR9GcGGPX8h4dyUUWBwW+bo6iPw9
41frqCPhAUeIY5P1GETO/aHoNsqG8RpJmqNbs4HRWcxOj70RAtluSa4EELHV
QMi0azQLx1N2FFaFZ8GuI69OkD0gomX41ejSj2lgSk6j8rXXG+kEDzo8utkA
/us+3mlbdLB1wkijTigLzoaS5wzVZkJGxZysg10BeNGcjlUSfQyWXEkh1dE9
UDG9IHIs3h9yedx8RGaDIZDVz0c4PQi5jra1RnA8AS7nwo+u9CMwme+0YvPM
F1XXPffEFTjhJfJF3dP30vHp1tijIt1+OMF1+tt2jjKkm40KWIzwgAuv3Mbp
F2PBkuJGqC1XFHZdnfbdsR4E9+g5H3p/8gI12FqrxBsNK+P96h3cWXDw/I+z
j+hvo6KDGZ9hjxvsl+//EeYXD95zzq+mZWzg7Hrf9nfG9/HCvFzuQv1jFOJa
9WGMDwGNhPW2sq8C2CCdGzPm5oX2pbas2+qD4Vq8Rw3rcWvQ7Y5+YMORB2k/
0xLrB5NhPr5wdM3mChLFAj201y/AY/kMm6nrPqD8uYB5rToBRvrZzapqNDBV
9lhdIJ0zNH85Q74r1wa/u7Cdh5w7G+87LFO5mOEeiFA52uaMv8LkW/5IuCKL
d6RNzwEr4L9N8eGbuhmccy5gZT2YhD2BhEHiYSNI6aIiMgtZ4cWHs0mKp33R
fXbI7YVjKF46f8uu2tYOjM7XmmyJS4I9v2VWYi2l8QLHhx+dH7Qg+HzkfF1e
HDrZlJR9VTXDmzsepmlyBsPRiwyil3Y8wK1rytMPq9XwvlH+o8nZ+7CbfiKu
KPQK9F4yjW457oiLbScYrpN7wF7jOMYYHj7s/kV0u0QfBvs4xdQu5GeioFjy
jwc1t8CU8szxhVB3ZM2VpRR5dhciKa/op5U/Rqq5qj9Gl23BvWshgeOELiTN
BZU7p5tgRNJUte7gI/gkK6xER5aDig1ZPpKXtJBc1KvXh54XF/8Qfl+vG2mq
Y49Ivko227SDxJ+5SPz5MIk/V/zDn8nC/8OfyQY2+TPZCIk/k+6XkZH255BJ
bfJnV+1N/kxG6n+ueLDJn4mk/ufBWn7KTKtevH1QKurp7RdYFdD+pf9TMqa9
0+f5lNuGZAIFzQNvHLGSkv6izH0V0GzO3Xv5ax1M4dQFz7kIIKtPMvBizAEj
ieoZKipd0OtyCa/xyUVmez+zmWcVuLDrUnNeYzTayF2N+0UshWP6Kzrt1e3Q
MzJ+Uay0HvY9S9gWGZuOni1GE4d9+kGS7oxYS146qCaz19gzZOH9X9QdbowN
4FUZrqG5JQcIJyo6bJKb8cA2ibdBBuEgN2pkz99vjzftZgumBHzhC921+RsP
OmGImZZl28sG3EE/Q+XI2oqnHqRq1y614+5Rx4/Bc81AZfTZWJojBxYU3u+W
OFgNZ25dY+B74w76QRV9o7ShmLyuEHjjRSmYzLiFn2tqhT+0lY87orJR6Gy4
p057M7ickoo+1ZuDUdNydISH3dhRL9e/9CoNDXaWfg+zLcW2+jcdP+42o8UL
qoi1JAJM1k6DYmExcP74Ha0m3AwaftzeFLX2IGxKuffb9hYomeJ/GN8bDQ/r
zTvWGavxPu0IQydLJHKF7EkQrEiEPcCgneJSghPvX7sqGTRC3rO2dG31KqxV
qy38G9oICsNnr9ZwN4PjTU0DUbt4OGT8McnlvjfQc+3UFk6pB/sTtGuUx12R
NsSYGHMzF8Zjws4E6Nah7RDj26VRZ5jJoJQ37S3G65aHJruWssGUMe9AtUc6
HA59KyXA74bLPdfmRysq8IBOqDWPaTb67HvziikjA7gcuMw1ZyrxyoL5hZYw
SxzOhx+mNJnwNIBhrfVAJJCdKC+G8AJc2Ka4/7FfMEor3lkWflYGut4SoKHj
DRJSz9lmhAlgJtkyzzoThGeNjvKOvjRCsbK1VdZvuZjCcE57uvUBMA68O79z
KwGlqDkPd7qnQejQkY7wyFyQVjVTUjgXgE5eVJfhLBE+LjltH6fwwcu6CvIj
v14Cf52Vd82xEjh5mOq3w52NvCvzcYqViDi+2m7rsfooGkco96lQezSgeqCP
zJmAPKT4SrFVxqIMf4+Y6nscNgPe95PVpwmuKDbBKLWFORJu2r947tAcCMVj
1SrjX20wppmjQfy8HLBcsVm9U8bw3/spH0j8WXT2X/3Pric2+bMo6X6KxSZ/
JiNs8mcyIok/k3n8hz+7kvqfvVU3+XMiiT8TmTf5c47iir2OfTo2bpVsbXb0
BrJ7IWH34vMwZ314wl4lC3riDp3eReyCzxl0JdkdBHjQYK+2FvkAPd9kM1oo
vQD2scUq/pc9cKOjybaOrQjYCB9arqW0oz2LWLlyXzIO1f3cycdfCVPG9Pck
N/I6m+BnU1b68Xgybcu6yo2XGOabaP1jIg+uZdoLU6ZEwMtLGt/2RMfhx8ER
AnVUPyyJOLJrrWWgYP/wa6tfWZgimH3e5nULnPn12dnUphjWcw6HZJ4qgfYr
3B+FyUpw7c/Hy1LR6XhIgD+328ABLY95MacYt6CIcQ2Vu1YOtooTTJ65B+F0
VeyPxp40lJ74xNsQUgOh9ywuDQdOwhGrXcc9F4LxyNaO6n6GOHgrdFvQM/A6
hAq22lfZxKJvhzUltwQRnJIXz/wNTIfCgiLx5LRqtGsKVqorzIMSeXaK+8ta
Gx9xa+uaiioIcOo42WcWYHDqyaeFWu341f5e0kgBAQ93RynrC/mCHOvk6TPN
hWgyyZT2ij8WZB6tTVrWhGJTsIrCt4cZsKbSzzF2QQtUjtvdKPZ0BqYv3yUS
2fuA5v2HO6WMG/X/aZvXKgphOImLg6KJhiCrcvPnc7ksNGb4BlpXk+CchJVN
ukMJsly/t+qzLw57n/qGS+mnoLxyMQ/rozj8Qf6dS4M5DtP1HT7reAege8nM
HWB1Bbs+U8sTTQS4OtA40O7mCuEfYsm1VAl4htXi++x9JyhkUdOiPC+BtC2H
BFcbfXCGdu4B8jvCrwcLV30VNuqyArfnfZciccf2od2MPOn4PfqIJ9lVLyzC
4CvnPJIgjWzfDuJhaxTue/3zwY5QMBYT5G5UtEWqI5Xbvp2zBlEdwV3TNlm4
W3vXw95oa3TbHcPVumwJopUYe7XfE+765LlrSRiikDXffrVUD5hXCaXtEA3A
BsOO2wuU/silnHv11asMnNrFfss4OhRuufCG9jB44jEYEPgZKIx3y3JnqXcq
4+vA+3pzbqHw3O31vk8WYsgyvHSbY6UIowOiaNIH3CDg9Xl6NXM/vPXw+o6R
ZhvsO1kmtLDmDLT9zv70UdaY8UWhqMdMFSQp29i1/nD9V78jJP0S/63fieOb
+iUr2tTvd5J+Qyc29StE0q+ry3/0SyT5R6Kk+YUikn5LWDb1W6Ox0u5WWYI2
4ka/pAmpUKM19YkxrRsOqK7ruW9rRsHoc+FM2ybhQ7pDojBtPw4+z3ZjtQ+C
taJipjaeEbzo9nL3pFoT6Ene2V+mNICaLiaatMd6gOnMwxueNPHww7jiUTz9
MzBeMQsy8OiBNwSVSn2vQOxqnn+8MzQdaYKrz0rNluH+sMAojUofOPU7r7Zc
qQMdRO4/y79YDmdZC+gUThfjAnUk+8eueBy/GaNCFlWA/kE/fHRcUoCii44C
i0Jh4O83UUHKJDgZXt50azEGqSn3il86kIwlCYGfD8m3Im9F6IF9pnno+fy9
//en7nDIb9+Do3xOMOZbHtB7vBtfx0hy8RBKMdShz/JTZyiMFwjtmaxMhyfE
u29Zb6RCPhqMxh+xxebOSb158VI8ceb97mG+KGhuD/DgKXaCY2Y0F/rovGFR
l1eXfLcncul2PIyBRCDjJfuhtTca5MN5/cf1A2ALm5VP2d9IfHS6NYQyyQjp
adcHSmUe4U/DX9tfyAbjMasi7dXnpuh+x7Ry/e3Gd2d1SuzLG1fgVbh5VcnG
CRn2F4zfzY0Hzu/e/UHT0UDncjqV6Y4jBNE9x2+xpVCX4NTH88cCnlH96c5j
isCMPa7WNhwJ+OqoUsthfjHUdDvfOrdwC1lvePieUnHA50fU1LjDDEGSaUnX
ea8sXCg8MW/TaArn586YMiq6YJXGpz9G8Rq4rUCgV8ggGs8hIbVI8SyYuTLc
MRMOxeyHvxb9ZF1hvVbiqDetMu74yx9k73cPbCLLPcM/bMQr27GZJ20p2G0n
6KtdagAr2nssNC31QSCy6oLVtCfeWJ96sU4fASJMToIstxPB7q4Z541vFnA1
3kPAcCgEf94n/+MwY41EQ0caH8pk8E8e+5USJg41hb915n21Ufux89KQ/FXU
68xbYz8RjzfFikyEeI2weqD0rO6cOcp/lBE4x+4KmWV/LnzY4QE2v05iqL0D
1A1R5rGZ3cQGleai9EV3fDV8Y4yzRB1z28kDj9K5w+/ydZGqOgugdXxlN73t
Pnw1cnxC45qFHzlP8vypNMDkbdvpZRuU4FYO653SgEOg7GP1IECD/b/7n//h
z1X/4s9s4iT+vHWTP7MJkfjztU3+7CpO4s85+f/hz6K7NvkzkTS/oLVe+x/+
7Eriz9Ls9Tl3RrMxhr8wPP9gHOZ0yqw6vCZC2v4iYX3lOozyi7zPbP4Mg7N8
L4+z5GI93dtHt6KeI3aoUkvyZ2B1/CMZMYd+9M/a7XP8Vins1zxyTs6lGe+v
L3a+bSCgxq8/HhL8rXDWq7MgOrUSHnXY9JRk+gK7u5qMvVcfXrfn2EVJDMKj
v3+Ye6blwLdxAaHZ2V4sVj3JSb0QgoRlO6HERSJeipiNJS42YJlSiZGn4HNg
uec+fc0KoaGenU30lhfWiC+FCudq4/tjM4tv5wqhZobxm6B6NQbvH47lYhrG
PFtlu47mGmA2oLGvnk3F8FNHDvEkZGOUh088zeNmYC1N/Hnu0gsUef9qquCb
NfDZ6veTiZaB6I6RYzy/kuDges9npdQ4OHvfVMpjqAxo8fufd3oeSOEVu6ff
rhR2CTF+2LI3HIQ77zwUW8uGlerBY/uNy3HxztcxuaEY6J//mcMdi0iRMK78
ITQWH14Z2yf7LgOurSRbUb6owoWfBIcysjCkktG5qND4CLfGeVRk3+0CFTlP
pZRZa9CjDRils7MFkSX9uY43FfBLfpsfVYMHXKliDPnpGQK1WT8lx163g+QM
93ffHEsY2/N2nJDsjeJiSb8cf+agvai60J4kc/hJF+0svnYbVG/96t19pBIF
Yg8RqIxD8dtOKlm5gRC4tMSxsECRgUPW5C1ise44leF+b6TuMXR9SmP9PkQA
9bGxS4P7rLHi4QUBbbUolE/k4AkMDQemEp9WusuBKPM84XdMdDi8rTmr7EsM
gwODf1dlRzf+nrZtNl1Knhi8a1/WjtZseAJf/faesEI95xVX/33OIHFlbBe3
XCIuC76WGroeCCkEg2kuSgXg3fK87xaDNRDXbpIfcXLF3M5gOnUnH0i6KC/8
9Iw4DFep5Vq1+2LN7SThPM1E3FZX7vpV3QrF47bdEWRyh5OCFgHry9kQYmQ0
/+VDGI48EmTXeusN5J2ru/dUuGPBm6GTv8hNUVFM1H9+PRhtZUw7pZZycL9Q
2t1zt6+ByhcFRZmQMLzGphzoczMXK+Jpmjpa3WDPBLn5Ex1NYBSe9xbefgwV
LZZ75sx6m4gk/ixK4s8HSfx55J/9VzLtm/MLuzb7n11VSPuvZDf7n8nUSP3P
Epv8mSz8/7R3X0FRWGscwBeVFYJ4kYAEFFmqQQjBhkr7KNFIBwFZBZYurCJV
FpRlAelN6RBB+iIb2lKkit8qXVFXESIaFQFbYhilCArKZe7ufbnPdyYv+b+e
h/Ny5pw5v/nPfDx/9qzh+TPhHeM//kxo5PkzaWnIkyneDCdkytMClq4CeU5P
Kn1vPn4JLiJZTExhNrTvzisagr3E3ikp5XHorFSokFW+jjtk1TRJkT0wO21q
KdLMgohQz/cbJOoxm3Hs2EPVAiz6ja5c8w0Hngn2HRyta4Dc2498m08lwJiw
jMiPUIvLHivvHq9rQo8gE7b8aA2s7ZGbls9oQiT5H3d/cwVvyM/IcuKqIN96
xuelYjNYCr5Uy2vQxPM3lHxH1rWg7s5Cu89OydjdzpWcI3Xgbr8NRnm5lZg4
e7Q1RSYdhTbprvSJpuIL/yeCLoVdQFvjs85UtnT1naWWrtfLw/7FpZNOQbEg
NYFfex37IEzu9z2CxF4s5144J6VYCK8Omccu0kLwm6rq4ZgsF9AelRGc+P0I
KvQc0FcQKIId6xldn6IqwPDsvFgqIQ7K3+TqNxLj0OAt606AHhP2tJvl3x6q
RC2yzuuBW5mgUWb26R4tA+7tFztSr1QAcmpJ+nOi8bhdnBIS1l+CxwWbDs82
ZUKK4GzNpoAopN4a9KsXyYbyh9F/ZdenoCFJNq7cxgCluhZkkx614IyI0IPQ
tCTkRvnt7D+RA1y5yMHtARmo1YUXXmkEYD+VKEyNd4Ji1/WTg6Yn4JPQWq7Y
ZDS+38C0vUlOBRPzCC6F7IGVWW6tft+fgo7BsroUcTf47b1LQUWjIlhb0bgl
lav3vrGxiUZZLHwI/mOEqJADykE7L+6ixeOK3IP94wfiQaLkrsnmokxME9K6
LbrgAKX1lqSoM3b4rK9fIqOXgtcvsm/uMc6E+2JmC3jQHWszyoZv5+ZjbV3O
Tb9dbpii0pecsyUBvzDoytV6qeC74KZyzeUiVhv+q1P6z5MgEn6P4k0MgcZE
bYVbj3xA30j2ifoEA+slpY22nfZC5sih5Y52xur5FXEkrZhAZQ6FzNZJhG4/
76oxwXhU3GpWlX03Dh7vuZIYmxeGbT0/+WtXhWD4IdPkXYpmWDacW5fKNoLg
n9IEM9POQdG+5S3yyR5gXxugEIQREKHL2rjBJQhNjGtPWXkwYeVZbRZh0BGo
E7pKd+vPYH+KV9pWzyNQ40C5Rk2WwID/6T//1597+P7sPMzz5890Xv95QJ7n
zzPpPH8WGuXNH2R78/xZmMXzZybfn42GeP6czu8/m+5Qe0KLeIsVzEmvY9xx
eC2sbtNQeBNpVeITdlq58Fp7avEZqwr9WjZGSnxtAoOJsBqLX5lwK1d3odk1
B9XVWtvuiAdhukPo+UB3S9CgPbw8UXQGOJGeLXfmNWGXxaLEvDoL0qMuGce+
IaOYy4fEO6E+qMm+TDNTcIOBkScHuxPcIF1SKbHNoBUHdP28Xqwxx0q1+srn
DWkY1U60kEnfj1Xa6j/v9zkCJKZ+EifHFw0LZvbVLaQjvcvqqXiMD0oEF4fM
XvIGzlPmn5m5MTiQLJreORSGXL0vP+hYkLGNfT7BYks8iklfP2vTdAbOqayZ
2nw2GhxZ5EuJDRkgP5lGiLlQikoCY8yUw4Yolrz5qOqeQAhTXCPV8oiOFg9Z
09Y+sUiPHW2d43iBxJipeI2jDxA4C8uH9U5gYvGhF+HgjkTfZmqrZQBwWGWq
k1aGcGAni5EnHQVcuyGu08UQdA3+vuKhjQ1MlxjrJI+6obn909bTGufRvPwH
zfbsNDQ6zlki6MUDZXKJPVp5AV2q2TW9cdHgWiyc8jbPGnX+SnIdonrBxMy4
ntIvDJhJcP5g43YB2d8JKx8LCMaovWuuUZYMIWSkqXvA2RU0Crkb5xlxaK08
9XloGw3OER+4r9saCgPapsk1c97YbHxfVNLZDaJSvh1uiHDHac7IQbZiKGiO
abwLHDoMuvoDI9TXFGSPxYhWf+uOJNnx27W1ZNB0PTFtqk7HfKcbc0ttUaj+
Wky+TOE0kHxXuLFZbmh/VWvOriMQJq70MPZpr67nYkEgUws5Nq8iO4dUkEHv
lUw6bgfv06quLLcaQbxAxIePeQ5gqQHH80dtYLnHQbThHRldrzKCPgpKwqFG
0W5bSX8k2JO6CSQjKCFErwhcdkZzm90/SnQ4wKLKgp76JXcYJ2vP++tLo+Yf
Kt7WuvHA6O92pD8Nxu9IBuGTD4zxI80mvGurLZIOHLXU9zZEtlDhyPpRe3zf
ITXWRzUFemtxRM+UPwbJ1lnFEmyBTjMIfxxugfkvC1nPaXZgahm09nmnB0gE
Zn26zDqI+cEtEZRNCtDde7JZYNta/Erh+TOJ78+b+f5cz/dnn1pe/9mK33+m
DvP8mc6fP5j0gefPzzV5/ryd33/Oruf5M5Hffyby/fn+NpH9Tpvuw69HVZ0b
Bl6s/qv/npwnqKaW2r752/b/J//k/5F/Ay+b54M=
                    "], 
                    "Precisions" -> CompressedData["
1:eJxTTMoPSmVkYGCoAOLDemz/T0wRd2i4NW/5jR3iDr7PfnI8PCjuYKxhlD3/
qLhDr6Mry+woV4fn0/16+GYHOzR3rlnruzbY4Vtrz4EN64MdOv6EXivaGuzA
/PG7Q8TZYIdl7KxqP/bGOdy3Yrt940Kcw+ciwRcsX+Mc1iyYsP0dX7wD0EqG
hhY9x1F6lB6lKacBnHzReg==
                    "], "NoisePrecision" -> None, 
                    "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJxTTMoPSmVkYGCoAOLdE49V27w9aW8z2WKbn8dJ+zWzDWdYzj9p3/TF6C/3
lJP2b7zmWOhPP2k/9dbX2DPPTtpPeTn5plgAprqO1YLG16eetI80XPk76eVJ
e0+bcoZYL4Q6mDkwdT+0HCqi3py0F3x1T25yEKZ9MHU8hyrstz0+ab/MxFQn
wBPTXoXKt/82A/llOV0b594/af/HeFedKxZ7YeqmFmyadeXFSfvT1yYY2Phg
2gtTp+W3j9v44Ul70Y8CWhxI5sHcBVOXlHx26r8nJ+3tmhmsswIxwwOmzuzs
udUnH5y0v31o6svqIEx/wtRlTPo/4+gsBI0rPvgeHZldOBtB44qP7WYC/+7P
RNC44sOlq/902XwEjSs+jH9fM22ehqBxxcc3f6UZH6cgaFzxsXbxwtSOWQga
V3zcnv981typCBpXfMz8nJZhMhtB44oPXo9NpxbNRNC44gOdjys+cOlHV48r
XNHV47IHXT0A1W77pg==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13., 1}, "ID" -> 945492815777004568|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 120, "Options" -> <||>|>|>|>, 
                  "TrainingInformation" -> <|
                   "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJxTTMoPSmVkYGCoAOJtE49V27w9aS8y2WKbn8dJ+x2zDWdYzj9pn/zF6C/3
lJP2n73mWOhPP2nfcetr7JlnJ+07X06+KRaAqa5htaDx9akn7TMNV/5OennS
PsOmnCHWC6EOZg5M3SMth4qoNyftb7y8Jzc5CNM+mLrHByvstz0+ab/ZxFQn
wBPT3qDKt/82A/mGOV0b594/aX/beFedKxZ7YepWFGyadeXFSfsL1yYY2Phg
2gtTF+e3j9v44Ul7xY8CWhxI5sHcBVPXkXx26r8nJ+21mhmsswIxwwOmTvfs
udUnH5y0lzo89WV1EKY/Yeo8J/2fcXQWgsYVHwqPjswunI2gccXHFTOBf/dn
Imhc8ZHU1X+6bD6CxhUfvr+vmTZPQ9C44uOHv9KMj1MQNK74+LV4YWrHLASN
Kz4mzn8+a+5UBI0rPrw/p2WYzEbQuOLjn/umU4tmImhc8YHOxxUfuPSjq8cV
rujqcdmDrh4A2goAKw==
                    "], 
                    "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGCoAGLbl6EaPz122v/0XhaxM3eb/ezAvoslU7fazzzHuu5t
21b7tov303Tbt9oHyTgWRXvutOeaf+FNdjWmuqVGT56rd2y1X+5wJtsqaKf9
J86JmxORzIOZA1O38N2K5dO9dtpPLPu12bByG4Z9MHVLJZRq1rvttL/s/oo3
IAfTXu/s+6/yu7fam89jjXF032nPUeOReKEc016YuuAev8mNgTvta9wf5BTm
YdoLU6fiNbVLxgVo3pJLEt1I9sLcBVNn8Ti+NdIP6F/rszZJZdswwgOmrvP1
Ba3nrjvtQ2Qnm78t2YbhT5g6fZ6L/ZWZq+A0rviQfrrq5KTUVXAaV3z4Xvx4
7n7cKjiNKz7uW6suzI9ZBadxxcekGTIXzeNXwWlc8eHCfdb6WeQqOI0rPlIP
T70lCnQ/jMYVH8fm7vKqAdoHo3HFx+WbzxznJK2C07jiwze3+35G3io4jSs+
0Pm44gOXfnT1uMIVXT0ue9DVAwAF6fkV
                    "], "Method" -> 
                    "NaiveSampler", "VectorLength" -> 120, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    4747808072524423015|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                  "NaiveImputer" -> 
                  MachineLearning`MLProcessor[
                   "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJxTTMoPSmVkYGCoAOJtE49V27w9aS8y2WKbn8dJ+x2zDWdYzj9pn/zF6C/3
lJP2n73mWOhPP2nfcetr7JlnJ+07X06+KRaAqa5htaDx9akn7TMNV/5OennS
PsOmnCHWC6EOZg5M3SMth4qoNyftb7y8Jzc5CNM+mLrHByvstz0+ab/ZxFQn
wBPT3qDKt/82A/mGOV0b594/aX/beFedKxZ7YepWFGyadeXFSfsL1yYY2Phg
2gtTF+e3j9v44Ul7xY8CWhxI5sHcBVPXkXx26r8nJ+21mhmsswIxwwOmTvfs
udUnH5y0lzo89WV1EKY/Yeo8J/2fcXQWgsYVHwqPjswunI2gccXHFTOBf/dn
Imhc8ZHU1X+6bD6CxhUfvr+vmTZPQ9C44uOHv9KMj1MQNK74+LV4YWrHLASN
Kz4mzn8+a+5UBI0rPrw/p2WYzEbQuOLjn/umU4tmImhc8YHOxxUfuPSjq8cV
rujqcdmDrh4A2goAKw==
                    "], 
                    "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGCoAGLbl6EaPz122v/0XhaxM3eb/ezAvoslU7fazzzHuu5t
21b7tov303Tbt9oHyTgWRXvutOeaf+FNdjWmuqVGT56rd2y1X+5wJtsqaKf9
J86JmxORzIOZA1O38N2K5dO9dtpPLPu12bByG4Z9MHVLJZRq1rvttL/s/oo3
IAfTXu/s+6/yu7fam89jjXF032nPUeOReKEc016YuuAev8mNgTvta9wf5BTm
YdoLU6fiNbVLxgVo3pJLEt1I9sLcBVNn8Ti+NdIP6F/rszZJZdswwgOmrvP1
Ba3nrjvtQ2Qnm78t2YbhT5g6fZ6L/ZWZq+A0rviQfrrq5KTUVXAaV3z4Xvx4
7n7cKjiNKz7uW6suzI9ZBadxxcekGTIXzeNXwWlc8eHCfdb6WeQqOI0rPlIP
T70lCnQ/jMYVH8fm7vKqAdoHo3HFx+WbzxznJK2C07jiwze3+35G3io4jSs+
0Pm44gOXfnT1uMIVXT0ue9DVAwAF6fkV
                    "], "Method" -> 
                    "NaiveSampler", "VectorLength" -> 120, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    4747808072524423015|>], "InputDimension" -> 0, 
                  "OutputDimension" -> 120, 
                  "Log" -> <|
                   "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBOIKIF63OvDWealT9ix7pI02eZ+2t/tQmJAheMreSNbG
NG7PKfsHXU9it58+am+iHMeuVnrafl1e15HcFQcw1G1IyJy3VOS8vd0Mzi/b
756y/9Zttr7J4BhcHcwcmDqbOVuajqictGeJPujdYHccwz6YOqWKm2xiD8/Y
5xWXfHX7fxzDXiZ2lrw7gcfsOcqDSwwzztjfYguKv5RxFsNemDo53Rzlptiz
9heU8293nziNYS9MXWPdOVXlKaftJ2oG5X76fARuHsxdMHV6E61W3r99wv7D
S2lRB8bjGOEBU1d+hvNt2PlT9j8dlqzI/3cSw58wdTc3m7E5bj4Fp3HFx0eP
L09P8h2D07jiQ0poQaBs+wk4jSs+Fvy2Sl9keAJO44qPE1/V6vQKTsFpXPHx
cd+ll40vzsBpXPFRviL3P9vkM3AaV3xwhkw4yeVyAk7jio9+W+37/e+Ow2lc
8bGD7brX47RTcBpXfKDzccUHLv3o6nGFK7p6XPagqwcAP/LEJQ==
                    "], 
                    "ID" -> 8695962959994763523|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 22.353136, "MaxTrainingMemory" -> 
                    4881716408, "DataMemory" -> 960001976, "FunctionMemory" -> 
                    159352, "LanguageVersion" -> {13., 1}, "Date" -> 
                    DateObject[{
                    2023, 12, 28, 11, 16, 27.37836`8.189982411558459}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "MacOSX", "SystemWordLength" -> 64, "Evaluations" -> {}|>,
                   "LogPDFDistribution" -> 
                  MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> CompressedData["
1:eJwNUn1M1HUcvhPltFwlzy8mpKGl6cSa3iLlFO+h0XYTheEYhBqEDU1l3fGm
dLzMmyJ54CDE0xMNEeVFI90dER0JegYnaJdyKk0kkPeXFIe6c1Da94/PP599
nj0vn2fhNu2mBLlMJksQU6NobTpX6sXLlVXuoEEvtviaPXUycMNby5ULJPBO
kuHA8AJwcr6p/bUl4OuGuv6B5aDckOvboQQLC+PNgSpwrK4odCPBkbGe1edD
QGf905dDGrH/3ZESEwZG1+6TBiLAr4yDh22R4I5dfn+HR4HZR9aXZcWAo1n6
vje3ggFBfo3GOHBcqTP2x4M+PnNd8gSwYFGjb9oOwVcb2a7fBe7OXFWalQiG
/6A+e+Yb0BYZfPJPHZhph7ooGfz+2fiUdyp4OvHQ0q40kDPkcb17wRb3ifKl
evBoe2KwNRM0h8zr/iUb/GCFOtZnH3jD1KdyG0CTvWKmYT9YHHd7sTUHPFBT
3XbpIPjTkaFkVy6ouhfhunoITE/ufec/I3jr33x3cz7oWKe15BUIvpyUzpFC
EL3Bg61FYO0Ntd6nGCzTVFzXmMBTlo4m5zFQo+q6n24Gn++d5fA8CX4qqy/4
45TAm2z560tFjgcv/Nh5GkzNrvbefgZ84Lclu6Qc/GzehGXoLJgfeLdlWwX4
9U5V56ZK8JVzxGNONbj27a5E2wWBi67qCa0BSz5U6C9eFHr35PnnWUTuGYtL
7FbwhMe50dFa8LsVrc3ddeAnjmVfltSDX4S1TW+ygfGWstTiBlA6PpkUdFn0
4NtH1140gvOT/tqivQKqGyae/GoXvqz9HwU2g7H3Jt6VO8BhzaLHj66DVcqY
SXUbuOraujsf3wS3j583ZjhFzrL9xdG3wZT6iB6lC+z27mlQ3AUPayHL6RA9
MYdsjrsv/svKlXMegP6uAG1aF/ie4kl/XbfQ/b5X1NRDcXflZygGhN814R4B
w+BV57TU6jEwQWc51jEO/rM63SP+Kfh532+bQ93if9aQqNgpMKzQ86FjmsQ9
5dG5sxUSd86yP+cbkmDLGNs4V6KufG3yzCUSp5v8FRNbJf4PpeldjA==
                    
                    "], "LeftBoundary" -> 4.7271412601359835`, "LeftScale" -> 
                    0.039213715803805275`, "LeftTailNorm" -> 0.011|>], 
                  "Entropy" -> 
                  Around[-588.0718117637585, 0.24739163056780836`], 
                  "EntropySampleSize" -> 1000|>], 
               "Output" -> <|
                "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
               "EvaluationStrategy" -> "ModeFinding", "Version" -> {13., 1}, 
               "ID" -> 895810465636885430|>], 
             MachineLearning`MLProcessor[
             "Standardize", <|
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
               "StructurePreserving" -> True, 
               "Input" -> <|
                "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
               "Mean" -> CompressedData["
1:eJxTTMoPSmVkYGCoAOJtE49V27w9aS8y2WKbn8dJ+x2zDWdYzj9pn/zF6C/3
lJP2n73mWOhPP2nfcetr7JlnJ+07X06+KRaAqa5htaDx9akn7TMNV/5OennS
PsOmnCHWC6EOZg5M3SMth4qoNyftb7y8Jzc5CNM+mLrHByvstz0+ab/ZxFQn
wBPT3qDKt/82A/mGOV0b594/aX/beFedKxZ7YepWFGyadeXFSfsL1yYY2Phg
2gtTF+e3j9v44Ul7xY8CWhxI5sHcBVPXkXx26r8nJ+21mhmsswIxwwOmTvfs
udUnH5y0lzo89WV1EKY/Yeo8J/2fcXQWgsYVHwqPjswunI2gccXHFTOBf/dn
Imhc8ZHU1X+6bD6CxhUfvr+vmTZPQ9C44uOHv9KMj1MQNK74+LV4YWrHLASN
Kz4mzn8+a+5UBI0rPrw/p2WYzEbQuOLjn/umU4tmImhc8YHOxxUfuPSjq8cV
rujqcdmDrh4A2goAKw==
                "], 
               "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGCoAGLbl6EaPz122v/0XhaxM3eb/ezAvoslU7fazzzHuu5t
21b7tov303Tbt9oHyTgWRXvutOeaf+FNdjWmuqVGT56rd2y1X+5wJtsqaKf9
J86JmxORzIOZA1O38N2K5dO9dtpPLPu12bByG4Z9MHVLJZRq1rvttL/s/oo3
IAfTXu/s+6/yu7fam89jjXF032nPUeOReKEc016YuuAev8mNgTvta9wf5BTm
YdoLU6fiNbVLxgVo3pJLEt1I9sLcBVNn8Ti+NdIP6F/rszZJZdswwgOmrvP1
Ba3nrjvtQ2Qnm78t2YbhT5g6fZ6L/ZWZq+A0rviQfrrq5KTUVXAaV3z4Xvx4
7n7cKjiNKz7uW6suzI9ZBadxxcekGTIXzeNXwWlc8eHCfdb6WeQqOI0rPlIP
T70lCnQ/jMYVH8fm7vKqAdoHo3HFx+WbzxznJK2C07jiwze3+35G3io4jSs+
0Pm44gOXfnT1uMIVXT0ue9DVAwAF6fkV
                "], 
               "Output" -> <|
                "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
               "Version" -> {13., 1}, "ID" -> 1240131875411505080|>]}, 
           "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
           "Missing" -> "Imputed"|>]|>, 
      "Output" -> <|
       "Preprocessor" -> 
        MachineLearning`MLProcessor[
         "ToMLDataset", <|
          "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
           "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
           "Preprocessor" -> 
           MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                MachineLearning`MLProcessor["List"], 
                MachineLearning`MLProcessor[
                "WrapMLDataset", <|
                 "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                  "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                  Automatic, "RawExample" -> 
                  Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                  False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
           "Perfect", "StructurePreserving" -> False, "Missing" -> 
           "Allowed"|>], "Processor" -> 
        MachineLearning`MLProcessor[
         "Sequence", <|
          "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
           "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
           "Processors" -> {
             MachineLearning`MLProcessor[
             "ToVector", <|
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
               "StructurePreserving" -> True, 
               "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
               "Output" -> <|
                "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
               "Version" -> {13., 1}, "ID" -> 4166252685338196627|>], 
             MachineLearning`MLProcessor[
             "IntegerEncodeNominalVector", <|
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
               "StructurePreserving" -> True, 
               "Input" -> <|
                "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
               "Index" -> {<|0 -> 1, 1 -> 2|>}, "MissingCode" -> 0, 
               "Version" -> {13., 1}, "ID" -> 5739454163220239904, 
               "Output" -> <|
                "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
             MachineLearning`MLProcessor[
             "FromVector", <|
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
               "StructurePreserving" -> True, 
               "Input" -> <|
                "f1" -> <|
                  "Type" -> "NominalVector", "Weight" -> 1, 
                   "SetSize" -> {2}|>|>, 
               "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>,
                "Version" -> {13., 1}, "ID" -> 5290102661805438588|>], 
             MachineLearning`MLProcessor[
             "FirstValues", <|
              "Info" -> <|
                "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2|>, "Key" -> 
               "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
               False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
           "Perfect", "StructurePreserving" -> False, "Missing" -> 
           "Allowed"|>], "ProbabilityPostprocessor" -> Identity, "Name" -> 
        "class", "Marginal" -> <|0 -> 0.5, 1 -> 0.5|>|>, "LabelSplitter" -> 
      MachineLearning`MLProcessor[
       "FeatureLabelSplit", <|
        "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
         "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
      "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
      "Prior" -> Automatic, "Utility" -> 
      SparseArray[
       Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
      "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
      Automatic, "BatchProcessing" -> Automatic, "Model" -> <|"Trees" -> {
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{32, 31, 37, 36, 80, 47, 31, 36, 32, 37, 95, 
              11, 12, 41, 6, 37, 12, 21, 22, 12, 11, 31, 36, 32, 37, 11, 12, 
              36, 2, 47, 46, 2, 12, 37, 21, 12, 36, 7, 17, 2, 31, 32, 12, 37, 
              81, 17, 1, 11, 46, 36, 12, 31, 32, 37, 17, 26, 47, 7, 1, 12, 47,
               37, 32}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////HOz5/vx9In5+wHkzbl7R+ANHr17eBafnJgh9B
NP8K6c8gOt/M6juI1v96FkzPV1YD0+uz9oPp8+/v/QDR7+0XvAHLrznwGEw7
3PsElq94+QWsflIp2Nz5tfvBdP1EB7C8vWET2B59wz9gdfIl1WD6//lVv8Dm
stv/BsvbnwPz+V+b/QGb8ybyG4jefz8NbE6/RsALsD2z34D9Ef+H/SuYXmkF
9ud87adgdflprj9B9P3Wi2Da3yvsO7I58ZOswbR+9AmwO9crSH1ENnd+AcNf
sLt0rP8hmye/TeY/2F/fa66A3XnrKNjefF47sH77VQ5gf8gvXQJWH+/cCnb/
eqEpYPPsdcPB5umXJzAcAOm74Afm29cs+Q4JJ+NHYPmFemD/x8dog/27f7XC
LrB75q56ALZXVQ0cH/tFsyHmtN1lOAAAoUuANg==
             "], "LeafValues" -> 
            RawArray["Real32",{0.1991136223077774, 0.19707950949668884`, 
              0.19358862936496735`, 0.17977239191532135`, 
              0.12601999938488007`, 0.06897654384374619, -0.1273365169763565, 
              0.19062119722366333`, 0.15161116421222687`, 
              0.19973596930503845`, 0.1810922473669052, 0.010659019462764263`,
               0.17029212415218353`, 
              0.12801127135753632`, -0.001313039450906217, 
              0.02168622426688671, 0.19428792595863342`, 0.17295774817466736`,
               0.14162591099739075`, 0.013690261170268059`, 
              0.15616437792778015`, 0.025200482457876205`, 
              0.18551650643348694`, 0.12233170866966248`, 
              0.19439439475536346`, 0.17573626339435577`, 
              0.17086777091026306`, 0.10373944789171219`, 
              0.17090730369091034`, 0.10465408861637115`, 0.19431072473526, 
              0.17522864043712616`, 0.11022873222827911`, 
              0.17756232619285583`, 0.19209621846675873`, 
              0.10592734068632126`, 0.12452678382396698`, 
              0.10009077936410904`, 0.10946407914161682`, 
              0.17211377620697021`, 0.10739138722419739`, 
              0.15965130925178528`, 0.1819879114627838, 0.13109488785266876`, 
              0.1725229024887085, 0.1885804980993271, 0.19421221315860748`, 
              0.1613653302192688, 0.16314709186553955`, 0.1633855104446411, 
              0.15959309041500092`, 0.16879643499851227`, 
              0.18505990505218506`, 0.1938450187444687, 0.1915515810251236, 
              0.1640191376209259, 0.19887828826904297`, 0.16427481174468994`, 
              0.17075717449188232`, 0.19758588075637817`, 0.1835789531469345, 
              0.18666666746139526`, 0.19319817423820496`, 
              0.19620220363140106`}], "Children" -> 
            RawArray["Integer16",{{9, 2}, {7, 3}, {10, 4}, {8, 5}, {11, 
              6}, {-6, -7}, {22, 12}, {23, 15}, {24, 16}, {25, 
              20}, {-5, -12}, {26, 13}, {27, 14}, {-14, -15}, {-9, -16}, {34, 
              17}, {33, 18}, {35, 19}, {-19, -20}, {43, 21}, {-21, -22}, {41, 
              28}, {-4, -24}, {42, 30}, {44, 36}, {48, 37}, {-13, -28}, {50, 
              29}, {-29, -30}, {56, 31}, {49, 32}, {-32, -33}, {51, 38}, {54, 
              39}, {-18, -36}, {-26, -37}, {-27, -38}, {-34, -39}, {55, 
              40}, {-40, -41}, {52, 45}, {53, 
              46}, {-11, -44}, {-3, -45}, {-42, -46}, {59, 
              47}, {-47, -48}, {-8, -49}, {-31, -50}, {-23, -51}, {-17, -52}, \
{-2, -53}, {63, 60}, {62, 58}, {-35, -56}, {57, 
              61}, {-25, -58}, {-55, -59}, {-43, -60}, {-54, -61}, {-57, \
-62}, {-10, -63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{42, 41, 27, 26, 40, 22, 41, 42, 102, 27, 26,
               42, 2, 16, 17, 27, 46, 7, 2, 1, 1, 41, 42, 26, 27, 42, 17, 2, 
              17, 41, 34, 2, 42, 27, 2, 16, 46, 22, 27, 12, 7, 42, 41, 27, 34,
               27, 26, 2, 42, 17, 6, 28, 27, 41, 27, 42, 27, 6, 41, 17, 46, 
              32, 2}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////vV01+vx9I8zNZfwDR9vfMwfT5ZVM+gmj9tH1g
+f926p/B/P9u30F0/qX330C0/7yIH2DxQhswvV6p98d+oPkGFyq+2oP4s9+A
zXs/7ecXsL53Ip/A+o4eA9P626rB5sqbngXz49OswPbWe9eD+fLFzyD6Xqn+
BuvrXwCmz5teBdP5s83+gOzbsCX0O9g+BSmwfv/I+z/B/rl08hNIviHz/S+Q
vP+/KrB4/e6U72B3HmhlcACpu/vqF0i8/9YssHv912qC1fEf1wb76/3TarC5
7+9NeQ2i59fuB/PlL/G/Aatv8/8Hti9myV+w+P2gfyDzFxy1OA6yt19r33Ow
vbNFHoDdXzj3L0g+geU6C8h++fmLIPa8/r4ZJH7hSPgHkL74uwZPweYYMTOB
1OmHNn0F2/8mg+EASP7N0z/gcLz07BlYv1Q02B38DckvQfoUNpk9Bpljb64O
du9+wXyGAwAE2WNq
             "], "LeafValues" -> 
            RawArray["Real32",{0.18536852300167084`, 0.18910722434520721`, 
              0.18444085121154785`, 0.17773602902889252`, 
              0.11164605617523193`, 0.0649721547961235, -0.12127611041069031`,
               0.17249026894569397`, 
              0.1906203180551529, -0.0019071229035034776`, 
              0.17385344207286835`, 0.1490749567747116, 0.1702888458967209, 
              0.1863667517900467, 0.1368934065103531, 0.006980089005082846, 
              0.17047542333602905`, 0.13026367127895355`, 
              0.010857483372092247`, 0.13857939839363098`, 
              0.016118917614221573`, 0.03671848028898239, 
              0.16764803230762482`, 0.1733112335205078, 0.1305609792470932, 
              0.16515980660915375`, 0.15984591841697693`, 
              0.10726042091846466`, 0.10925821214914322`, 
              0.16877758502960205`, 0.15496611595153809`, 
              0.11053930222988129`, 0.17531780898571014`, 
              0.14853471517562866`, 0.16229426860809326`, 
              0.12237528711557388`, 0.11486195772886276`, 0.1146165207028389, 
              0.103681281208992, 0.16048938035964966`, 0.09204098582267761, 
              0.10969694703817368`, 0.18642263114452362`, 0.1631517857313156, 
              0.16405686736106873`, 0.1843462735414505, 0.18012887239456177`, 
              0.15344929695129395`, 0.17876377701759338`, 0.1733655482530594, 
              0.1438562124967575, 0.18197600543498993`, 0.18633504211902618`, 
              0.1528797149658203, 0.17939920723438263`, 0.14495716989040375`, 
              0.1793302595615387, 0.16713058948516846`, 0.18944159150123596`, 
              0.1802513301372528, 0.17418968677520752`, 0.1878596395254135, 
              0.19159336388111115`, 0.18102653324604034`}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {7, 3}, {10, 4}, {11, 5}, {9, 
              6}, {-6, -7}, {22, 12}, {23, 13}, {-5, -10}, {25, 19}, {24, 
              21}, {14, 33}, {32, 16}, {36, 15}, {-15, -16}, {34, 17}, {37, 
              18}, {-18, -19}, {28, 20}, {-20, -21}, {-12, -22}, {43, 26}, {
              42, 29}, {-4, -25}, {44, 35}, {27, 
              52}, {-23, -28}, {-11, -29}, {50, 30}, {31, 54}, {-30, -32}, {
              48, 39}, {38, 49}, {57, 
              41}, {-26, -36}, {-8, -37}, {-17, -38}, {-13, -39}, {55, 
              40}, {-40, -41}, {-35, -42}, {56, 46}, {59, 
              45}, {-3, -45}, {-44, -46}, {60, 47}, {-47, -48}, {63, 
              53}, {-34, -50}, {58, 
              51}, {-51, -52}, {-27, -53}, {-49, -54}, {-31, -55}, {-33, \
-56}, {62, 
              61}, {-14, -58}, {-24, -59}, {-2, -60}, {-43, -61}, {-57, -62}, \
{-1, -63}, {-9, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{7, 6, 47, 46, 60, 12, 46, 47, 49, 6, 7, 1, 
              7, 17, 26, 21, 22, 2, 12, 11, 25, 46, 6, 7, 47, 7, 7, 21, 17, 
              12, 6, 22, 21, 21, 17, 2, 21, 21, 36, 7, 11, 47, 47, 6, 7, 27, 
              26, 19, 30, 35, 1, 48, 21, 2, 12, 17, 100, 7, 6, 32, 25, 32, 
              40}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////rx1z6sB9I+9tP+gii63eXgvn6JUxg/vruyWD+
/vtpn0A0/3HtH2BaVQ1M17/k/QXWX2cJ5s/n2/0dRPfryL7bD7Qn4NOZL/Yg
+TybL2Bx9arPIDo/6R2Yf770Atie/W8ZwHz+z6VgefmS6i8g/QwLvj4H6T//
4/pvkPj93Mtgun55P5jWX6j3B6xOVfKPPZB+sK35G0j9f7+jYHfbXzoJdnf9
hzs/QeounH8Pdo+9YRPYHv38z2D7z+eYg/0hP38R2B/+kfd/gu172QV2h8CS
ogcg8wvY3O+A9M/nEvoPkn9fNxGs/n+KGJgvv6bjHdi+tB1/QfoaJNawOYD8
vUH2NDg8WzZdBIlv+L/jA9i8J0s+g6LiwNKpqyxA6vSfbATbxyL8DmTPfQar
w2D3Fc79C9YvNAVCm4s/BIfXQWGw+/Wf3GU4ANS34M2sNyB99Q3SYH/7L2x5
AtYvzvcVHP7m7t/3AwCJY1Wv
             "], "LeafValues" -> 
            RawArray["Real32",{0.17758998274803162`, 0.1766517013311386, 
              0.17715053260326385`, 0.17256727814674377`, 
              0.12506768107414246`, 
              0.05829055607318878, -0.11281118541955948`, 0.1242627426981926, 
              0.16216197609901428`, 0.01211586780846119, 0.1741873025894165, 
              0.17282623052597046`, 0.02631204016506672, 0.16416722536087036`,
               0.13238608837127686`, 0.025792626664042473`, 
              0.13208703696727753`, 0.021679626777768135`, 
              0.17675930261611938`, 0.16627320647239685`, 0.02695734240114689,
               0.1329445242881775, 0.1248985230922699, 0.1608590930700302, 
              0.15383845567703247`, 0.16369114816188812`, 
              0.14285507798194885`, 0.15792015194892883`, 
              0.11495725810527802`, 0.11684815585613251`, 0.1075015664100647, 
              0.14530493319034576`, 0.16196320950984955`, 
              0.10787215828895569`, 0.11940938234329224`, 
              0.11436513066291809`, 0.15488332509994507`, 0.09673478454351425,
               0.1698705404996872, 0.16655100882053375`, 0.17458604276180267`,
               0.12466902285814285`, 0.15719100832939148`, 
              0.10734997689723969`, 0.16133281588554382`, 
              0.17023496329784393`, 0.17028532922267914`, 
              0.14525747299194336`, 0.1686677485704422, 0.17292989790439606`, 
              0.1789495199918747, 0.17936085164546967`, 0.1782761514186859, 
              0.17315787076950073`, 0.15052074193954468`, 
              0.15897677838802338`, 0.16462701559066772`, 0.1848672479391098, 
              0.17415925860404968`, 0.17972424626350403`, 
              0.18502284586429596`, 0.18489862978458405`, 
              0.17814601957798004`, 0.1830478310585022}], "Children" -> 
            RawArray["Integer16",{{11, 2}, {10, 3}, {8, 4}, {7, 5}, {9, 
              6}, {-6, -7}, {22, 12}, {25, 14}, {-5, -10}, {23, 13}, {24, 
              18}, {-8, -13}, {16, 26}, {35, 15}, {-15, -16}, {34, 
              17}, {-17, -18}, {36, 19}, {30, 20}, {41, 
              21}, {-21, -22}, {-4, -23}, {44, 27}, {40, 31}, {42, 29}, {37, 
              45}, {28, 52}, {-24, -29}, {-26, -30}, {55, 39}, {32, 48}, {51, 
              33}, {-33, -34}, {-11, -35}, {-9, -36}, {53, 38}, {-14, -38}, {
              43, 61}, {-31, -40}, {58, 
              46}, {-20, -42}, {-3, -43}, {-37, -44}, {57, 50}, {-27, -46}, {
              56, 47}, {-47, -48}, {49, 
              62}, {-32, -50}, {-45, -51}, {-25, -52}, {-28, -53}, {54, 
              63}, {-12, -55}, {-19, -56}, {-41, -57}, {-2, -58}, {60, 
              59}, {-59, -60}, {-1, -61}, {-39, -62}, {-49, -63}, {-54, \
-64}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{17, 16, 21, 22, 59, 2, 22, 21, 16, 17, 111, 
              17, 37, 36, 37, 11, 12, 2, 1, 37, 36, 21, 16, 22, 17, 37, 17, 
              17, 2, 14, 16, 2, 1, 36, 2, 1, 1, 11, 31, 21, 37, 36, 17, 16, 
              31, 21, 16, 21, 1, 27, 73, 31, 2, 16, 47, 2, 2, 90, 17, 73, 45, 
              7, 11}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L///+f7yn/sB9El3N/BNHrzwqB6fqw5+9B9HvFejD/
vvnCzyD6/+VF30E0v/FRMJ2vdBZM29csgYiLH/21H2j+ggtxX+2BfPnfc7+A
xOcrPQPrl3dUB9Px862/gs1Vlgabb8/rBha//1cPrL7/kSfYfn+h9ffA+my8
foPd9+QWmK6fq/AH7J4GZTA9X8rhO8hehUXN3+yB9Aa9cgYHkHv6H4LNf/8p
9zdIPiDjwHd7JHH71xpge/6XmPwE818W/QLTHDfB7jnvuuIHWP6bHNhfE5LX
3wDrP7vrL1g8f/YTsP0tMnfA7p7G+x8cLouPg+XvVytcBPuX5dU3kH4Gzxmf
QO5zEFs8HWTOfeY0sPvrL7beBJu/YfMTkLh+LMsFsPjeN//B/ros9g+s/oAA
xN0iq9+A7ck1BYdjvH/ec7B7tz5gOABU/yHk3HeQPQUXWl+BzYu5BI7n+hdb
Hu8HAO+iXbE=
             "], "LeafValues" -> 
            RawArray["Real32",{0.164383202791214, 0.17345558106899261`, 
              0.1772991269826889, 0.16058281064033508`, 0.12455447763204575`, 
              0.06787846237421036, -0.10789176821708679`, 0.1326626092195511, 
              0.1541745811700821, 0.16551083326339722`, 0.1703346222639084, 
              0.018300730735063553`, 0.15838739275932312`, 
              0.02311743050813675, 0.12959425151348114`, 0.01428996678441763, 
              0.12091251462697983`, 0.016884326934814453`, 
              0.17580273747444153`, 0.14381641149520874`, 
              0.10416735708713531`, 0.0076053268276154995`, 
              0.16147087514400482`, 0.15759654343128204`, 
              0.11415143311023712`, 0.1456817388534546, 0.08999671787023544, 
              0.15160630643367767`, 0.16871240735054016`, 
              0.11006136238574982`, 0.10820639878511429`, 
              0.16306951642036438`, 0.14964841306209564`, 0.1039833128452301, 
              0.10510210692882538`, 0.14370080828666687`, 0.09853541105985641,
               0.16132120788097382`, 0.11617685109376907`, 
              0.16934075951576233`, 0.15292935073375702`, 0.09363706409931183,
               0.10482903569936752`, 0.16199898719787598`, 
              0.16749565303325653`, 0.16963937878608704`, 0.1455232948064804, 
              0.1634455919265747, 0.15152394771575928`, 0.1529020071029663, 
              0.14579901099205017`, 0.16823531687259674`, 
              0.16718114912509918`, 0.14788110554218292`, 
              0.15945269167423248`, 0.17922762036323547`, 
              0.14124809205532074`, 0.14748451113700867`, 
              0.18014244735240936`, 0.17263270914554596`, 
              0.16950824856758118`, 0.17189577221870422`, 
              0.17786796391010284`, 0.170282244682312}], "Children" -> 
            RawArray["Integer16",{{10, 2}, {9, 3}, {8, 4}, {7, 5}, {11, 
              6}, {-6, -7}, {24, 13}, {22, 14}, {23, 12}, {25, 
              18}, {-5, -12}, {16, 28}, {-8, -14}, {34, 15}, {-15, -16}, {38, 
              17}, {-17, -18}, {35, 19}, {37, 20}, {26, 21}, {-21, -22}, {40, 
              30}, {44, 27}, {-4, -25}, {43, 31}, {-20, -27}, {29, 51}, {36, 
              46}, {-24, -30}, {-23, -31}, {32, 54}, {45, 
              33}, {-33, -34}, {-9, -35}, {52, 39}, {-13, -37}, {49, 
              42}, {-10, -39}, {41, 57}, {-3, -41}, {-36, -42}, {-38, -43}, {
              55, 47}, {58, 48}, {-26, -46}, {-29, -47}, {50, 
              61}, {-45, -49}, {-19, -50}, {-44, -51}, {-28, -52}, {53, 
              62}, {-11, -54}, {56, 60}, {63, 
              59}, {-32, -57}, {-40, -58}, {-2, -59}, {-56, -60}, {-55, -61}, \
{-48, -62}, {-53, -63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{2, 1, 42, 41, 117, 32, 1, 18, 2, 41, 42, 2, 
              27, 1, 26, 17, 46, 32, 11, 12, 27, 41, 1, 42, 2, 2, 11, 36, 2, 
              27, 11, 52, 17, 16, 11, 1, 26, 12, 32, 42, 12, 42, 2, 1, 11, 27,
               2, 1, 2, 11, 31, 1, 26, 119, 108, 17, 1, 42, 41, 11, 16, 11, 
              26}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////Hvwv8sB9I5/PafQTR72fMAvPruxaD+fbzPr0H
0fdZXn0G0evljnwH85Orf4Do+Kv+YFrfYxdYXJ7z4vf9QPMFmM58sQfy/Y8e
+wTm/3H7AeKfb9f+Ajbn0F2wef67XoL58fGKYP78NdfBfPtbE8C0fmjTV7D7
Xqn+BtH/I8+B6fnCjn/A9km5/QGbn9TxDWT+e63CTyDxfu+zH0DiH3Iq/4PF
Ew7+APEN3vY8tgf5/+eWwyDx/HciYPXnww+C/S1fUv0FpG7DHEewvnxFc7B9
/VlGYPv07c/9ArtvSfF1EL3/fhpYv3+b/z9wuO198x9sXnIehO/ZUQ+my/v+
gsy9EHbkkz0sPED8V/kMDiD/vIn8Bla3/vNGkDqGiXNZweKnvz8F8RUaTD6D
1C+YeO8jOBx7ysHu5ff+fxXsDtXk9yB1Dfqh80HqGtaueQGiFS6L/QPRBR0P
doL01c8WebAfAO2ZSsc=
             "], "LeafValues" -> 
            RawArray["Real32",{0.16096924245357513`, 0.16476915776729584`, 
              0.16034261882305145`, 0.15221059322357178`, 0.1008487418293953, 
              0.06816243380308151, -0.10129150003194809`, 
              0.15482160449028015`, 0.0006598352338187397, 0.1580878049135208,
               0.1274094581604004, 0.16010749340057373`, 0.1547541469335556, 
              0.15816819667816162`, 0.15098696947097778`, 
              0.12193787842988968`, 0.018787501379847527`, 
              0.024979187175631523`, 0.12683087587356567`, 
              0.01724991761147976, 0.12950527667999268`, 0.02527620643377304, 
              0.10310091823339462`, 0.1502355933189392, 0.14320451021194458`, 
              0.13797704875469208`, 0.14192835986614227`, 
              0.10449276119470596`, 0.10262678563594818`, 
              0.16457147896289825`, 0.1268261820077896, 0.14882545173168182`, 
              0.1374858170747757, 0.14589861035346985`, 0.10289666056632996`, 
              0.09568784385919571, 0.1337503343820572, 0.11495629698038101`, 
              0.1156717836856842, 0.1105896383523941, 0.07820989936590195, 
              0.09514734148979187, 0.13975657522678375`, 0.15589098632335663`,
               0.15112535655498505`, 0.15492598712444305`, 
              0.12676450610160828`, 0.16700774431228638`, 
              0.16402500867843628`, 0.16062548756599426`, 
              0.13781139254570007`, 0.16244643926620483`, 
              0.15210191905498505`, 0.14246168732643127`, 
              0.16207465529441833`, 0.15853649377822876`, 0.1752343773841858, 
              0.16157443821430206`, 0.16927315294742584`, 0.1567511409521103, 
              0.16410629451274872`, 0.13472256064414978`, 
              0.16514119505882263`, 0.15606483817100525`}], "Children" -> 
            RawArray["Integer16",{{9, 2}, {7, 3}, {11, 4}, {10, 5}, {8, 
              6}, {-6, -7}, {23, 12}, {-5, -9}, {25, 13}, {22, 17}, {24, 
              20}, {18, 29}, {30, 14}, {15, 36}, {37, 
              16}, {-16, -17}, {-11, -18}, {39, 19}, {-19, -20}, {38, 
              21}, {-21, -22}, {-4, -23}, {44, 26}, {42, 28}, {43, 32}, {27, 
              49}, {-24, -28}, {-25, -29}, {35, 50}, {45, 31}, {40, 60}, {33, 
              54}, {51, 34}, {-34, -35}, {-13, -36}, {41, 
              52}, {-14, -38}, {-12, -39}, {-8, -40}, {-31, -41}, {-15, -42}, \
{-3, -43}, {57, 48}, {56, 47}, {46, 62}, {-10, -47}, {-45, -48}, {53, 
              59}, {-27, -50}, {-30, -51}, {-26, -52}, {-37, -53}, {-44, \
-54}, {55, 61}, {-33, -56}, {-2, -57}, {63, 
              58}, {-58, -59}, {-49, -60}, {-32, -61}, {-55, -62}, {-46, \
-63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{12, 11, 62, 37, 36, 17, 11, 12, 61, 36, 37, 
              12, 37, 31, 46, 7, 22, 46, 47, 21, 7, 11, 12, 21, 22, 12, 37, 
              12, 46, 36, 11, 7, 6, 22, 37, 47, 36, 46, 17, 11, 32, 47, 12, 
              75, 22, 36, 36, 21, 68, 6, 12, 41, 17, 11, 50, 74, 32, 11, 32, 
              3, 36, 42, 42}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////H7y/9sB9Iv9+S8GE/UHzBoSPv7IH8/kkln0Di
9rfNP4No/791YNp+1qLvYHryoe8g9Q9yn/0EqY/v2vgTJH6/9eJPkLhB3bov
IHF76eMfQeL5ZlZgffrbqsHmyJueBZuf/7UcTOs/OA8W3+95D0zPr0i/D5bf
1guxd5XDbxDdn2X0B0SfzzH/BVY/Xx/sjgVdEt9B9uVf8PsH4n84WsfgAOTz
l2mA1cVPsv4EVrcr8QdI3f9db8Dm3t+qDba/vnDBDxDNv9kGTO9vWQym451b
v4Hdu3QJxF9z7jwAh89b3r9gd7dvfgHWNz3hNZiWEP4PUrfBjnEDSF196Bmw
e/V96l6B/ZVrfw7sDy3uvxB3tu60B9Hz9d+CaIcHTf/B9M8SsD31WzzugtUn
xoD99aDD8xNIfkPs0c8g+fVVp+6B3bns2R1wPPbYgOPRgfcQOPznt8iAxfdP
2P4WbM6v35/3AwC/X1P4
             "], "LeafValues" -> 
            RawArray["Real32",{0.15518417954444885`, 0.1684805452823639, 
              0.1542300581932068, 0.14440208673477173`, 0.1316089779138565, 
              0.0723041445016861, -0.09144250303506851, 0.14996744692325592`, 
              0.1563180536031723, 0.15636904537677765`, 0.03498149290680885, 
              0.12660495936870575`, 0.1578008234500885, 0.11509913951158524`, 
              0.010601055808365345`, 0.11683741956949234`, 
              0.010800367221236229`, 0.1423630267381668, 0.1428195685148239, 
              0.09559642523527145, 0.007491867523640394, 
              0.032425444573163986`, 0.14157181978225708`, 
              0.13500219583511353`, 0.13633042573928833`, 0.08549816906452179,
               0.13679102063179016`, 0.11604539304971695`, 
              0.15348070859909058`, 0.09567596018314362, 0.09727245569229126, 
              0.1324520707130432, 0.14248794317245483`, 0.09568386524915695, 
              0.12361856549978256`, 0.09822437912225723, 0.0967099517583847, 
              0.09418198466300964, 0.10024049878120422`, 0.15917733311653137`,
               0.14000782370567322`, 0.1293053925037384, 0.07775381207466125, 
              0.13769707083702087`, 0.16031931340694427`, 
              0.14582186937332153`, 0.13317501544952393`, 
              0.15878430008888245`, 0.13748741149902344`, 
              0.15163065493106842`, 0.156272754073143, 0.15412189066410065`, 
              0.15521103143692017`, 0.16381780803203583`, 
              0.15893849730491638`, 0.14900681376457214`, 
              0.15298889577388763`, 0.1253300905227661, 0.15533632040023804`, 
              0.1636212021112442, 0.14739735424518585`, 0.14727278053760529`, 
              0.1582239419221878, 0.1572900116443634}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {7, 3}, {4, 9}, {11, 5}, {10, 
              6}, {-6, -7}, {22, 12}, {23, 17}, {13, 24}, {-5, -11}, {27, 
              21}, {15, 28}, {35, 14}, {-14, -15}, {29, 16}, {-16, -17}, {34, 
              18}, {38, 19}, {36, 20}, {-20, -21}, {-12, -22}, {40, 26}, {43, 
              31}, {48, 25}, {-25, -26}, {30, 51}, {-3, -28}, {37, 
              46}, {-8, -30}, {-23, -31}, {32, 55}, {47, 33}, {-33, -34}, {45,
               41}, {-4, -36}, {-19, -37}, {-13, -38}, {53, 39}, {-39, -40}, {
              54, 44}, {52, 42}, {-42, -43}, {58, 49}, {-41, -45}, {60, 
              57}, {-29, -47}, {-24, -48}, {-10, -49}, {50, 
              62}, {-44, -51}, {-27, -52}, {-35, -53}, {-18, -54}, {-2, -55}, \
{56, 63}, {-32, -57}, {-46, -58}, {61, 
              59}, {-59, -60}, {-9, -61}, {-1, -62}, {-50, -63}, {-56, -64}}],
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
             "NominalNodeNumber" -> 0|>], 
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{7, 6, 27, 26, 88, 2, 26, 6, 7, 28, 27, 26, 
              27, 46, 16, 47, 46, 21, 22, 31, 32, 26, 6, 7, 27, 26, 31, 32, 
              47, 46, 21, 27, 47, 46, 22, 46, 27, 22, 21, 31, 111, 7, 6, 27, 
              47, 22, 26, 36, 118, 46, 30, 112, 46, 47, 6, 32, 32, 7, 37, 10, 
              27, 39, 62}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L///+f/+/0fj+Q9o8V/wCi59cd/wii+bdogvnyPiWf
QPR984WfwfQds+8g+r1IOJg+7+YC4edO+wWmEw7+ANH7g9a9AdH/GZKegM3f
9fILmFZT/wbWF5EEsaf51jMwnXcHbE/+29tge/PjDkPsZXkFtnf9hqVg8+t/
2P8G08v7wXT+bLM/IFr/aRzYXPvNhnfA+hZ1XweLu+r+BItXaYLt5zc+Cnbv
fL21YH5/As9TMN0dcA8sP9ERLK7/4DzYXn+zVS/A/vkv9hZs75VIcHitr5T8
uR8YjgmKm8/bg/Rf9v0HVhfP+Rdsv7rkfxAdb7MV4t8Vzx6DzTWVAPvjfmDi
A5B+BaNz+0H6+X0LPoD4DuEVV+1B8VPSdwkkXv96BTg8+79PBJsbfygDYs99
r8tg93W/vQY293kqwwGQP6WB8QfU/6Hz+TOQORe8XM6C6Alu5p9BdIFv4HV7
AHAWZm8=
             "], "LeafValues" -> 
            RawArray["Real32",{0.1490122228860855, 0.16076943278312683`, 
              0.1558830887079239, 0.14454950392246246`, 0.11563423275947571`, 
              0.056535638868808746`, -0.09519926458597183, 
              0.11569318175315857`, 0.15235576033592224`, 
              0.15785180032253265`, 0.02003534696996212, 0.14556501805782318`,
               0.13642923533916473`, 0.11887788772583008`, 
              0.010829087346792221`, 0.0012289655860513449`, 
              0.14936433732509613`, 0.13820071518421173`, 
              0.0958796814084053, -0.0023977330420166254`, 
              0.11973504722118378`, 0.026117749512195587`, 
              0.09191859513521194, 0.14340324699878693`, 0.15131445229053497`,
               0.10249920934438705`, 0.14312759041786194`, 
              0.12907138466835022`, 0.0821690484881401, 0.14374828338623047`, 
              0.13582004606723785`, 0.08075983822345734, 0.08663467317819595, 
              0.14485424757003784`, 0.13099290430545807`, 0.08076673001050949,
               0.08122942596673965, 0.126347616314888, 0.07155156880617142, 
              0.08012572675943375, 0.10443760454654694`, 0.13980495929718018`,
               0.12736432254314423`, 0.13188418745994568`, 
              0.13671407103538513`, 0.13946525752544403`, 
              0.11144786328077316`, 0.1260795295238495, 0.12361437827348709`, 
              0.1542178839445114, 0.11817210167646408`, 0.14412043988704681`, 
              0.14738905429840088`, 0.12623794376850128`, 
              0.14625227451324463`, 0.15058226883411407`, 
              0.11911968886852264`, 0.1259097307920456, 0.1515491008758545, 
              0.159460186958313, 0.13762664794921875`, 0.1440453827381134, 
              0.14750437438488007`, 0.15205025672912598`}], "Children" -> 
            RawArray["Integer16",{{9, 2}, {8, 3}, {11, 4}, {7, 5}, {10, 
              6}, {-6, -7}, {22, 14}, {23, 12}, {24, 16}, {-5, -11}, {25, 
              20}, {26, 13}, {32, 15}, {-8, -15}, {-14, -16}, {29, 17}, {30, 
              18}, {31, 19}, {-19, -20}, {40, 21}, {-21, -22}, {-4, -23}, {43,
               27}, {42, 33}, {44, 41}, {47, 36}, {48, 28}, {-28, -29}, {54, 
              37}, {53, 39}, {-18, -32}, {-13, -33}, {45, 34}, {50, 
              35}, {-35, -36}, {-27, -37}, {56, 
              38}, {-38, -39}, {-31, -40}, {-12, -41}, {-26, -42}, {58, 51}, {
              55, 49}, {-3, -45}, {60, 
              46}, {-46, -47}, {-9, -48}, {-24, -49}, {-44, -50}, {-34, -51}, \
{52, 63}, {-43, -53}, {-17, -54}, {62, 
              57}, {-2, -56}, {-30, -57}, {-55, -58}, {59, 
              61}, {-1, -60}, {-25, -61}, {-59, -62}, {-10, -63}, {-52, \
-64}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{47, 46, 21, 22, 1, 2, 22, 46, 47, 21, 1, 47,
               2, 16, 17, 7, 6, 32, 31, 1, 2, 46, 22, 47, 21, 47, 3, 47, 6, 
              46, 21, 32, 16, 55, 31, 16, 32, 7, 6, 46, 47, 27, 2, 47, 13, 21,
               97, 117, 38, 97, 6, 7, 32, 46, 32, 21, 49, 2, 52, 2, 2, 42, 
              12}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L///+vr93xfj+QjndQ/QCi6yc6fALR/+8ZvgPR76+p
fwbLp1l9BNH75+t/B9HnN936BqLl7ywD8/vbt/0A0et5TX7sB5q/wPTAZ3uQ
eeonvoDNmfYTTNufzwGbk7+tF2zu+frJj8D6Z/qA5fs5RMHi/jPdvoLdwWkM
do/9GsffYPfNVfgDovUX6oHp/anFf8D2LTj3BWQfP6s/2H6BKI4/IP75ipdf
wPycrd/tQfT6S79A4vGzroL9u95N5xdIfkP+70Mg8ffuS9+A7a91ALtHP0X8
J4ief/Q8mL5vev0imM4V/wt2X4rYfxDNH232AhJuge9A5j3wDmJ0ANIBSYL7
wO46u+svSLzhvekNkDsmWPeAaQbhp9vB7lL69BKkbn+SDsQ+LiGwueuvbFoP
9v92eTD//AcbsPkCN6wZQOYnfJN/ADbfNRHsT4Ourm/gcN+dAo6X/W8ZwP7Y
b+8H9q/9hGMf9gMAmyJMag==
             "], "LeafValues" -> 
            RawArray["Real32",{0.13817192614078522`, 0.15845078229904175`, 
              0.1572657972574234, 0.14058123528957367`, 0.11517967283725739`, 
              0.044687315821647644`, -0.09380999207496643, 
              0.10963278263807297`, 0.14558956027030945`, 
              0.13945206999778748`, 0.10977578908205032`, 
              0.017538968473672867`, 0.13466821610927582`, 
              0.010949189774692059`, 
              0.09914405643939972, -0.000805232091806829, 0.1411670297384262, 
              0.13344696164131165`, 0.10905234515666962`, 
              0.004498704802244902, 0.11098439991474152`, 
              0.021469689905643463`, 0.13572832942008972`, 
              0.09354861825704575, 0.12596255540847778`, 0.10440019518136978`,
               0.12521977722644806`, 0.08004841953516006, 
              0.10867346823215485`, 0.12992262840270996`, 
              0.14233717322349548`, 0.11985993385314941`, 0.0843517854809761, 
              0.09032438695430756, 0.14534533023834229`, 0.07854578644037247, 
              0.06827930361032486, 0.0875220075249672, 0.1396998018026352, 
              0.15414544939994812`, 0.12707480788230896`, 
              0.12650002539157867`, 0.12787292897701263`, 0.08119047433137894,
               0.13254038989543915`, 0.15264639258384705`, 
              0.14022007584571838`, 0.14361146092414856`, 
              0.13879527151584625`, 0.14353828132152557`, 
              0.13910244405269623`, 0.12119058519601822`, 
              0.13664503395557404`, 0.1135183572769165, 0.14899231493473053`, 
              0.12134082615375519`, 0.13807885348796844`, 0.118805892765522, 
              0.15444618463516235`, 0.14509257674217224`, 
              0.15050631761550903`, 0.14725372195243835`, 
              0.14852051436901093`, 0.14502869546413422`}], "Children" -> 
            RawArray["Integer16",{{9, 2}, {8, 3}, {10, 4}, {7, 5}, {11, 
              6}, {-6, -7}, {23, 13}, {22, 12}, {24, 16}, {25, 
              20}, {-5, -12}, {14, 28}, {-8, -14}, {33, 15}, {-15, -16}, {38, 
              17}, {29, 18}, {37, 19}, {-19, -20}, {39, 21}, {-21, -22}, {40, 
              26}, {-4, -24}, {41, 30}, {46, 34}, {27, 47}, {-23, -28}, {36, 
              44}, {51, 35}, {31, 50}, {32, 
              56}, {-25, -33}, {-9, -34}, {-26, -35}, {-30, -36}, {-13, -37}, \
{-18, -38}, {52, 42}, {-11, -40}, {54, 45}, {58, 48}, {53, 
              43}, {-43, -44}, {-29, -45}, {-41, -46}, {-3, -47}, {-27, -48}, \
{49, 60}, {-42, -50}, {55, 61}, {-17, -52}, {62, 
              57}, {-39, -54}, {-2, -55}, {-31, -56}, {-32, -57}, {-53, -58}, \
{63, 59}, {-59, -60}, {-49, -61}, {-51, -62}, {-10, -63}, {-1, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{32, 31, 11, 12, 14, 16, 12, 32, 31, 11, 14, 
              32, 37, 36, 16, 17, 36, 37, 42, 16, 27, 12, 32, 31, 11, 37, 31, 
              36, 32, 42, 41, 32, 16, 16, 16, 16, 12, 17, 90, 16, 36, 32, 31, 
              37, 21, 11, 7, 44, 82, 32, 36, 3, 70, 119, 28, 2, 32, 99, 27, 
              37, 6, 44, 51}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L///+f/2Dzbj+Qtn/++gOI9vfo+Aii65vk34P5y/Q/
geULXnwG0fN3nf4GppXVvoPo908Uf4DV7RP8CaLPu0v/2g80P+CN/Wd7kL6S
Voi5/BuegOlahy8gOl7lFFi8PmLjVzBf9hLYnvifR8Dy/mrqYHv8jx6D2P+R
8TeIXq8l8QeszvEgmP/+QB6Y/37i8W8gex1uWv0E2fu+JPQriC/gdf8riC8f
Phfs/vNfWz6DxBm+tf0Hicef3vMaJL5/i9wLsPluOr/A6jJnQ9wZfRqsz56l
7TlI3wHu/ctB+vafswbbH9+1EexveXXW/2B1Xuv+gt19bTZYvn7K5jsguj8x
5h+I/l9W9wDszopL9eDwuaD9BMQ3mGvB5ADk89/bCg6/BTceXLQH0hvCY26B
aIX/rm9BdMDDE29A+uZrPwWHi355AsMBkDmOFTfA8VJ3HBx/8ttkwO7Jj2K7
DA4Hf+8nIP0Gj869tAcAj7FTzw==
             "], "LeafValues" -> 
            RawArray["Real32",{0.14104656875133514`, 0.14352698624134064`, 
              0.15602558851242065`, 0.13500387966632843`, 0.1044820249080658, 
              0.05306630581617355, -0.08943790942430496, 0.11113063991069794`,
               0.1450534164905548, 0.14684860408306122`, 0.14263829588890076`,
               0.015390015207231045`, 0.13652655482292175`, 
              0.14511515200138092`, 0.14113052189350128`, 
              0.08608193695545197, -0.007965936325490475, 0.1118822917342186, 
              0.019327104091644287`, 0.01020024623721838, 
              0.10569801926612854`, 0.011227553710341454`, 
              0.08570562303066254, 0.11062639206647873`, 0.12320660054683685`,
               0.10369574278593063`, 0.12243014574050903`, 
              0.11435674130916595`, 0.12325730174779892`, 
              0.12658639252185822`, 0.12946893274784088`, 0.08069082349538803,
               0.11238601058721542`, 0.08511598408222198, 0.07251523435115814,
               0.09212765097618103, 0.08232560008764267, 0.11058373749256134`,
               0.05833284929394722, 0.14165404438972473`, 
              0.10042770206928253`, 0.10582829266786575`, 
              0.12089577317237854`, 0.12949390709400177`, 
              0.13073700666427612`, 0.1428774744272232, 0.140389084815979, 
              0.10217572003602982`, 0.13517554104328156`, 
              0.14674188196659088`, 0.13140757381916046`, 
              0.12361284345388412`, 0.13758185505867004`, 
              0.14278656244277954`, 0.13672445714473724`, 0.1397133767604828, 
              0.15538662672042847`, 0.13600531220436096`, 0.1473252773284912, 
              0.15116900205612183`, 0.13354915380477905`, 
              0.14358484745025635`, 0.14618510007858276`, 
              0.14628075063228607`}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {9, 3}, {10, 4}, {7, 5}, {11, 
              6}, {-6, -7}, {22, 19}, {23, 13}, {24, 12}, {25, 
              17}, {-5, -12}, {20, 32}, {26, 14}, {28, 15}, {35, 
              16}, {-16, -17}, {41, 18}, {-18, -19}, {-8, -20}, {40, 
              21}, {-21, -22}, {-4, -23}, {42, 27}, {43, 29}, {46, 39}, {44, 
              37}, {30, 54}, {51, 34}, {33, 53}, {45, 31}, {-31, -32}, {36, 
              50}, {-25, -34}, {-29, -35}, {-15, -36}, {-13, -37}, {61, 
              38}, {-38, -39}, {-26, -40}, {-10, -41}, {-11, -42}, {57, 48}, {
              56, 49}, {60, 47}, {-24, -46}, {-3, -47}, {-45, -48}, {52, 
              62}, {-44, -50}, {-33, -51}, {-14, -52}, {-43, -53}, {-30, \
-54}, {55, 63}, {-28, -56}, {-2, -57}, {59, 
              58}, {-58, -59}, {-1, -60}, {-9, -61}, {-27, -62}, {-49, -63}, \
{-55, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 
            0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{17, 16, 36, 37, 101, 27, 16, 17, 37, 36, 60,
               21, 22, 27, 46, 26, 42, 41, 32, 26, 27, 16, 37, 17, 36, 22, 26,
               21, 23, 114, 6, 42, 27, 16, 26, 21, 26, 104, 21, 16, 22, 42, 
              17, 36, 26, 66, 16, 21, 116, 27, 47, 26, 36, 32, 32, 27, 16, 27,
               92, 12, 2, 11, 14}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////nh3O92w+k1+90eQ+i4ydZfwLR/Y88wXz+b58/
g/mx9WBaf2rSdxC9f63cD7C+rP1g/v8Sk58gWt7m3B+w+mfnweaez5x7H6xv
kiJY/3vtVV/B6tILHoDV/foNFr8v3vsFRNc3SIPtj/f4B1bnH2cBNmf/Oevf
YP612WD6f4My2J766Atgfj3nI7A5+ef+fACr8wr7vh/ozw3S+vvsgfQH/bdb
7UH2VZ8Fm//e7DrY/f0FHb/B6hQbf4DUFUzi/AOiBdZf+gVSL5+88xVIvqAp
ajVY/86t18H2LD7+F0TbGzZBwuXH7Ddg86bx/gfbf34dWL7+Vwc4XPj/3LoP
MkdA3ekj2FwbL7C9ChnuT0D8+outN8HhcEDgI0j8wcZvTA4gfmgyOPzeXy3/
CKYndoP9V1/e9xes/7LYP5B7HTwW3wD7s86sH0RPsGh5CqIf/F+5EWT+e63C
TyD1F9LE39kDAPfjUyk=
             "], "LeafValues" -> 
            RawArray["Real32",{0.1312159299850464, 0.14155766367912292`, 
              0.1497637927532196, 0.13185307383537292`, 0.11530404537916183`, 
              0.05613919720053673, -0.08518874645233154, 0.14322640001773834`,
               0.14216338098049164`, 0.09331481158733368, 0.09996100515127182,
               0.02667500637471676, 0.12302819639444351`, 
              0.10468938201665878`, 
              0.13482730090618134`, -0.0010940401116386056`, 
              0.1252685934305191, 0.10446525365114212`, 
              0.0014131671050563455`, 0.012697265483438969`, 
              0.09413687139749527, 0.01858462579548359, 0.07465492188930511, 
              0.08614405244588852, 0.08411307632923126, 0.09259425103664398, 
              0.07326231151819229, 0.13463930785655975`, 0.11695575714111328`,
               0.11633674055337906`, 0.12207803130149841`, 
              0.06372889876365662, 0.07625327259302139, 0.11889542639255524`, 
              0.12627682089805603`, 0.11697835475206375`, 
              0.12320242822170258`, 0.07481815665960312, 0.13294602930545807`,
               0.14630520343780518`, 0.12246653437614441`, 
              0.12127377837896347`, 0.08168726414442062, 0.13187555968761444`,
               0.12820976972579956`, 0.1051129549741745, 0.14139679074287415`,
               0.1345973014831543, 0.12190568447113037`, 0.13636133074760437`,
               0.11674308776855469`, 0.14003050327301025`, 
              0.13467863202095032`, 0.14362090826034546`, 
              0.14991290867328644`, 0.15158392488956451`, 0.137389674782753, 
              0.12920764088630676`, 0.10330994427204132`, 
              0.11985551565885544`, 0.14394570887088776`, 
              0.13828101754188538`, 0.13991937041282654`, 
              0.13374190032482147`}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {7, 3}, {10, 4}, {9, 5}, {11, 
              6}, {-6, -7}, {22, 12}, {24, 14}, {23, 19}, {25, 
              20}, {-5, -12}, {28, 13}, {26, 15}, {33, 16}, {-14, -16}, {27, 
              17}, {32, 18}, {-18, -19}, {-10, -20}, {39, 21}, {-21, -22}, {
              40, 29}, {-4, -24}, {43, 34}, {44, 38}, {-13, -27}, {45, 31}, {
              48, 37}, {30, 49}, {-23, -31}, {-28, -32}, {-17, -33}, {56, 
              41}, {35, 57}, {36, 
              52}, {-25, -37}, {-29, -38}, {-26, -39}, {-11, -40}, {55, 46}, {
              53, 42}, {-42, -43}, {51, 
              47}, {-3, -45}, {-15, -46}, {-41, -47}, {50, 
              60}, {-8, -49}, {-30, -50}, {-44, -51}, {62, 
              54}, {-36, -53}, {-34, -54}, {-52, -55}, {-2, -56}, {63, 59}, {
              58, 61}, {-35, -59}, {-57, -60}, {-48, -61}, {-58, -62}, {-1, \
-63}, {-9, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{42, 41, 1, 2, 46, 47, 2, 1, 41, 42, 46, 47, 
              26, 27, 42, 41, 1, 26, 47, 47, 22, 1, 2, 42, 41, 46, 26, 42, 37,
               78, 48, 1, 91, 112, 41, 26, 22, 1, 1, 46, 7, 32, 41, 42, 42, 2,
               109, 31, 58, 28, 84, 91, 7, 12, 37, 42, 62, 83, 1, 116, 49, 11,
               7}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L/QFBs8Gk/kJrvcA9M27/WeA+mRVa/AdH6D85/BtH/
v+wHy8df9f8BlrcO/w6i/XfM/Anmz4iB0AvUwPT9H1s+gvk2bV/A5kxS/Lwf
aO+Dy28/2YPo90e/gugPDII/QTRDfe8Pe6C6/A1pn8Dqqt9/BPH3u/p+A+vf
ZPobRMtLuf0B0fxZM/+C6ProADD//+yTD0D0+g1Lf4H0B2yy/Q3Sv14ocwtI
/P0O5Qkg8Qulv4+AxOODef6C+AbBi96C+PNfvn8H4gu4m0Pck5T+H+yer+Vg
91yIiGZwQHJvQ8zrDyB5/ZK1YP/1z/QB0++lov+B1Dc4ljI7gNyp9/k/SPz8
x1KwP85fir8Idv9thWMgdQfYTB+D/ckkcRnEd0hnPgoyX2Hr4+dg8+2P3QCH
84pN4HjJj2f+Cg5fiSdgdxUwa/4EqZO/XfUD7O9fIowgd15Q2PcfZI7Ak9sf
weGsFXcTpK5eruTTfgCobjMF
             "], "LeafValues" -> 
            RawArray["Real32",{0.12939462065696716`, 0.13508844375610352`, 
              0.1445518136024475, 0.13112612068653107`, 0.11201941221952438`, 
              0.05702425166964531, -0.08176451921463013, 0.09083962440490723, 
              0.13418953120708466`, 0.09093806147575378, 0.10957811772823334`,
               0.025866946205496788`, 0.0077463435009121895`, 
              0.09647955000400543, 0.003547988599166274, 0.13176649808883667`,
               0.11563986539840698`, 0.12508022785186768`, 0.0772421807050705,
               0.026267368346452713`, 0.1045701801776886, 
              0.023876121267676353`, 0.113584004342556, 0.08851557970046997, 
              0.09275894612073898, 0.0930192694067955, 0.0751245841383934, 
              0.08590736240148544, 0.11002219468355179`, 0.13707226514816284`,
               0.1258358359336853, 0.13375632464885712`, 0.12062647938728333`,
               0.12489408999681473`, 0.07898807525634766, 
              0.13260184228420258`, 0.11296328157186508`, 0.1284009963274002, 
              0.13013367354869843`, 0.11563627421855927`, 
              0.12820051610469818`, 0.0818997174501419, 0.07964759320020676, 
              0.12874293327331543`, 0.12751008570194244`, 
              0.12207834422588348`, 0.11120808124542236`, 0.1414467990398407, 
              0.1428275853395462, 0.14162284135818481`, 0.1385214775800705, 
              0.13792496919631958`, 0.13728050887584686`, 
              0.11308401823043823`, 0.14664441347122192`, 
              0.14842243492603302`, 0.14144285023212433`, 0.1359277367591858, 
              0.10154329985380173`, 0.12723372876644135`, 
              0.13644097745418549`, 0.12602420151233673`, 
              0.12666751444339752`, 0.13611747324466705`}], "Children" -> 
            RawArray["Integer16",{{10, 2}, {9, 3}, {8, 4}, {7, 5}, {11, 
              6}, {-6, -7}, {23, 12}, {22, 13}, {25, 15}, {24, 
              16}, {-5, -12}, {-8, -13}, {27, 14}, {-14, -15}, {19, 28}, {17, 
              33}, {18, 38}, {21, 36}, {29, 20}, {-20, -21}, {-11, -22}, {32, 
              26}, {-4, -24}, {45, 35}, {43, 30}, {-23, -27}, {-9, -28}, {34, 
              44}, {-10, -30}, {31, 49}, {-26, -32}, {-3, -33}, {37, 
              56}, {-16, -35}, {39, 52}, {-19, -37}, {48, 41}, {42, 46}, {40, 
              59}, {-25, -41}, {-38, -42}, {-18, -43}, {55, 47}, {-29, -45}, {
              54, 50}, {-39, -47}, {-44, -48}, {-17, -49}, {-31, -50}, {51, 
              61}, {-46, -52}, {53, 62}, {-36, -54}, {63, 57}, {-2, -56}, {60,
               58}, {-55, -58}, {-57, -59}, {-40, -60}, {-34, -61}, {-51, \
-62}, {-53, -63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{7, 6, 26, 27, 31, 32, 27, 7, 26, 6, 31, 17, 
              46, 27, 26, 47, 31, 32, 17, 16, 27, 21, 6, 7, 26, 46, 35, 5, 46,
               27, 26, 22, 41, 56, 64, 75, 16, 113, 47, 32, 42, 7, 26, 26, 6, 
              46, 27, 26, 56, 47, 26, 42, 2, 17, 106, 7, 27, 98, 42, 46, 16, 
              26, 27}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////fn1j6cT+Q7q8++wlE6/dfBtP8OppvQbR9duUX
sDxHEVj8fHbiNxD9XunADxBd/6vjJ1i931ow315Z/heYfzb9K4ie//rjI7C5
kxQ/g+j1FjUPwXyTe49B9P46ebD5+W0nIe7YwArW937aT4i9BR2/wfJJ7yDq
6pP/gPXxXQXT/20qwPR77VVf9wP99aBC7JI9kDb46nnSHuSOSdo3we66+wri
rl35H0C0v7frE7B5L/UOgs3pUD8M9k+EJESdwjuwve9z174BmXugM7EPZN7+
mZrfweb9XvoSrH6J2guwP7mE/oP9NVkKHA7z27P/gej4Qxlg2n6N42+QOQrn
2neCzFl/Q+UiiB/w4/5LkHsn5AmvB9EBpyWOg+Tny9mDw4u//yE4XPjrpJ+D
/R1cDLHnyV2GAyD3zzYD+/+8QAk4XuwTntWDzP1wSOALyBx528PvQHyG+t4f
IP753zKf9gMAfhxgZA==
             "], "LeafValues" -> 
            RawArray["Real32",{0.12257255613803864`, 0.13514761626720428`, 
              0.1464819312095642, 0.12600404024124146`, 0.12061943113803864`, 
              0.05496172606945038, -0.07648611813783646, 0.10742753744125366`,
               0.12962347269058228`, 0.09015553444623947, 
              0.13497000932693481`, 0.03713912516832352, 0.008740726858377457,
               0.12531912326812744`, 0.12892340123653412`, 0.0845988318324089,
               0.09808942675590515, 0.0993858128786087, 0.02858637273311615, 
              0.10559289902448654`, 0.017497271299362183`, 
              0.07547836750745773, 0.0173400416970253, 0.0907883569598198, 
              0.13548849523067474`, 0.09732066839933395, 0.12198245525360107`,
               0.1415887027978897, 0.12760399281978607`, 0.13659720122814178`,
               0.1281978189945221, 0.1176186352968216, 0.07603535801172256, 
              0.1309494823217392, 0.12884488701820374`, 0.12793225049972534`, 
              0.0860593244433403, 0.06759992986917496, 0.12865985929965973`, 
              0.0901501476764679, 0.10983098298311234`, 0.07030356675386429, 
              0.13351687788963318`, 0.10243028402328491`, 
              0.13058464229106903`, 0.13829436898231506`, 
              0.11199194937944412`, 0.1298740804195404, 0.10838198661804199`, 
              0.12685906887054443`, 0.10241804271936417`, 
              0.12695199251174927`, 0.1456107795238495, 0.1489768624305725, 
              0.1116238459944725, 0.11717195063829422`, 0.13750089704990387`, 
              0.11129134893417358`, 0.12966099381446838`, 
              0.12405505031347275`, 0.1403682678937912, 0.13460773229599, 
              0.13866382837295532`, 0.13595981895923615`}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {10, 3}, {9, 4}, {7, 5}, {11, 
              6}, {-6, -7}, {21, 12}, {24, 14}, {25, 17}, {23, 
              13}, {-5, -12}, {-8, -13}, {26, 16}, {30, 15}, {31, 19}, {39, 
              22}, {29, 18}, {-18, -19}, {33, 
              20}, {-20, -21}, {-4, -22}, {-17, -23}, {45, 27}, {42, 34}, {44,
               38}, {46, 32}, {28, 58}, {-24, -29}, {-10, -30}, {57, 40}, {43,
               37}, {-27, -33}, {-16, -34}, {35, 49}, {55, 
              36}, {-36, -37}, {-32, -38}, {-26, -39}, {-14, -40}, {50, 
              41}, {-41, -42}, {52, 47}, {-15, -44}, {-3, -45}, {53, 
              51}, {-11, -47}, {59, 48}, {-48, -49}, {54, 
              63}, {-31, -51}, {-46, -52}, {61, 
              56}, {-2, -54}, {-35, -55}, {-25, -56}, {-53, -57}, {62, 
              60}, {-28, -59}, {-43, -60}, {-58, -61}, {-1, -62}, {-9, -63}, \
{-50, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 
            0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{37, 36, 16, 17, 21, 22, 17, 36, 37, 16, 37, 
              21, 22, 21, 11, 17, 16, 22, 21, 1, 31, 36, 37, 17, 37, 16, 69, 
              37, 16, 17, 16, 21, 21, 31, 26, 22, 11, 17, 28, 37, 17, 22, 22, 
              36, 33, 27, 16, 68, 37, 21, 106, 68, 16, 17, 2, 46, 37, 26, 2, 
              32, 17, 42, 58}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////Xuwi93Q+k/0ekgun+xXafQHR8S/hrEK3Pcu0z
mN58ASy+n8fwO4iu73z/DUS/n3gcTPuv1fy5H2iuwonvn+2B/PM55r9A4vaG
TWD9/+du+Qo25/t3MH2/fu4XEM0vYPkYTG/kAIvbK/tA5P/qgeXPPygA21sf
feE32J5rs8H0/wblPyD7NjxW/gSyj9+r9g/YfV93/gKJL1DL+wcSt98+Cey+
/oJp98D2bM68jeye+0a1H8Duuq93HOxvefnrYD6nK9j989dcB7sjP+AZ2FyH
o0JrQObKb5P5DzZH7eBPEL0+/udDMC1sAzbP//y6v+DwyJd+BlJ/v9YB4l/j
qn9ge29/WQ2SFzDYxOIAUi/+/iWI/0Eq6qo9iE5ZtBukr155Bdj8/mm8YPvu
my8Eh6f8fa+PYP+KZjMcAKmbLfIAbP6CFrD7/QNPvAPLW9wD65NXef4BHF6+
tf/sAY2TYh0=
             "], "LeafValues" -> 
            RawArray["Real32",{0.1277519166469574, 0.13241028785705566`, 
              0.14509408175945282`, 0.12548041343688965`, 
              0.12082868814468384`, 0.04979705810546875, -0.08201336115598679,
               0.09175258129835129, 0.08773541450500488, 0.1287844330072403, 
              0.0807230994105339, 0.12147171050310135`, 
              0.028622467070817947`, -0.0018642700742930174`, 
              0.10666067153215408`, -0.002449590712785721, 0.1303105652332306,
               0.12480419874191284`, 
              0.10138588398694992`, -0.0025186745915561914`, 
              0.09354161471128464, 0.013233784586191177`, 
              0.12412647902965546`, 0.13528119027614594`, 0.07582841068506241,
               0.10761093348264694`, 0.08783223479986191, 0.06806393712759018,
               0.10221286118030548`, 0.12030588835477829`, 
              0.12753890454769135`, 0.11493571102619171`, 
              0.056908052414655685`, 0.06621633470058441, 
              0.13592290878295898`, 0.13914832472801208`, 0.07731672376394272,
               0.06567057222127914, 0.10479363054037094`, 
              0.12327320873737335`, 0.10857019573450089`, 
              0.11609891057014465`, 0.08833149820566177, 0.11699477583169937`,
               0.11662797629833221`, 0.1314592957496643, 0.07452721148729324, 
              0.12549681961536407`, 0.1385641098022461, 0.12224214524030685`, 
              0.10049506276845932`, 0.12306598573923111`, 
              0.12673021852970123`, 0.10676388442516327`, 
              0.13034150004386902`, 0.14063289761543274`, 
              0.14330880343914032`, 0.1316242665052414, 0.12796899676322937`, 
              0.11413075774908066`, 0.13499832153320312`, 
              0.12395897507667542`, 0.1406969428062439, 
              0.11939530819654465`}], "Children" -> 
            RawArray["Integer16",{{9, 2}, {8, 3}, {10, 4}, {7, 5}, {12, 
              6}, {-6, -7}, {24, 13}, {22, 11}, {23, 16}, {26, 20}, {14, 
              28}, {-5, -13}, {-8, -14}, {35, 15}, {-15, -16}, {38, 17}, {29, 
              18}, {36, 19}, {-19, -20}, {34, 21}, {-21, -22}, {44, 25}, {40, 
              30}, {-4, -25}, {27, 45}, {47, 39}, {-23, -28}, {37, 49}, {53, 
              33}, {41, 31}, {50, 
              32}, {-32, -33}, {-30, -34}, {-11, -35}, {-9, -36}, {-18, -37}, \
{-12, -38}, {54, 43}, {-27, -40}, {55, 51}, {61, 42}, {-42, -43}, {58, 46}, {
              56, 48}, {-26, -46}, {-44, -47}, {-3, -48}, {-45, -49}, {-29, \
-50}, {-31, -51}, {52, 60}, {-41, -53}, {-17, -54}, {62, 59}, {63, 
              57}, {-2, -57}, {-56, -58}, {-39, -59}, {-55, -60}, {-52, -61}, \
{-24, -62}, {-10, -63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{12, 11, 42, 41, 21, 22, 41, 42, 11, 12, 26, 
              21, 21, 22, 12, 11, 36, 17, 42, 31, 21, 41, 41, 11, 12, 47, 12, 
              31, 32, 12, 6, 26, 11, 11, 21, 42, 32, 33, 7, 11, 37, 47, 43, 
              12, 12, 91, 6, 11, 91, 120, 74, 2, 45, 77, 42, 36, 90, 98, 58, 
              22, 26, 11, 22}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////Pr93/cT+Q9vfoANPvlbXfgmj9GJd3IPr+y64v
IPp86QWwvL7Hru8gen1b5TcQPf+39A8QnZ/m+hNEyxsmPQOrzzH/BaL/z93y
FUTvd/X9th9kr5TWF3sg7RAW9M0eZF9JKFj+/Xblz2DzhB3/gNRdmMT+G6SO
4dK7nyBawN38J0i9vsKO3yB19RIXwPR6oSl/QXT8Pen3IH0LuiS+g9StT1p7
BSRu/z7rMEj8QIQJkwNI3S2OFWBxm7YvIPEPRsEMDkA6oXbxV5A9CzTvg9XJ
Own9B/s3RRzsr3jtGLB9/a76YHe+Z9sEtrd/UsknsLp9uWB/8J9QYjgA0r/g
83+Q+QL7P70H+9ezEOx+/7Blb8Du1Nr2Biwe+uYQiH6Q/eAjiJ7Ac/kJSF3/
rVkfQOoURH+A/c9gZfgZLK54CxJPa7Y+AIfvUY7HYP6xm+BwM7h75j9IXX3Y
8/fgcA9aB7YP7D9YPAIAv3w4uw==
             "], "LeafValues" -> 
            RawArray["Real32",{0.12130438536405563`, 0.14347892999649048`, 
              0.1337829828262329, 0.12931670248508453`, 0.11679583042860031`, 
              0.041357722133398056`, -0.07699599862098694, 
              0.06976606696844101, 0.08482743054628372, 0.08615158498287201, 
              0.015920232981443405`, 0.00022466124210041016`, 
              0.03304336965084076, 0.10265691578388214`, 
              0.0038288983050733805`, 0.12302558124065399`, 
              0.08999957144260406, 0.09439479559659958, 0.01438185665756464, 
              0.10297784209251404`, 0.12798450887203217`, 0.07691102474927902,
               0.08644478023052216, 0.08080212771892548, 0.10927335172891617`,
               0.11387210339307785`, 0.06766454875469208, 
              0.12695275247097015`, 0.0779266506433487, 0.13288845121860504`, 
              0.13545744121074677`, 0.14049032330513, 0.07657545804977417, 
              0.10415945947170258`, 0.10850706696510315`, 
              0.11132964491844177`, 0.11322346329689026`, 
              0.13468021154403687`, 0.1174396276473999, 0.08772090822458267, 
              0.11606444418430328`, 0.12278114259243011`, 0.07481644302606583,
               0.08657731115818024, 0.12635846436023712`, 
              0.13409797847270966`, 0.1297408789396286, 0.12801522016525269`, 
              0.1318008452653885, 0.11130993068218231`, 0.12455703318119049`, 
              0.12418990582227707`, 0.13080376386642456`, 
              0.11741477996110916`, 0.12409450858831406`, 
              0.14218993484973907`, 0.11322604864835739`, 0.132237508893013, 
              0.11363516747951508`, 0.10282132029533386`, 
              0.13209934532642365`, 0.13239167630672455`, 0.05333980545401573,
               0.13559959828853607`}], "Children" -> 
            RawArray["Integer16",{{10, 2}, {9, 3}, {8, 4}, {7, 5}, {12, 
              6}, {-6, -7}, {23, 11}, {19, 13}, {24, 15}, {25, 
              16}, {-8, -12}, {-5, -13}, {29, 14}, {-14, -15}, {17, 30}, {20, 
              33}, {31, 18}, {-18, -19}, {36, 26}, {21, 37}, {22, 
              35}, {-11, -23}, {-4, -24}, {40, 27}, {44, 34}, {-20, -27}, {28,
               49}, {-25, -29}, {-9, -30}, {32, 58}, {-10, -32}, {-16, -33}, {
              41, 53}, {38, 50}, {-22, -36}, {-3, -37}, {62, 43}, {57, 
              39}, {-39, -40}, {46, 45}, {47, 42}, {-42, -43}, {-38, -44}, {
              52, 48}, {-41, -46}, {-2, -47}, {-17, -48}, {56, 
              59}, {-28, -50}, {51, 63}, {-35, -52}, {61, 55}, {54, 
              60}, {-34, -55}, {-53, -56}, {-45, -57}, {-26, -58}, {-31, \
-59}, {-49, -60}, {-54, -61}, {-1, -62}, {-21, -63}, {-51, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{47, 47, 7, 7, 32, 11, 47, 47, 7, 46, 21, 6, 
              42, 7, 32, 46, 6, 1, 6, 6, 47, 31, 46, 46, 6, 1, 6, 6, 46, 22, 
              12, 13, 26, 22, 46, 7, 6, 21, 6, 46, 47, 17, 6, 96, 46, 27, 46, 
              97, 6, 7, 33, 26, 18, 18, 22, 47, 27, 21, 52, 46, 21, 22, 2}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////zz3j4ej+Q38Ak89EeyM/f1vsZxF/AfPQDiH9/
zsov+4H0/DXXwTS/qtoPkHyBvfIve5C+r6q/QfSHQwJfQLTDT/mfIHpBrekP
kP74n0cg+l5/+QWi9e3Pgen6PfzfQLR/neUPEL1e7sh3EP1eJPw7yPwL599/
Aek/P+nGHzB/Oc93EP+99qqvID7DVbP/IL5+ytqfIH3nXVf8gJsHlH/w8fk/
sHtW7f8KUrdeaBtYnf2tCRD3JHv+Btvrvfg52D2FC8D67dc4gsX7L/v+A9H3
cy//BpmXcJOXxQFIH7iy9Dc4nBg2gf3xP0XsP9i8OunnIHUG99u+guzdcM//
Kdh+CSkWB6D8fs1bzyDmif8FqRNQ+vQSZM7+eM6/4HB5nspwAKT/e9AdcLjL
fXoEFm/R/QgOl9NeYH596Jk/YHOKsxkOgPx79NgnED8/6d0XsP0ZTN/skex5
8N7xIIj/3079M0jd/rcMX/YDAKFQOv4=
             "], "LeafValues" -> 
            RawArray["Real32",{0.12662886083126068`, 0.13826708495616913`, 
              0.13806398212909698`, 0.11528206616640091`, 0.1038845032453537, 
              0.06243445351719856, -0.06351632624864578, 0.08631139993667603, 
              0.13831211626529694`, 0.12842412292957306`, 0.1030789464712143, 
              0.13278044760227203`, 
              0.05477871745824814, -0.0046014911495149136`, 
              0.029136590659618378`, 0.039293304085731506`, 
              0.1330927610397339, 0.09938066452741623, 0.01675865426659584, 
              0.023272745311260223`, 0.07749055325984955, 
              0.10482220351696014`, 0.08558620512485504, 0.13328763842582703`,
               0.11686068773269653`, 0.11985031515359879`, 0.0737643837928772,
               0.08766813576221466, 0.0992676168680191, 0.12377247959375381`, 
              0.11435265839099884`, 0.056192852556705475`, 
              0.10221867263317108`, 0.0692511647939682, 0.07244635373353958, 
              0.11343258619308472`, 0.09684517979621887, 0.08569824695587158, 
              0.1051211729645729, 0.11021127551794052`, 0.10429126024246216`, 
              0.12328747659921646`, 0.08134492486715317, 0.12230142951011658`,
               0.12485744804143906`, 0.1280016452074051, 0.09248486161231995, 
              0.11356348544359207`, 0.12032316625118256`, 
              0.11405017226934433`, 0.125543013215065, 0.1219487264752388, 
              0.10822155326604843`, 0.12712375819683075`, 
              0.10322748124599457`, 0.11295956373214722`, 
              0.13101673126220703`, 0.13817931711673737`, 
              0.11316768825054169`, 0.11823708564043045`, 
              0.12850439548492432`, 0.1269741654396057, 0.12830981612205505`, 
              0.13270416855812073`}], "Children" -> 
            RawArray["Integer16",{{7, 2}, {3, 8}, {14, 4}, {5, 9}, {15, 
              6}, {-6, -7}, {21, 10}, {16, 23}, {19, 27}, {11, 24}, {12, 
              34}, {13, 28}, {-8, -14}, {36, 20}, {-4, -16}, {35, 17}, {37, 
              18}, {-18, -19}, {-5, -20}, {22, 39}, {41, 29}, {-15, -23}, {40,
               25}, {30, 45}, {49, 26}, {-26, -27}, {-10, -28}, {-13, -29}, {
              32, 48}, {61, 31}, {-31, -32}, {53, 33}, {-33, -34}, {55, 38}, {
              47, 42}, {50, 43}, {-17, -38}, {-35, -39}, {-21, -40}, {60, 
              44}, {56, 51}, {-36, -43}, {-37, -44}, {-41, -45}, {46, 
              58}, {-25, -47}, {-3, -48}, {54, 62}, {-24, -50}, {-2, -51}, {
              52, 63}, {-42, -53}, {-22, -54}, {-30, -55}, {-12, -56}, {57, 
              59}, {-1, -58}, {-46, -59}, {-57, -60}, {-9, -61}, {-11, -62}, \
{-49, -63}, {-52, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{12, 12, 26, 27, 6, 7, 12, 27, 12, 32, 31, 6,
               36, 37, 26, 26, 11, 26, 27, 12, 27, 2, 11, 32, 27, 31, 41, 31, 
              22, 7, 22, 21, 36, 46, 26, 36, 26, 11, 42, 27, 12, 16, 17, 46, 
              27, 47, 11, 32, 31, 74, 35, 83, 31, 42, 61, 11, 12, 11, 26, 2, 
              92, 66, 57}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////nJyS/3g/kC+z/9N4eyLe3afuyH0j7x1m8A9H1
MX1g/v5wDzA9f9fpbyD6fcLBHyB9DTsafoD12c54BRKX59V9BKLj/bf9AuuP
2PgVRN8vyADT6zcs/QXSd+Gt1GeQvvd1E3+AxM+3a4PNt79n/gFE92cZ/QGp
+/A/4gtIXXya1Uew/b+lwer1D878CbbnzdM/YH2Xp4P5+h67voPt/ZwAdqf8
8danYPmcG8/A+lecvQWi+cX6ToL99fHxJxCdv175M9g82Z1/wfL3toLdf/8b
B9jceokLv8HhopR+H+z+aan/QO7ilxD+DxL/vybpCdh+tiWXwP58P/8pOHxs
S76C1PlvrweL//deCzb3fGs12B57r3Vgun/Bp/cg9QwSG2/aA+mAMs4j4HAt
MQDbu35r2wqQ/AJR5ksg8f63vGB9+x0yGQ6AzLcWBLtjf60mmL5vvvAzWP0T
kQ8g9fU7S6+A+BuOvPlqDwB9t15w
             "], "LeafValues" -> 
            RawArray["Real32",{0.12361200153827667`, 0.14460420608520508`, 
              0.14218144118785858`, 0.12462404370307922`, 
              0.11575581878423691`, 0.0593147873878479, -0.06606726348400116, 
              0.12786521017551422`, 0.0030957909766584635`, 
              0.13434450328350067`, 0.12659019231796265`, 
              0.12359993159770966`, 0.036229055374860764`, 
              0.08923211693763733, -0.01373538188636303, 0.10276395827531815`,
               0.07392319291830063, 0.12327984720468521`, 0.0840153843164444, 
              0.01147505734115839, 0.12310513854026794`, 0.08148003369569778, 
              0.025017276406288147`, 0.13476189970970154`, 
              0.11718981713056564`, 0.08045587688684464, 0.11156797409057617`,
               0.0681590810418129, 0.11783824861049652`, 0.08553275465965271, 
              0.035438377410173416`, 0.11755160242319107`, 
              0.09991122037172318, 0.0555974543094635, 0.04641968011856079, 
              0.09937494248151779, 0.0739249587059021, 0.07824491709470749, 
              0.12139642238616943`, 0.07657644152641296, 0.11509198695421219`,
               0.10410302132368088`, 0.08585391193628311, 
              0.12398122251033783`, 0.08335234224796295, 0.12466040998697281`,
               0.09685315191745758, 0.09860318899154663, 0.11181294918060303`,
               0.11140037328004837`, 0.08459749072790146, 
              0.10990654677152634`, 0.12368800491094589`, 
              0.10345612466335297`, 0.09013239294290543, 0.11780482530593872`,
               0.12244094908237457`, 0.1279398798942566, 0.12407134473323822`,
               0.13285955786705017`, 0.13464407622814178`, 0.1171431764960289,
               0.1291951686143875, 0.1160072535276413}], "Children" -> 
            RawArray["Integer16",{{7, 2}, {3, 9}, {15, 4}, {8, 5}, {12, 
              6}, {-6, -7}, {20, 10}, {25, 16}, {17, 23}, {24, 11}, {28, 
              13}, {-5, -13}, {36, 14}, {-14, -15}, {35, 21}, {-9, -17}, {38, 
              18}, {37, 19}, {-19, -20}, {41, 31}, {22, 40}, {-16, -23}, {47, 
              26}, {48, 29}, {-4, -26}, {49, 27}, {-27, -28}, {53, 33}, {39, 
              30}, {-30, -31}, {43, 32}, {42, 34}, {-29, -34}, {-33, -35}, {
              59, 45}, {-12, -37}, {-18, -38}, {58, 
              50}, {-25, -40}, {-22, -41}, {57, 51}, {-32, -43}, {46, 
              44}, {-44, -45}, {-36, -46}, {-21, -47}, {56, 55}, {63, 
              54}, {-24, -50}, {-39, -51}, {52, 
              62}, {-42, -53}, {-11, -54}, {-49, -55}, {-48, -56}, {-10, \
-57}, {60, 
              61}, {-3, -59}, {-2, -60}, {-1, -61}, {-58, -62}, {-52, -63}, \
{-8, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
             "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{37, 37, 42, 41, 1, 2, 1, 37, 41, 37, 42, 36,
               1, 36, 16, 22, 31, 1, 46, 73, 2, 36, 37, 31, 1, 42, 41, 36, 1, 
              26, 22, 46, 59, 87, 14, 1, 47, 37, 32, 17, 37, 36, 47, 31, 14, 
              42, 11, 36, 55, 105, 71, 76, 22, 2, 42, 1, 86, 6, 71, 101, 2, 
              32, 26}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////bSx//uB/IV1gS/tEeyJ8vZ/95P5Bef/gOmK73
rv8E5q9uB9Pvu+b+BNH3Wy+CaftCyV8g/QJT0n6B9P/PLPsF1hex8StYn9yR
7yD5D5f0foDk5WO3/ACJ81/I/woSN3jL+MceSAcIXwTrz1+v/BkkPuFR8zkQ
X79t93OweZ3vv4Ho/z8e/QHz580Cm6PfIQO2z7/N/x9Y3PAnWP49u/1vsDuZ
0/7sB3r1wNKpqyxA9m+sBIuvb6n8BPb3xYwrIPsTFt37AKIZxCZfQnbPeuXS
l8j681d5gd0x/40/2N77c3/9B9sbfQFsrv6+XLC/879Ggt0hXxJ+EKI+g+EA
yF/rRN6AzPU/v+4vyP6ATVFgexXeHf8CogV8Zr0Hh9P3uX1gfUc0weHM75r4
ZT9S/Jx3XfEDpP9Bq/5ncLidVoKIf296DQ6/xHXXQOL16ifA+u6zvALLz2/P
/rcfAP1HSEQ=
             "], "LeafValues" -> 
            RawArray["Real32",{0.09838900715112686, 0.133011594414711, 
              0.13630647957324982`, 0.12998752295970917`, 
              0.11198192089796066`, 0.05359857156872749, -0.06028163805603981,
               0.027969231829047203`, 0.10922545939683914`, 
              0.028637653216719627`, 0.1228390708565712, 0.09449803829193115, 
              0.13258765637874603`, 0.10477838665246964`, 
              0.10047505050897598`, 0.018574245274066925`, 
              0.017467299476265907`, 0.11448436975479126`, 
              0.08500596135854721, 0.07506465166807175, 0.09021705389022827, 
              0.02033444121479988, 0.1292165070772171, 0.07289356738328934, 
              0.12367694079875946`, 0.07435919344425201, 0.1253327876329422, 
              0.09495166689157486, 0.11332394927740097`, 0.08430592715740204, 
              0.13244254887104034`, 0.062417808920145035`, 0.0865681990981102,
               0.09267299622297287, 0.12806759774684906`, 
              0.10515477508306503`, 0.10782694071531296`, 0.07425373792648315,
               0.13185429573059082`, 0.08170666545629501, 
              0.11749132722616196`, 0.10508749634027481`, 
              0.10839924961328506`, 0.07738392800092697, 0.10875311493873596`,
               0.11532512307167053`, 0.11942442506551743`, 
              0.12245921045541763`, 0.11620207875967026`, 
              0.12609650194644928`, 0.12769156694412231`, 
              0.11618910729885101`, 0.12527327239513397`, 0.1149413213133812, 
              0.12195660173892975`, 0.13339900970458984`, 
              0.10742653906345367`, 0.12623994052410126`, 
              0.13465657830238342`, 0.12989293038845062`, 
              0.11274300515651703`, 0.12642602622509003`, 0.1304713785648346, 
              0.12188338488340378`}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {3, 10}, {11, 4}, {9, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {23, 14}, {27, 20}, {12, 22}, {26, 
              19}, {28, 13}, {29, 15}, {16, 34}, {-14, -16}, {30, 17}, {18, 
              39}, {-17, -19}, {38, 21}, {-10, -21}, {-20, -22}, {42, 24}, {
              41, 33}, {44, 25}, {-25, -26}, {46, 32}, {-4, -28}, {48, 
              37}, {-13, -30}, {31, 53}, {-9, -32}, {-27, -33}, {35, 52}, {40,
               51}, {36, 
              50}, {-24, -37}, {-29, -38}, {-12, -39}, {-18, -40}, {59, 43}, {
              54, 45}, {58, 49}, {-41, -44}, {-23, -45}, {47, 
              61}, {-2, -47}, {-42, -48}, {-3, -49}, {-43, -50}, {-36, -51}, {
              56, 62}, {57, 60}, {-31, -54}, {63, 
              55}, {-55, -56}, {-35, -57}, {-34, -58}, {-11, -59}, {-15, \
-60}, {-53, -61}, {-46, -62}, {-52, -63}, {-1, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{17, 16, 26, 27, 105, 46, 16, 27, 26, 17, 26,
               27, 105, 6, 7, 16, 21, 22, 21, 31, 2, 27, 16, 26, 17, 26, 27, 
              21, 17, 109, 2, 36, 27, 16, 37, 32, 16, 16, 22, 22, 103, 26, 1, 
              26, 17, 23, 2, 17, 7, 22, 27, 47, 42, 66, 27, 22, 27, 74, 27, 
              33, 22, 11, 12}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////nvxP5tB9I6zMavgXR6+c1gfnzb899A6L7mWd/
BtH55i5fweosHX6A6UIbMH3/G8dPsD4XAzDtf5X3BYiu775/D0T/fyP1B0Sf
n7AGor9k7Zf9QPsDMg58twfJz90CFuef6AgWN1h18w9I3D678gtI/D3nXLB8
fXnfX7A9T279BptrUwE2N5/D/R/YHVdWfgeb8/w22L1gc4HmKcgofQSZt//U
YrD6+MzZV8HmpRx8CJJfcMzmuz2Se+Yv6n0Bdt/8Oy9A/PzFx/+C+A4rAv+D
+PWFC8D+nn9EE+zfeFdvsP3xsjvB6jakTv5kD3MfkH/AQu0XiB9/3v0gOByc
5x0H0fst7v0Hu39bL9i9+pyuv8C00ymwufcPCHwE0fIqzz+A9WX/fAn2f/H+
dxD3u4LtlV//4hrIng97F/0A2dNf0PEbxH9QeBrsDpi683nTwfEbX134dT8A
jcFi1w==
             "], "LeafValues" -> 
            RawArray["Real32",{0.11509909480810165`, 0.12083625793457031`, 
              0.1334264874458313, 0.1234586238861084, 0.09660759568214417, 
              0.059637650847435, -0.06696338951587677, 0.12832878530025482`, 
              0.08721241354942322, 0.0738477036356926, 0.06829216331243515, 
              0.10365711152553558`, 0.08631677180528641, 
              0.017097901552915573`, -0.006937951315194368, 
              0.006125557702034712, 0.13251659274101257`, 0.09264538437128067,
               0.01739497482776642, 0.13394327461719513`, 0.09450932592153549,
               0.016443312168121338`, 0.07645168900489807, 0.1247788667678833,
               0.0806862935423851, 0.11589008569717407`, 0.11561399698257446`,
               0.059663787484169006`, 0.060923751443624496`, 
              0.09526565670967102, 0.06817637383937836, 0.1257108747959137, 
              0.12822023034095764`, 0.12051311880350113`, 
              0.11925413459539413`, 0.07559569925069809, 0.11107777804136276`,
               0.1074046790599823, 0.1061328798532486, 0.12907177209854126`, 
              0.06373780965805054, 0.08177881687879562, 0.11371245980262756`, 
              0.10602754354476929`, 0.10323861241340637`, 
              0.11379949003458023`, 0.1259252279996872, 0.09446315467357635, 
              0.12200229614973068`, 0.13590934872627258`, 
              0.12020503729581833`, 0.09790100157260895, 0.12390568852424622`,
               0.1361037790775299, 0.12680058181285858`, 0.12082407623529434`,
               0.11333434283733368`, 0.10743538290262222`, 
              0.09590431302785873, 0.10448481887578964`, 0.10803034156560898`,
               0.11107195913791656`, 0.12540693581104279`, 
              0.12324344366788864`}], "Children" -> 
            RawArray["Integer16",{{10, 2}, {7, 3}, {9, 4}, {8, 5}, {13, 
              6}, {-6, -7}, {23, 11}, {22, 15}, {24, 17}, {25, 16}, {26, 
              12}, {27, 14}, {-5, -14}, {-13, -15}, {-9, -16}, {19, 38}, {32, 
              18}, {-18, -19}, {20, 39}, {31, 21}, {-21, -22}, {-4, -23}, {37,
               29}, {42, 33}, {48, 34}, {44, 28}, {-12, -28}, {-27, -29}, {30,
               45}, {-24, -31}, {-11, -32}, {-10, -33}, {-25, -34}, {35, 
              55}, {47, 36}, {-36, -37}, {49, 46}, {40, 50}, {56, 41}, {61, 
              43}, {-40, -42}, {-3, -43}, {-41, -44}, {-8, -45}, {-30, -46}, \
{-38, -47}, {-26, -48}, {52, 54}, {-2, -50}, {63, 51}, {-51, -52}, {62, 
              53}, {-53, -54}, {57, 60}, {59, 
              58}, {-20, -57}, {-49, -58}, {-56, -59}, {-35, -60}, {-55, \
-61}, {-17, -62}, {-1, -63}, {-39, -64}}], "NominalSplits" -> {}, "RootIndex" -> 
            1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{31, 32, 36, 37, 6, 11, 32, 37, 31, 31, 36, 
              47, 46, 6, 6, 32, 53, 65, 37, 1, 11, 12, 32, 31, 36, 31, 6, 47, 
              31, 99, 38, 2, 88, 8, 18, 44, 65, 46, 32, 81, 28, 107, 16, 31, 
              36, 94, 17, 41, 44, 88, 38, 65, 37, 63, 62, 86, 96, 67, 57, 117,
               12, 2, 2}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////nX8j6vB9Ir+8VfQOi5ys9A/Pnd+W9AtH2P72+
gmj5kuovIFo/RfwnWH3W/u9g+cvTf+4HmhcgbfDVHiTOZPQLJO6/7iZYn32V
Jljfe7PrYHPrf9j/BqkXsK38BlL/P2omWP3/rN+/wfSPR3/A+qzDwebPX3Md
rH9+7f6PIPp8a/VfML+AAUznv+b6C7b/L8NfkHnxdktvgsTv57aA7Qngzf9h
D6Q3zJ2yGEQrvNA7DlLH3/8QbB4/j9V/sHv5PMD2n9dmWgL278k/YL79TWOG
AyDxg4ffg/j79zz5DzJXIXjBZ5B5AQ9PvAHRBlr270Hm+qupfwPr0w3/B6b/
SoPNf//x9gOwe9+JfALT06PB9tufdr4ONneLIZh//6TxDrB7DuRdAstLHweL
x3+J+Aayt2ACwweQfQlbZG+BaAZHlSsge+c3Zt4Dqet/nPwYbH74oS8g9Qu6
JL6DwyXNCmLOu8AP+wGcxFNj
             "], "LeafValues" -> 
            RawArray["Real32",{0.11244215816259384`, 0.11964597553014755`, 
              0.13864904642105103`, 0.11636722832918167`, 
              0.11629172414541245`, 
              0.051430366933345795`, -0.06394701451063156, 
              0.11908119916915894`, 0.08184092491865158, 0.10756326466798782`,
               0.10315710306167603`, 0.07338183373212814, 0.0857720822095871, 
              0.0038321693427860737`, 0.0030630885157734156`, 
              0.0401751846075058, 0.11725391447544098`, 0.12383638322353363`, 
              0.10040660947561264`, 0.06829822063446045, 
              0.021555185317993164`, 0.09213278442621231, 
              0.029390405863523483`, 0.11521792411804199`, 
              0.11343622207641602`, 0.087883360683918, 0.08896151930093765, 
              0.13164611160755157`, 0.07561185210943222, 0.11464846134185791`,
               0.11747238785028458`, 0.10090842097997665`, 
              0.057933613657951355`, 0.1087719202041626, 0.07744351774454117, 
              0.1184922382235527, 0.07902544736862183, 0.08513693511486053, 
              0.06651699542999268, 0.1047036424279213, 0.10885293781757355`, 
              0.11008042097091675`, 0.1277967244386673, 0.07485012710094452, 
              0.11152366548776627`, 0.12266237288713455`, 0.1187734305858612, 
              0.12781086564064026`, 0.14399822056293488`, 0.1303962767124176, 
              0.10549939423799515`, 0.11705461144447327`, 
              0.13100793957710266`, 0.13097266852855682`, 
              0.12096996605396271`, 0.08935984969139099, 0.09656041860580444, 
              0.12003559619188309`, 0.126663938164711, 0.13939116895198822`, 
              0.0801096111536026, 0.09680996835231781, 0.12937918305397034`, 
              0.13597887754440308`}], "Children" -> 
            RawArray["Integer16",{{9, 2}, {7, 3}, {11, 4}, {8, 5}, {15, 
              6}, {-6, -7}, {23, 10}, {19, 14}, {24, 16}, {12, 26}, {25, 
              21}, {28, 13}, {-13, -14}, {-9, -15}, {-5, -16}, {17, 41}, {33, 
              18}, {37, 20}, {-4, -20}, {-19, -21}, {27, 22}, {-22, -23}, {39,
               29}, {44, 30}, {45, 35}, {32, 40}, {-12, -28}, {-8, -29}, {34, 
              56}, {31, 54}, {36, 58}, {-11, -33}, {49, 
              38}, {-24, -35}, {-26, -36}, {-25, -37}, {-18, -38}, {-34, \
-39}, {53, 46}, {-27, -41}, {42, 57}, {43, 50}, {-17, -44}, {47, 
              51}, {-3, -46}, {-40, -47}, {62, 
              48}, {-48, -49}, {-10, -50}, {-43, -51}, {52, 
              59}, {-45, -53}, {-2, -54}, {63, 55}, {-55, -56}, {-30, -57}, {
              60, 61}, {-32, -59}, {-52, -60}, {-42, -61}, {-58, -62}, {-1, \
-63}, {-31, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{47, 46, 21, 22, 16, 17, 22, 21, 46, 47, 12, 
              16, 22, 1, 21, 22, 12, 46, 21, 1, 2, 22, 21, 46, 47, 21, 22, 55,
               74, 88, 2, 46, 7, 22, 111, 109, 21, 22, 42, 36, 21, 22, 88, 47,
               21, 46, 110, 78, 92, 77, 27, 37, 56, 37, 33, 59, 47, 87, 22, 7,
               77, 30, 31}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////L36j8vB9I7z+q9QlE//c7+gFE82cLvwLR/m0R
X8F0ns0XEF1fuOAHiO730v8Jou0XqIHpfF/fX2C65x5Y/Xo3nV/7gfYIfNnz
xR7In19X8w0k/l49HWwuf2jjY7D+WxO+gNR96ND9ag+kDVbd/AOiFyz1+gai
D6RO/gHSr3+s+i/YnanFf0D0/VxxMJ9/kcc/EK1fJPUNZE6CgsI/kL4N+b8P
gfTlRxdNB4lPWJx0GszPNf0K4hv4SDM6gPw/O+oR2Nz5+t9B4gvYPu8H6Q9w
L7kJUs9/dhfYnvlHNMH+9PeNB4cD/99nb5DdUz9XAUzn7zv8HezPoi//we65
ycsCssd+u/x/cLhtfngV7P49qtvA8m1yT0D2PZC7+QFkX7172UdwuEgf/wiW
j5r2ByS+/5k5OF764z5uBIlfyHd8ChJ/b/sCHO7/xUPegcOdmw9sj7zQR0j4
FsVeB6lv8ElgBrnjvfvSN/sBsGtCVg==
             "], "LeafValues" -> 
            RawArray["Real32",{0.11389663815498352`, 0.12419948726892471`, 
              0.13409167528152466`, 0.12372850626707077`, 
              0.10426249355077744`, 
              0.052728474140167236`, -0.06325197964906693, 
              0.09072001278400421, 0.09443949162960052, 0.12487201392650604`, 
              0.016721535474061966`, 0.005848302505910397, 
              0.03069840371608734, 0.06696951389312744, 0.012265662662684917`,
               0.1102534830570221, 0.09377286583185196, 0.013961086049675941`,
               0.12877380847930908`, 0.12384424358606339`, 
              0.10760249942541122`, 0.08541961014270782, 0.08011875301599503, 
              0.0790969505906105, 0.0773414745926857, 0.10644938796758652`, 
              0.10749390721321106`, 0.10274212062358856`, 
              0.11911050230264664`, 0.1321282535791397, 0.11756319552659988`, 
              0.06499244272708893, 0.09277939796447754, 0.06314125657081604, 
              0.07357878237962723, 0.11134294420480728`, 0.11571283638477325`,
               0.11268375813961029`, 0.11079686880111694`, 0.0650848001241684,
               0.08013828098773956, 0.09678579866886139, 0.07912927120923996, 
              0.10726969689130783`, 0.10324292629957199`, 
              0.10076835006475449`, 0.1271020621061325, 0.10182193666696548`, 
              0.12212242186069489`, 0.11054579168558121`, 
              0.11180253326892853`, 0.12083633989095688`, 0.1338450312614441, 
              0.11209797859191895`, 0.1404041051864624, 0.0844886302947998, 
              0.1019456535577774, 0.08944497257471085, 0.127628892660141, 
              0.10517095029354095`, 0.12333454191684723`, 
              0.12039780616760254`, 0.07279971987009048, 
              0.12286200374364853`}], "Children" -> 
            RawArray["Integer16",{{10, 2}, {9, 3}, {8, 4}, {7, 5}, {12, 
              6}, {-6, -7}, {22, 11}, {23, 13}, {24, 15}, {25, 
              18}, {-8, -12}, {-5, -13}, {14, 27}, {-9, -15}, {26, 16}, {34, 
              17}, {-17, -18}, {19, 32}, {20, 42}, {21, 
              31}, {-11, -22}, {-4, -23}, {37, 28}, {46, 29}, {44, 35}, {41, 
              33}, {-14, -28}, {-24, -29}, {30, 43}, {-25, -31}, {-21, -32}, {
              38, 49}, {-27, -34}, {-16, -35}, {36, 56}, {40, 
              55}, {-3, -38}, {59, 39}, {-39, -40}, {-26, -41}, {-10, -42}, {
              62, 45}, {-30, -44}, {51, 47}, {-43, -46}, {54, 53}, {48, 
              58}, {-45, -49}, {50, 60}, {-33, -51}, {63, 
              52}, {-52, -53}, {-47, -54}, {-2, -55}, {-37, -56}, {57, 
              61}, {-36, -58}, {-48, -59}, {-19, -60}, {-50, -61}, {-57, \
-62}, {-20, -63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{7, 6, 31, 32, 9, 1, 32, 31, 7, 6, 7, 4, 12, 
              6, 26, 46, 2, 1, 26, 11, 27, 6, 32, 31, 7, 7, 11, 35, 5, 36, 46,
               22, 6, 21, 2, 79, 103, 114, 46, 1, 2, 31, 6, 7, 7, 2, 2, 1, 21,
               27, 26, 14, 22, 37, 69, 98, 36, 16, 98, 36, 82, 92, 11}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////LX+J/sx9I23+d8xZEz/+i/A5E82dqvATR+02j
voDo/ArBbyC6/oH8DxC9vlLyJ4h+r3QAzPevs/yxH2juhz3XP9kD+fGS3X9B
4vqGf76AxBU4D34Di388BjZHf1v1ZxB9/mMpmD+/ruYbSN0E02vfQer4zxwG
8xccswHz8+uT/4Dt/XIcTOd/jYTwf/T8BakTmBzA6AAyf771VxC/INL+uj2Q
NvjqeRKkv//fk6tg/zhNOwK2f2XlPpC6gEnvGUD6znPt3Qg2dzf7b5B4wvvq
iyD9Au/0joJohZ9td8Hm+UiD7ZEv64aES67pV3D46Yb/A9HxhzLANP+td/9B
5jRIrGEDqfePvA8Or/X18k/B7vhr+xxE929iPwBSd8HL5SzI/AWnn+wEh9OR
5EPgcM3YewxsvvTxj+DwX3oIbO95gRJwuNnfNoeEYzn3R7C/XbZ9AJmTYPPz
NYg+UP/tBYi+ULv7Oshc/8vFD/YDAAZjP0Y=
             "], "LeafValues" -> 
            RawArray["Real32",{0.11211782693862915`, 0.12039491534233093`, 
              0.1362815797328949, 0.11311356723308563`, 0.10013061761856079`, 
              0.05527869611978531, -0.06901305168867111, 0.08118963241577148, 
              0.07782981544733047, 0.10278154164552689`, 0.07248007506132126, 
              0.1072559505701065, 
              0.013422326184809208`, -0.004822582006454468, 
              0.14195547997951508`, 0.07551413774490356, 
              0.0015974793350324035`, 0.07595783472061157, 
              0.0029634262900799513`, 
              0.06826914846897125, -0.001197169884108007, 0.07003472000360489,
               0.06404765695333481, 0.06497161835432053, 0.07210215926170349, 
              0.06765338033437729, 0.08986900746822357, 0.055132269859313965`,
               0.12304163724184036`, 0.10543131828308105`, 0.1289917677640915,
               0.13028277456760406`, 0.12551018595695496`, 
              0.13061633706092834`, 0.1290762722492218, 0.04483252018690109, 
              0.09832709282636642, 0.1175108402967453, 0.11985275894403458`, 
              0.1066024973988533, 0.10960853844881058`, 0.058831360191106796`,
               0.1126289889216423, 0.10763882845640182`, 0.12010128796100616`,
               0.11160871386528015`, 0.10500247776508331`, 
              0.10867860168218613`, 0.08932466059923172, 0.10129254311323166`,
               0.11383567750453949`, 0.08859298378229141, 
              0.12166981399059296`, 0.10440796613693237`, 
              0.11829375475645065`, 0.10139157623052597`, 
              0.10701780766248703`, 0.13111744821071625`, 
              0.13241823017597198`, 0.10545509308576584`, 
              0.11781686544418335`, 0.10859061032533646`, 
              0.11977150291204453`, 0.12227283418178558`}], "Children" -> 
            RawArray["Integer16",{{9, 2}, {10, 3}, {8, 4}, {7, 5}, {12, 
              6}, {-6, -7}, {23, 13}, {24, 15}, {25, 14}, {22, 11}, {20, 
              26}, {-5, -13}, {-8, -14}, {17, 33}, {31, 16}, {-16, -17}, {34, 
              18}, {32, 19}, {-19, -20}, {30, 21}, {-21, -22}, {43, 
              28}, {-4, -24}, {42, 37}, {44, 36}, {27, 45}, {-12, -28}, {29, 
              56}, {-23, -30}, {-11, -31}, {-9, -32}, {-18, -33}, {40, 47}, {
              35, 46}, {-10, -36}, {38, 59}, {-25, -38}, {39, 
              55}, {-26, -40}, {49, 41}, {-41, -42}, {-3, -43}, {58, 52}, {54,
               50}, {-27, -46}, {-35, -47}, {53, 
              48}, {-48, -49}, {-15, -50}, {61, 
              51}, {-51, -52}, {-44, -53}, {-34, -54}, {63, 
              57}, {-39, -56}, {-29, -57}, {-55, -58}, {-2, -59}, {60, 
              62}, {-37, -61}, {-45, -62}, {-60, -63}, {-1, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{12, 11, 42, 41, 1, 2, 41, 11, 42, 41, 42, 
              21, 12, 1, 26, 21, 22, 41, 11, 11, 41, 17, 36, 7, 42, 27, 32, 
              12, 42, 75, 33, 7, 3, 41, 11, 50, 83, 41, 11, 42, 26, 2, 46, 12,
               17, 21, 4, 60, 32, 37, 12, 2, 67, 57, 40, 78, 59, 80, 56, 61, 
              48, 63, 106}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////HR5/+vB9IrzdQegOi/c9Lgen17r5gWr742RcQ
/Z5z7lewOO+KH2B1+wR/gmj7GTFgun633VMQne9Y9hhEx7O8+gai99/K+wWi
/0ee+w2i9Z/GgcX/z90CNm+/qy+YXx8d8Adsz4G8P/uB7nvwY+V3e5D55jxg
efn5i8D22i+eAXZP/OQ3YP38WTP/guXfPX0Aln+fdRjsDq7Af2Dzali/gcyb
EPxxsT2QVlBguQQyd/2h/9NB4gEL5Q6D+PPvz/4F4m/IVGJ0ANIOfqoHQeov
fF2xG0xrvPwNUtefGAM2d/6bDIYDIHq94Scwv/0p2N/vi+qvgt2z4PN/sPtE
2/6CzBXwN9sH0u+/IfM72P31cRB/xCtCwn+e4kcQ3Z9l9AcSXkfegvQVPFx6
CKSvPuPvExD/wpNFn8H8dNVNYH/eTDsGNv/FluVg8cbq1WB/ice9Abk7oEbx
L5g+ZgumF8i8+WoPAAmOSdE=
             "], "LeafValues" -> 
            RawArray["Real32",{0.11783146113157272`, 0.11071369051933289`, 
              0.12893326580524445`, 0.12161333858966827`, 
              0.12153131514787674`, 0.06007228419184685, -0.064600370824337, 
              0.09490256011486053, 0.11556528508663177`, 0.06534434854984283, 
              0.10255372524261475`, 0.08379509299993515, 
              0.0033260153140872717`, 0.10477500408887863`, 
              0.03095550276339054, -0.0037454883567988873`, 
              0.08710213005542755, 0.005766219459474087, 0.07386815547943115, 
              0.0687144473195076, 0.08287835121154785, 0.09240102022886276, 
              0.07241590321063995, 0.0930086150765419, 0.027968579903244972`, 
              0.0717124342918396, 0.04763681814074516, 0.12370069324970245`, 
              0.07541640847921371, 0.06323032826185226, 0.12551450729370117`, 
              0.1097295880317688, 0.1317393034696579, 0.10432187467813492`, 
              0.08733440935611725, 0.08034136146306992, 0.09998484700918198, 
              0.11574173718690872`, 0.10542328655719757`, 
              0.12033838033676147`, 0.10973884910345078`, 0.09561397135257721,
               0.05720394477248192, 0.1244717463850975, 0.10356415808200836`, 
              0.07363109290599823, 0.10715328902006149`, 0.10532102733850479`,
               0.13258834183216095`, 0.11681727319955826`, 0.1311243623495102,
               0.09844408184289932, 0.12358185648918152`, 
              0.10311038792133331`, 0.08682450652122498, 
              0.10592830926179886`, -0.03692452982068062, 0.1223292276263237, 
              0.12231869250535965`, 0.1186332106590271, 0.11586515605449677`, 
              0.10028272122144699`, 0.0927310511469841, 0.1088542491197586}], 
            "Children" -> 
            RawArray["Integer16",{{13, 2}, {8, 3}, {9, 4}, {7, 5}, {14, 
              6}, {-6, -7}, {18, 12}, {19, 10}, {25, 16}, {21, 11}, {29, 
              15}, {-8, -13}, {28, 20}, {-5, -15}, {-12, -16}, {27, 
              17}, {-17, -18}, {-4, -19}, {39, 30}, {22, 35}, {34, 26}, {43, 
              23}, {32, 24}, {-24, -25}, {40, 33}, {-22, -27}, {-10, -28}, {
              44, 36}, {-11, -30}, {31, 
              47}, {-20, -32}, {-23, -33}, {-26, -34}, {-9, -35}, {41, 54}, {
              37, 53}, {38, 51}, {-29, -39}, {48, 46}, {-3, -41}, {52, 
              42}, {-42, -43}, {45, 61}, {49, 
              57}, {-14, -46}, {-40, -47}, {-31, -48}, {-2, -49}, {63, 
              50}, {-50, -51}, {-38, -52}, {-21, -53}, {56, 59}, {60, 
              55}, {-55, -56}, {-37, -57}, {58, 
              62}, {-45, -59}, {-54, -60}, {-36, -61}, {-44, -62}, {-58, \
-63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{47, 46, 1, 2, 36, 37, 2, 46, 47, 1, 21, 22, 
              21, 46, 1, 21, 6, 16, 1, 32, 36, 1, 46, 2, 47, 21, 46, 6, 17, 
              22, 2, 20, 22, 2, 2, 1, 58, 4, 38, 3, 21, 1, 46, 47, 21, 9, 46, 
              27, 78, 2, 110, 2, 59, 97, 117, 46, 21, 21, 12, 27, 44, 35, 
              16}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////HT335aj+Qzk+3fgOi+RlnvwXR708avADR9REb
v4Jo+d9zv4D5l678ANOvV4BpfVfdnyD6vCuEf/5t2UuwOaGNj0H0/MiGb/uB
9gns6f5sD6Qv3Lr/0x4mDlI/YQ3Y/PsMP8H8+DaeJyDafvoDsPh7dvvfYHnm
tD9g9T+ug/nnC+f+BdH93ydCaC/9nyB7GK6a/QeZX/+n8S7YnA0TwOatF9oG
lg+YrfIL5A6DhR+O2sPEgbS/yEuw/fYvi36B6P8PBM+A6P259j9A+j6YrNgN
dn9e1G2QPvuL1v9B4garbv4B8c8n5/0D+zd6D9g974u+/AeHm40X2L31d8Iv
gdQ7SEixOIDM1bz1DGyP/W1wuK0/8PkPSL7g/a7pIHsWVF8/DqIT1q95Cnbn
8qvgcD3PaXAY7M7t8v/h4Qvy/yb2A2B+7f6PYPvcyz6C7av5DvavwsW9j8Du
Xnj52X4A05xaSA==
             "], "LeafValues" -> 
            RawArray["Real32",{0.11037079244852066`, 0.13341331481933594`, 
              0.13323533535003662`, 0.12062530219554901`, 
              0.11389650404453278`, 0.04602808505296707, -0.0693649873137474, 
              0.0867934450507164, 0.11941711604595184`, 0.05363468453288078, 
              0.06358318775892258, 0.1107422485947609, 
              0.08490540087223053, -0.0042386772111058235`, 
              0.0792999118566513, 0.12381505221128464`, 
              0.08394844830036163, -0.0015474362298846245`, \
-0.004323846660554409, 0.077222540974617, -0.0026820844504982233`, 
              0.03263530507683754, 0.06190691888332367, 0.12306258082389832`, 
              0.07191682606935501, 0.0641041100025177, 0.0979096069931984, 
              0.10217780619859695`, 0.12055112421512604`, 
              0.052315402776002884`, 0.05955995246767998, 0.09731985628604889,
               0.11231429874897003`, 0.1094457283616066, 0.11896674335002899`,
               0.04688015952706337, 0.10980892181396484`, 
              0.057993192225694656`, 0.11731017380952835`, 
              0.10892780870199203`, 0.0619196891784668, 0.09855470806360245, 
              0.10604161024093628`, 0.09862691909074783, 0.1107233390212059, 
              0.09108451753854752, 0.1196703240275383, 0.11729563027620316`, 
              0.07756789028644562, 0.0922747477889061, 0.09780919551849365, 
              0.12146980315446854`, 0.09381186217069626, 0.11413763463497162`,
               0.08838071674108505, 0.07449668645858765, 0.12231384962797165`,
               0.0990658700466156, 0.1149224117398262, 0.11732645332813263`, 
              0.12918108701705933`, 0.09097348153591156, 0.10026200860738754`,
               0.12001803517341614`}], "Children" -> 
            RawArray["Integer16",{{9, 2}, {8, 3}, {10, 4}, {7, 5}, {21, 
              6}, {-6, -7}, {24, 13}, {23, 11}, {25, 14}, {22, 16}, {26, 
              12}, {30, 18}, {-8, -14}, {15, 27}, {19, 34}, {28, 
              17}, {-17, -18}, {-13, -19}, {31, 20}, {-20, -21}, {-5, -22}, {
              42, 32}, {43, 36}, {-4, -25}, {44, 38}, {45, 29}, {33, 
              47}, {-11, -29}, {-27, -30}, {-12, -31}, {-10, -32}, {-23, \
-33}, {58, 35}, {50, 40}, {-34, -36}, {49, 37}, {-37, -38}, {39, 53}, {41, 
              55}, {-35, -41}, {-26, -42}, {-3, -43}, {56, 46}, {59, 
              51}, {-9, -46}, {-44, -47}, {48, 
              57}, {-28, -49}, {-24, -50}, {-16, -51}, {52, 61}, {-45, -53}, {
              54, 62}, {-39, -55}, {-40, -56}, {-2, -57}, {-48, -58}, {-15, \
-59}, {63, 60}, {-60, -61}, {-52, -62}, {-54, -63}, {-1, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{27, 26, 17, 16, 21, 22, 17, 16, 26, 27, 27, 
              36, 22, 37, 21, 22, 21, 26, 16, 16, 17, 31, 21, 26, 27, 27, 36, 
              27, 11, 108, 47, 49, 22, 4, 26, 44, 6, 39, 26, 12, 1, 17, 27, 
              17, 1, 17, 101, 21, 27, 120, 47, 7, 7, 47, 51, 27, 42, 72, 10, 
              26, 8, 93, 17}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////zP7/9eT+Q3h+07g2Izm++8wpEx5/e8xpE/5+7
5SuI1ufe8Q1Er3cx+AnmWzr8ANH3v3H83A80T+Dulc/2QL793Ve/QOLySZ7P
wPovL/oOot+L7noHoudHNoDN4b+QDzZX3sbrN0g/Q33vD5D+9U9ugfkXUr/8
AfHzOdz/ge1Tu/oFJD7BWPIdSPy/TcUfsLppqf9A/Pvqkv9B6uzfXX0EEt+g
OvUVSJx/mfF3EN/BW2MCiF+/IPsYSJ3/mfN/QHR9ius/kHyAz5SN9kA6Ya8K
owPIXQ275oPEG/TX/wKJHygLeALSP789G+wee/ush2D/8H5+AQ4/i3v/QeoL
nEuZHYD0h/DAS2B98rtug90h2vYXHB6Lra+Aw9lhFziczjMXMBwA2bveE2zv
fs974Pi4P7H0Izh8glXB7jwfkQTm749U/gSOnzdPweLy4ZYfQfYazHv5EWSP
POOnzyD+h8by+2D+tqvgcN9/49oDsL//1n3eDwBwCEXD
             "], "LeafValues" -> 
            RawArray["Real32",{0.10873183608055115`, 0.11550823599100113`, 
              0.1272643506526947, 0.11563598364591599`, 0.10955958068370819`, 
              0.06437332183122635, -0.06093408539891243, 0.12280883640050888`,
               0.056143179535865784`, 0.061568956822156906`, 
              0.11547038704156876`, 
              0.06587200611829758, -0.004692654125392437, 
              0.056424830108881, -0.00005758785118814558, 0.08444011211395264,
               0.0033609550446271896`, 0.03145535662770271, 
              0.08481592684984207, 0.06376054137945175, 0.12123629450798035`, 
              0.06901869177818298, 0.0199910718947649, 0.07445504516363144, 
              0.11580947041511536`, 0.08841439336538315, 0.07339620590209961, 
              0.11357516795396805`, 0.09305763244628906, 0.05753188952803612, 
              0.10230711102485657`, 0.12518426775932312`, 
              0.061952851712703705`, 0.0822150856256485, 0.10407904535531998`,
               0.11744624376296997`, 0.10731546580791473`, 
              0.10081451386213303`, 0.12041030824184418`, 
              0.10621479898691177`, 0.10871157050132751`, 0.05781418830156326,
               0.1079278215765953, 0.10686329752206802`, 0.11550088971853256`,
               0.1287543773651123, 0.0898238942027092, 0.12275049835443497`, 
              0.04131922498345375, 0.10609237849712372`, 0.05897793546319008, 
              0.13050304353237152`, 0.10591455549001694`, 0.08843181282281876,
               0.11876721680164337`, 0.13179466128349304`, 
              0.11983942985534668`, 0.12300512939691544`, 
              0.12259040027856827`, 0.10146456211805344`, 
              0.10678260028362274`, 0.12230707705020905`, 
              0.12430475652217865`, 0.12037251144647598`}], "Children" -> 
            RawArray["Integer16",{{11, 2}, {9, 3}, {7, 4}, {8, 5}, {17, 
              6}, {-6, -7}, {21, 13}, {19, 12}, {24, 10}, {15, 25}, {26, 
              18}, {-9, -13}, {33, 14}, {-14, -15}, {27, 
              16}, {-16, -17}, {-5, -18}, {20, 35}, {-4, -20}, {22, 44}, {42, 
              30}, {31, 23}, {-23, -24}, {39, 28}, {29, 43}, {49, 
              34}, {-10, -28}, {32, 
              38}, {-11, -30}, {-22, -31}, {-12, -32}, {-25, -33}, {-8, -34}, \
{36, 56}, {40, 52}, {37, 50}, {-27, -38}, {-29, -39}, {51, 47}, {45, 
              41}, {-41, -42}, {-3, -43}, {-26, -44}, {46, 
              48}, {-19, -46}, {-21, -47}, {-40, -48}, {-45, -49}, {54, 
              60}, {-37, -51}, {-2, -52}, {53, 58}, {-36, -54}, {63, 
              55}, {-55, -56}, {57, 59}, {-35, -58}, {-53, -59}, {-57, -60}, {
              62, 61}, {-61, -62}, {-50, -63}, {-1, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{7, 6, 31, 32, 46, 47, 6, 7, 31, 32, 7, 32, 
              32, 32, 46, 31, 12, 11, 47, 36, 37, 6, 7, 31, 7, 32, 36, 31, 32,
               11, 31, 35, 84, 31, 36, 6, 27, 60, 90, 48, 31, 6, 57, 36, 47, 
              31, 32, 7, 56, 17, 37, 29, 98, 105, 37, 27, 7, 42, 16, 17, 32, 
              18, 11}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////fP9Lzej+Qlr9z6hWIzo87/AlMt538CKbNXb6C
6Pg/7GCa32/tDxA9f4vnTxBtryz/CywuZ/5rP9DcD3uuf7IH0gqfZb/bA8Xf
v/N5ApK/P2flF7B5DJvA6uWLpz4Hm1tdCDF/vjWY9l93E0zbN0o+AtvzpfIe
WF998h8Q3X/Z9x9YvIDhL8g+A4OZ/8H26FiDxdenHG8Amx+95juIPv8h7zeI
rn+x5TGYnjfrB0jfgwqxSyB3LvjKdAmkf/3mH2B79b+e/Q6SvyDx/SNIPD+m
6i6In8DVPh3En7/5Pdi888YSYP863LT6CRKPP5TxD+z/mRafQHz9owuPg81b
pr4C7B/dcLD7YO7Uf57KcAAUD1emPgKpt2dpA4fH/Ky8p2Dasn4B2B6Bkm9g
fU8qb4HNkT7+Eew+L5ezYPdwCf0Hq5ez/wxWX84Njrf6o/OOgcV95r8BqWew
tALHh//l4gf7AdCTVxY=
             "], "LeafValues" -> 
            RawArray["Real32",{0.10747969150543213`, 0.11655731499195099`, 
              0.1328165978193283, 0.11438912898302078`, 0.10286624729633331`, 
              0.05240187421441078, -0.05772699788212776, 0.05879674851894379, 
              0.12117526680231094`, 0.09964722394943237, 0.07979194074869156, 
              0.10339830070734024`, 
              0.10745889693498611`, -0.007802043110132217, 0.1154647171497345,
               0.027185650542378426`, 0.060349199920892715`, 
              0.07853524386882782, 0.0014084879076108336`, 
              0.012595326639711857`, 0.06395430117845535, 
              0.004773091059178114, 0.05967956408858299, 0.09712682664394379, 
              0.07462657243013382, 0.0778808519244194, 0.07471033930778503, 
              0.11522335559129715`, 0.046255916357040405`, 
              0.10830482840538025`, 0.1018955260515213, 0.049976423382759094`,
               0.12148284167051315`, 0.10180347412824631`, 
              0.05945334956049919, 0.05363066494464874, 0.10758254677057266`, 
              0.04162602871656418, 0.1157371774315834, 0.09899947792291641, 
              0.062132492661476135`, 0.08576563745737076, 
              0.10245007276535034`, 0.10154501348733902`, 0.08342669159173965,
               0.07350330799818039, 0.11180964857339859`, 
              0.11141501367092133`, 0.12012624740600586`, 
              0.10279862582683563`, 0.08521736413240433, 0.08524541556835175, 
              0.11785154789686203`, 0.10088428109884262`, 0.1200789138674736, 
              0.11572520434856415`, 0.11010406166315079`, 0.09184253215789795,
               0.13054706156253815`, 0.12912385165691376`, 0.1096591129899025,
               0.11379630118608475`, 0.10845384746789932`, 
              0.11973000317811966`}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {7, 3}, {9, 4}, {10, 5}, {15, 
              6}, {-6, -7}, {22, 11}, {23, 14}, {24, 20}, {26, 19}, {12, 
              25}, {13, 34}, {-8, -14}, {29, 16}, {-5, -16}, {30, 17}, {27, 
              18}, {-18, -19}, {-11, -20}, {35, 21}, {-21, -22}, {42, 32}, {
              48, 36}, {46, 38}, {28, 
              43}, {-4, -27}, {-17, -28}, {-12, -29}, {47, 37}, {44, 
              31}, {-31, -32}, {33, 53}, {-23, -34}, {-13, -35}, {-10, -36}, {
              39, 49}, {45, 41}, {-25, -39}, {54, 
              40}, {-40, -41}, {-38, -42}, {59, 
              52}, {-26, -44}, {-15, -45}, {-30, -46}, {-3, -47}, {62, 51}, {
              55, 56}, {50, 
              61}, {-37, -51}, {-48, -52}, {-43, -53}, {-33, -54}, {-24, \
-55}, {63, 58}, {60, 
              57}, {-57, -58}, {-56, -59}, {-2, -60}, {-49, -61}, {-50, -62}, \
{-9, -63}, {-1, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{12, 11, 41, 42, 31, 21, 11, 12, 42, 21, 22, 
              41, 42, 41, 31, 26, 27, 2, 16, 42, 23, 109, 42, 12, 21, 11, 27, 
              1, 47, 41, 41, 26, 41, 2, 2, 114, 93, 11, 33, 30, 28, 3, 42, 41,
               41, 12, 11, 20, 71, 12, 21, 87, 41, 102, 115, 1, 32, 11, 92, 
              42, 51, 119, 96}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////vv/rq1X4gfd5nyWsQfV+89wuInt8uABbXV7sK
5v+fu+UriM536f8JptNcwfR7s+s/QHR/EvszEL3eTeMBWP/92b/A6iS+PAXR
9oGmD0F0vOPB32Bzn8Z9A9ubnQim+7vjwPrlj+0H22M/IwZs/v7lS//sB7pX
QELvqD3I3PQXf8DmcgX+A9MOu8D29L/l/Qt2pykT2Bz/2viXYHtM7j0G27v2
Btg/+3+5gc3X/6vxFkTXG/4Emye/XGsJmH5y9QHIPoWaB5vtgXRB2795INoh
LOgbyH7+xd1ge/QjQ8D26xtUHgHbu1CK4QBIPmsmWN6+UBLsrvdS0WB1+x0y
wfL+1oL/QeZ/0Jz2DmTeeg3G9WBz5GeCw6VfixusX/47w2OQuoCNwjdA6vJl
DoD5Gzp3fQbx319T/wz216yrH8Dhbah7DyS/4InIB5C8fFnGBRD/gIzaXZD7
N2i8fgUS//+z7Mt+AE3EWeA=
             "], "LeafValues" -> 
            RawArray["Real32",{0.10363791882991791`, 0.11615345627069473`, 
              0.130158469080925, 0.11008033901453018`, 0.11297260969877243`, 
              0.05089521035552025, -0.05974460765719414, 0.12216191738843918`,
               0.11959705501794815`, 0.04434386268258095, 0.0952698290348053, 
              0.07008199393749237, 0.12314467132091522`, 0.10875459760427475`,
               0.06067781522870064, 0.027703281491994858`, 
              0.07505423575639725, -0.010002737864851952`, \
-0.006430907640606165, -0.007492227014154196, 0.1112840324640274, 
              0.021269449964165688`, 0.08030027151107788, 
              0.061941102147102356`, 0.09741847217082977, 0.09228775650262833,
               0.06682953983545303, 0.09261997789144516, 
              0.030123846605420113`, 0.049050357192754745`, 
              0.05043908581137657, 0.09259766340255737, 0.04256243631243706, 
              0.07701210677623749, 0.12420187890529633`, 0.06244651973247528, 
              0.1176200807094574, 0.10126766562461853`, 0.10745733976364136`, 
              0.11162005364894867`, 0.06851726025342941, 0.11317713558673859`,
               0.08371627330780029, 0.09719883650541306, 0.08267166465520859, 
              0.11117938160896301`, 0.11811146140098572`, 0.1209518164396286, 
              0.07344436645507812, 0.10059945285320282`, 0.07194444537162781, 
              0.10351314395666122`, 0.09948450326919556, 0.1080862358212471, 
              0.12130281329154968`, 0.08524472266435623, 0.13363049924373627`,
               0.11126099526882172`, 0.1294955313205719, 0.11552651226520538`,
               0.09685900062322617, 0.10622802376747131`, 
              0.10730776190757751`, 0.116481252014637}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {7, 3}, {12, 4}, {9, 5}, {15, 
              6}, {-6, -7}, {26, 10}, {24, 13}, {23, 18}, {25, 11}, {30, 
              19}, {33, 21}, {20, 14}, {31, 16}, {-5, -16}, {34, 
              17}, {-17, -18}, {-10, -19}, {-12, -20}, {43, 27}, {42, 
              22}, {-22, -23}, {-4, -24}, {46, 38}, {51, 29}, {47, 36}, {35, 
              28}, {-28, -29}, {-26, -30}, {-11, -31}, {44, 32}, {-32, -33}, {
              45, 41}, {-15, -35}, {-21, -36}, {37, 52}, {-27, -38}, {39, 
              49}, {54, 40}, {-40, -41}, {-34, -42}, {-13, -43}, {61, 
              48}, {-14, -45}, {-3, -46}, {57, 59}, {56, 53}, {-44, -49}, {55,
               50}, {-50, -51}, {-8, -52}, {-37, -53}, {-48, -54}, {-25, \
-55}, {-39, -56}, {-2, -57}, {63, 58}, {-58, -59}, {62, 
              60}, {-60, -61}, {-9, -62}, {-47, -63}, {-1, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{36, 37, 1, 2, 16, 31, 37, 2, 36, 1, 36, 22, 
              41, 16, 16, 2, 94, 59, 84, 37, 105, 24, 2, 26, 36, 1, 36, 17, 
              59, 106, 75, 2, 37, 83, 64, 14, 117, 84, 17, 1, 14, 104, 106, 
              14, 36, 36, 37, 83, 55, 24, 84, 27, 41, 71, 112, 48, 37, 36, 2, 
              56, 91, 2, 32}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////bL57xZT+QPr+G7wWIfn9N/TOI9t885xWYbov4
CqLtsyvB6u4fc/4JFo+8/3M/0JwJM298tgfpW7T8F0ic/95WCL2RA6yvvqTo
G1i9mjqY3n/O+jdI34ebwZ9A+v4vCwTzL/w6d9MeJD6h9xpY/MejPyD1/99I
gWn9NT1/wfyAoH8g9Qk5h+eD1AekHvwDUh8fzAOWz3/NBabXuxiA3adwMeMK
2FypqKsgdfuDD5wE2/cqn8EB5J+5v/6Dza3/tBrsvxN9K8D2zTrDcADEv/L3
B1j9O5F3YHc1KIPdcz457x84XP4U/QfJP3ib9QFifjHYPPmS8INg+b/SYH59
5/tvYH/3O90CqTtfwgoJD/u69yDxBuvJH0Hi/uuuvwWrdy/7CPbP9GgwXf/6
/3MQPf9MxEuwuZ6zH4D1i2aD3VkffeE3mG9o8BZk3oH6mFcgf0+w/XgYRAuc
28QD8m8+84wf+wFpjVQA
             "], "LeafValues" -> 
            RawArray["Real32",{0.11737856268882751`, 0.12314444035291672`, 
              0.1305074691772461, 0.12121617794036865`, 0.10320105403661728`, 
              0.038142699748277664`, -0.054692015051841736`, 
              0.05145911127328873, 0.08335620909929276, 0.10312046110630035`, 
              0.08312196284532547, 0.12165012955665588`, 0.08199455589056015, 
              0.00041419826447963715`, 0.002219835761934519, 
              0.027681780979037285`, 0.061270471662282944`, 
              0.013868683017790318`, 0.07747089862823486, 
              0.028199149295687675`, 0.05667471885681152, 0.09564781934022903,
               0.02521536871790886, 0.07741627097129822, 0.10904796421527863`,
               0.11439430713653564`, 0.07483061403036118, 0.1192559078335762, 
              0.048937369138002396`, 0.09199612587690353, 0.09593170136213303,
               0.1137206181883812, 0.0939687192440033, 0.09308583289384842, 
              0.12071876972913742`, 0.12373644858598709`, 0.07804830372333527,
               0.07075468450784683, 0.10404698550701141`, 0.0831032544374466, 
              0.10839791595935822`, 0.07082947343587875, 0.12159017473459244`,
               0.09293292462825775, 0.11224845796823502`, 
              0.10361187160015106`, 0.06551815569400787, 0.10630293190479279`,
               0.09963435679674149, 0.027426302433013916`, 
              0.10938426107168198`, 0.10175620764493942`, 
              0.11928065866231918`, 0.13818632066249847`, 
              0.11698757857084274`, 0.11272567510604858`, 0.1283751130104065, 
              0.11288052052259445`, 0.09254201501607895, 0.1220354363322258, 
              0.0706876888871193, 0.08760233968496323, 0.05366254970431328, 
              0.1331447958946228}], "Children" -> 
            RawArray["Integer16",{{11, 2}, {7, 3}, {10, 4}, {8, 5}, {15, 
              6}, {-6, -7}, {20, 9}, {23, 14}, {12, 25}, {26, 16}, {27, 18}, {
              24, 13}, {-13, -14}, {-9, -15}, {-5, -16}, {17, 
              32}, {-11, -18}, {19, 42}, {21, 37}, {33, 29}, {36, 
              22}, {-22, -23}, {-4, -24}, {-8, -25}, {28, 39}, {40, 31}, {45, 
              34}, {-10, -29}, {30, 50}, {-21, -31}, {-27, -32}, {-17, -33}, {
              57, 44}, {35, 55}, {41, 48}, {-12, -37}, {54, 
              38}, {-38, -39}, {-26, -40}, {-3, -41}, {-28, -42}, {43, 49}, {
              63, 46}, {-34, -45}, {52, 47}, {-44, -47}, {56, 
              59}, {-36, -49}, {61, 51}, {-30, -51}, {-50, -52}, {62, 
              53}, {-53, -54}, {-20, -55}, {60, 
              58}, {-46, -57}, {-2, -58}, {-56, -59}, {-48, -60}, {-35, -61}, \
{-43, -62}, {-1, -63}, {-19, -64}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{22, 22, 7, 26, 27, 6, 22, 26, 27, 7, 21, 22,
               21, 46, 11, 27, 16, 6, 105, 26, 79, 22, 7, 26, 22, 21, 11, 21, 
              21, 27, 57, 27, 36, 36, 34, 19, 17, 46, 54, 10, 29, 8, 7, 27, 
              22, 60, 61, 99, 27, 12, 17, 42, 36, 31, 7, 1, 67, 6, 84, 27, 21,
               1, 76}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////vF1r8ZT+QP0HvwCd7IN9/jeTX/UD6PqcVmNYP
bQLT+aeVPoPFPz75BeYrmv8G07PN/oBo/tdfwOLv99r+AJn34Qn7X3sgvUCg
/QvIXP4yDbD8/29yv0DyCupT3oLkL6R++QOmJb5/BKlb/3/JX7C9T+O+gc19
tQusbz03338QPZ9LCEzHy+78CzIn4JY5kwOQ36/FDdaX79L/EyReoPyXwQHk
L2PJdyBz+wtCV4DEBbZ1PgG7p23eU5B6f/4NT0C0/ImCo2D9SbvA7tug2TwB
5K4NSyuvg9TfzxWHuEs98R9I/oG04gOQvMLputsg2uHkle8gdfpP7jIcQAoX
/6lZYP55gYUbQfoW+BiCw5n/3Wmw/f0FHeBwlOfM/wgOX7HYx+BwVNZ+Cw6n
SMtXIPMDpA2+gs2PPgFWF39m3XOwO9WnPAKJ1x/58QEcPoyHXoPjc3rwZ7D4
6oJ/IPF67/pPYDok6dd+ADZENVM=
             "], "LeafValues" -> 
            RawArray["Real32",{0.09660689532756805, 0.12855355441570282`, 
              0.0944797620177269, 0.12441603094339371`, 0.10556899756193161`, 
              0.040862515568733215`, -0.04150627553462982, 
              0.08555496484041214, 0.02638966217637062, 0.03934653103351593, 
              0.08412672579288483, 0.11678135395050049`, 0.10705465078353882`,
               0.06284275650978088, 0.09886272251605988, 
              0.029048768803477287`, 0.07038095593452454, 
              0.11649595201015472`, 0.06105988100171089, 0.09096432477235794, 
              0.01806941069662571, 0.023602668195962906`, 0.09041152894496918,
               0.09445706009864807, 0.09184928238391876, 0.11763724684715271`,
               0.07446414232254028, 0.06293898820877075, 0.08653265237808228, 
              0.10705221444368362`, 0.06997769325971603, 0.09053987264633179, 
              0.09830296039581299, 0.045661259442567825`, 
              0.11668825894594193`, 0.07072009146213531, 0.1112944558262825, 
              0.11833535134792328`, 0.08467338979244232, 0.08896077424287796, 
              0.11772647500038147`, 0.10626760870218277`, 
              0.10840602964162827`, 0.11206603795289993`, 0.02155742049217224,
               0.07430931180715561, 0.11940385401248932`, 0.07772579789161682,
               0.12128481268882751`, 0.08601755648851395, 
              0.11758460849523544`, 0.051171060651540756`, 0.1348968744277954,
               0.11705301702022552`, 0.11121699959039688`, 
              0.12396283447742462`, 0.11819836497306824`, 
              0.10893409699201584`, 0.13221824169158936`, 0.1005125343799591, 
              0.09121428430080414, 0.12025522440671921`, 0.11848507821559906`,
               0.11547105014324188`}], "Children" -> 
            RawArray["Integer16",{{7, 2}, {3, 11}, {10, 4}, {8, 5}, {9, 
              6}, {-6, -7}, {22, 13}, {24, 16}, {-5, -10}, {23, 18}, {26, 
              12}, {14, 25}, {17, 28}, {38, 15}, {-15, -16}, {-9, -17}, {19, 
              37}, {21, 31}, {46, 20}, {-20, -21}, {-11, -22}, {45, 29}, {43, 
              30}, {-4, -25}, {27, 39}, {58, 40}, {-13, -28}, {32, 53}, {35, 
              42}, {-24, -31}, {-19, -32}, {34, 33}, {-33, -34}, {-14, -35}, {
              48, 36}, {-36, -37}, {49, 44}, {-12, -39}, {-26, -40}, {41, 
              59}, {-27, -42}, {47, 51}, {-2, -44}, {-38, -45}, {50, 
              55}, {-8, -47}, {-30, -48}, {-23, -49}, {-18, -50}, {63, 
              52}, {-43, -52}, {-51, -53}, {54, 60}, {-29, -55}, {56, 
              57}, {-46, -57}, {-56, -58}, {62, 
              61}, {-41, -60}, {-54, -61}, {-59, -62}, {-3, -63}, {-1, -64}}],
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
             "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{17, 17, 42, 41, 11, 12, 41, 17, 11, 17, 42, 
              16, 21, 36, 19, 41, 16, 73, 16, 21, 11, 46, 41, 17, 17, 16, 26, 
              42, 47, 41, 21, 16, 114, 16, 16, 28, 22, 53, 30, 66, 31, 16, 
              102, 12, 46, 46, 22, 17, 69, 85, 91, 61, 29, 98, 77, 42, 56, 12,
               2, 6, 6, 7, 41}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////zn03/uh/In/DvyAd7ID/+55Ev+0Hih1+A6f3B
s7+CaH3DP2D+/Puzf4HUH7BQ+wVSb7/K4TdI3P9tC5ieL+z4B8xXU/8Gos8f
3fITbN69rWB9H0wmnbUH0gpHpn0G0RsUG3+AzPHnzvsLtsfS4QdIncGqm39A
8hPWibwByefvvPUSJF9v+BNsfv803v9g83ydGB1A5nvVgsX1TSV+ge3T+/wf
7P5VCtdA6hYYMTOB1O1PLf4D4guoO30Embv/CusnsHvv/zwDou8/k/u7Hxg0
B5ZOXWUBsnfRqqNgf/jWgMPh/QGv7yD9CkfzXoH0n78c/wFsn3HVPzDNMe8R
iP7fzvAUbK5NwQMQvT5J4hrY/XMVwO48v/UBwwGgOQW+V76D/JlwWfQZyDz9
osJ74PDVzPkIEr/g0QWmBb5D6R0iX0Dq1p9/xHAAFN4sDOBwiY8+/RkcLrdm
gd0z/2kcmL6/VfsTyLwNPEINIH310QF/9gMAQ4o8iw==
             "], "LeafValues" -> 
            RawArray["Real32",{0.0676540955901146, 0.1269243359565735, 
              0.13016127049922943`, 0.1178269311785698, 0.10297726094722748`, 
              0.05514496937394142, -0.040084123611450195`, 
              0.025485776364803314`, 0.11048702150583267`, 
              0.034194715321063995`, 0.06824154406785965, 
              0.10049084573984146`, 0.11633750051259995`, 
              0.10313025116920471`, 0.015767816454172134`, 
              0.08166137337684631, 0.064961738884449, 0.06207175925374031, 
              0.027522170916199684`, 0.1034342423081398, 0.11696682125329971`,
               0.11062564700841904`, 0.01894894428551197, 0.08085774630308151,
               0.08529128134250641, 0.08880814909934998, 0.11069460958242416`,
               0.05360490083694458, 0.08360188454389572, 0.05405528098344803, 
              0.10205049812793732`, 0.0722440555691719, 0.10182010382413864`, 
              0.06189362704753876, 0.06398013234138489, 0.10046930611133575`, 
              0.10722889006137848`, 0.11545640230178833`, 
              0.10226607322692871`, 0.0636155754327774, 0.10342670977115631`, 
              0.04253380000591278, 0.10175221413373947`, 0.11386790126562119`,
               0.10226733237504959`, 0.057291917502880096`, 
              0.11981038749217987`, 0.08646436035633087, 0.12238983809947968`,
               0.06850302219390869, 0.08673868328332901, 0.11036404222249985`,
               0.0703297033905983, -0.08094928413629532, 0.10544560849666595`,
               0.10838276147842407`, 0.11493037641048431`, 
              0.08952368050813675, 0.11732610315084457`, 0.1331184357404709, 
              0.12700922787189484`, 0.11829070746898651`, 
              0.12397033721208572`, 0.11398695409297943`}], "Children" -> 
            RawArray["Integer16",{{10, 2}, {3, 8}, {11, 4}, {7, 5}, {9, 
              6}, {-6, -7}, {23, 15}, {12, 19}, {-5, -10}, {24, 17}, {28, 
              16}, {26, 13}, {31, 14}, {-14, -15}, {-8, -16}, {18, 30}, {20, 
              40}, {-12, -19}, {35, 25}, {21, 37}, {22, 
              29}, {-11, -23}, {-4, -24}, {48, 32}, {27, 34}, {42, 
              33}, {-20, -28}, {56, 36}, {-22, -30}, {-17, -31}, {-13, -32}, {
              38, 50}, {-27, -34}, {-26, -35}, {60, 49}, {-29, -37}, {47, 
              41}, {43, 39}, {-39, -40}, {44, 
              51}, {-38, -42}, {-3, -43}, {-25, -44}, {46, 
              45}, {-45, -46}, {-18, -47}, {-21, -48}, {58, 53}, {-36, -50}, {
              52, 61}, {62, 57}, {-33, -53}, {55, 
              54}, {-54, -55}, {-49, -56}, {-2, -57}, {-52, -58}, {63, 
              59}, {-59, -60}, {-9, -61}, {-51, -62}, {-41, -63}, {-1, -64}}],
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
             "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{36, 36, 1, 1, 16, 16, 1, 36, 2, 36, 2, 31, 
              32, 16, 6, 1, 11, 37, 2, 32, 47, 36, 1, 31, 31, 37, 1, 7, 12, 2,
               63, 2, 37, 11, 37, 11, 74, 64, 106, 1, 2, 36, 26, 31, 111, 32, 
              37, 37, 37, 2, 32, 86, 79, 48, 27, 41, 32, 112, 87, 66, 2, 2, 
              20}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L/QJCZ+m4/kH/haO9He5C44NKP9kDhfpVrL0HiAnNW
gfn3N0/4tB9Iv++a+xNEx3dt/AmSf1Ab8B6k70D0pt8gdf4iL7+B5O13XXoI
Vj9x7SWw+alf/oDk9VPWgvUZhD0Aq///Te4XSN35fbt+gPW9LALz+eXMwfR7
2xdgOv81118QfZ857Q+IXl8pCTan4XTgf5A561uTwermb897BnZfhOA9sPqb
h+8im/t+YibYnPOFc8F0/gW/f2DztG89AdH/C39BzDHUvQcyf8Pt4Osg89/H
Rm8Cie8PLv4PFp/jCLa3fu+b/2Dz/0qDxR+cz34KEs//Ggl2J7/YgS8gWv/g
THC4yW+TAatzsHD+Awq3D/1Ot+DmgPQv6/kBEk+obv4AEo/nN/sINt9z9gMQ
Xe9eBubnT4/+CFIfMP/OC5B6ByaHCSBa4c+U1SC6oPojON74+x+C1Qmc28Tj
APKHZ9/X/QDbWEVx
             "], "LeafValues" -> 
            RawArray["Real32",{0.11454813927412033`, 0.11463937908411026`, 
              0.12148138135671616`, 0.12720800936222076`, 
              0.025232786312699318`, 
              0.01790197193622589, -0.051458559930324554`, \
-0.00326313404366374, 0.09920378774404526, 0.05371266230940819, 
              0.11150329560041428`, 0.09469578415155411, 0.0798226147890091, 
              0.0631999596953392, 0.07480821013450623, 0.09499386698007584, 
              0.10336241871118546`, -0.003485431894659996, 0.1206376850605011,
               0.08763190358877182, 0.018197013065218925`, 
              0.016164705157279968`, 0.11489737778902054`, 
              0.06830660998821259, 0.11073726415634155`, 0.11035937070846558`,
               0.10542277991771698`, 0.037038709968328476`, 
              0.08626335859298706, 0.03726605325937271, 0.10572792589664459`, 
              0.06379376351833344, 0.07187186181545258, 0.06424500793218613, 
              0.12623772025108337`, 0.06463053077459335, 0.06569404900074005, 
              0.09412851184606552, 0.11543786525726318`, 0.0621565543115139, 
              0.0992283970117569, 0.08024178445339203, 0.09785644710063934, 
              0.0973070040345192, 0.07673665881156921, 0.08714212477207184, 
              0.0858955904841423, 0.09485963732004166, 0.005618283525109291, 
              0.11182037740945816`, 0.10911206156015396`, 
              0.10144110769033432`, 0.112733855843544, 0.08345185965299606, 
              0.12498190253973007`, 0.11636479198932648`, 0.1345146894454956, 
              0.12119068950414658`, 0.12370631843805313`, 
              0.10633927583694458`, 0.10323257744312286`, 0.1227102056145668, 
              0.04367382824420929, 0.12344542145729065`}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {3, 10}, {4, 11}, {7, 5}, {6, 
              14}, {-5, -7}, {23, 9}, {22, 12}, {-8, -10}, {18, 26}, {32, 
              16}, {24, 13}, {25, 15}, {-6, -15}, {34, 17}, {21, 
              35}, {-16, -18}, {33, 19}, {41, 20}, {-20, -21}, {-12, -22}, {
              42, 37}, {-2, -24}, {44, 28}, {27, 46}, {47, 30}, {-13, -28}, {
              36, 29}, {-29, -30}, {48, 31}, {-31, -32}, {50, 40}, {60, 
              43}, {-14, -35}, {-17, -36}, {-25, -37}, {38, 53}, {39, 
              45}, {-23, -40}, {-33, -41}, {-19, -42}, {55, 49}, {-34, -44}, {
              57, 51}, {-39, -46}, {-26, -47}, {61, 52}, {-27, -49}, {54, 
              58}, {-4, -51}, {-45, -52}, {-48, -53}, {63, 59}, {-43, -55}, {
              62, 56}, {-56, -57}, {-9, -58}, {-50, -59}, {-54, -60}, {-3, \
-61}, {-11, -62}, {-1, -63}, {-38, -64}}], "NominalSplits" -> {}, "RootIndex" -> 
            1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{47, 46, 21, 22, 11, 12, 22, 21, 46, 11, 21, 
              14, 22, 47, 23, 111, 26, 46, 115, 22, 4, 21, 46, 22, 28, 47, 
              116, 74, 70, 46, 24, 13, 84, 32, 26, 26, 117, 103, 46, 73, 54, 
              63, 32, 96, 47, 21, 52, 56, 92, 4, 41, 27, 2, 47, 7, 7, 81, 2, 
              86, 62, 45, 31}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwA+L///+vz/P4th9I62+r/gyi64s834Do90fnvQDR51kU
wOLnex+/BtH3Pz75BaLzHXZBaIZNYPr/N7lf+4HmJkyT/mQP4vvW/gPxG5z5
P4L4+gv1/oD4AZV/r9kDaYFogRMg8fVKvT9A4gznd4PV+Tu9+g0ybz03338Q
7e964g+I5j+76y/Y/lxxMD3/uMNzsHy0G1j9/xSx/2Dzn4kdAJmTH100HcTf
0P74EMg+BddPjA4gc9VjwO4SyF/9DqRuf/U5hgMg/32weQcyZ/+s3WBaX+H4
PZC6CdY9N0D6P4R83g5Sb79dHuyueEVLMP3eIOspWL0wAzi83vfYfADpc8jT
fQZSf784G2x+/eoCsL0GGUzfQOYlRE37A/bv5jKwPn6Z25/A/hPv/QL219Fj
YP7+twxg/vuiL2D/HejNvgzSx88fDo63/ilNYP31u1O+g+Nj3cnP4HDYuvgf
SN37rQvB/sk3s/q+HwAmQEJU
             "], "LeafValues" -> 
            RawArray["Real32",{0.1127343699336052, 0.11332456767559052`, 
              0.12701959908008575`, 0.11972924321889877`, 0.0894915834069252, 
              0.01180302444845438, -0.05656099319458008, 
              0.0043476358987390995`, 0.1199021115899086, 0.08588914573192596,
               0.012335819192230701`, 0.05526416748762131, 
              0.006945355795323849, 0.05492696538567543, 0.088503897190094, 
              0.09329383075237274, 0.11277560144662857`, 0.01757572591304779, 
              0.057524267584085464`, 0.07134117931127548, 0.08152183145284653,
               0.062303341925144196`, 0.07818122953176498, 
              0.06654404103755951, 0.02244654856622219, 0.0605635903775692, 
              0.09692899882793427, 0.08705435693264008, 0.10396389663219452`, 
              0.11565417796373367`, -0.09912727773189545, 0.06491763889789581,
               0.09662511944770813, 0.08538255840539932, 0.10571763664484024`,
               0.05448387190699577, 
              0.11634546518325806`, -0.12389104813337326`, 
              0.061615437269210815`, 0.11459829658269882`, 
              0.04540669918060303, 0.0975433811545372, 0.10742496699094772`, 
              0.07423243671655655, 0.11113594472408295`, 0.119672030210495, 
              0.11078748106956482`, 0.10703717917203903`, 0.096061572432518, 
              0.10808968544006348`, 0.11641965806484222`, 0.1316186636686325, 
              0.11315440386533737`, 0.1280306577682495, 0.08231714367866516, 
              0.10483346879482269`, 0.09526178985834122, 0.11530610173940659`,
               0.10403569787740707`, 0.09912043064832687, 0.0809522420167923, 
              0.11834824085235596`, 0.12427820265293121`}], "Children" -> 
            RawArray["Integer16",{{14, 2}, {9, 3}, {8, 4}, {7, 5}, {10, 
              6}, {-6, -7}, {20, 11}, {22, 12}, {23, 
              15}, {-5, -11}, {-8, -12}, {33, 13}, {-13, -14}, {26, 18}, {16, 
              31}, {17, 25}, {-10, -18}, {19, 30}, {40, 21}, {-4, -21}, {42, 
              24}, {46, 29}, {39, 27}, {-22, -25}, {-17, -26}, {45, 37}, {28, 
              57}, {-24, -29}, {-23, -30}, {34, 44}, {62, 
              32}, {-32, -33}, {-9, -34}, {36, 35}, {-35, -36}, {-19, -37}, {
              38, 58}, {43, 49}, {51, 48}, {50, 
              41}, {-41, -42}, {-20, -43}, {-27, -44}, {-31, 56}, {52, 
              47}, {-3, -47}, {55, 
              54}, {-40, -49}, {-39, -50}, {-15, -51}, {-2, -52}, {60, 
              53}, {-53, -54}, {-48, -55}, {-46, -56}, {-45, -57}, {-28, \
-58}, {59, 61}, {-38, -60}, {-1, -61}, {-59, -62}, {-16, -63}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{2, 2, 7, 26, 27, 6, 27, 2, 7, 26, 2, 1, 41, 
              36, 6, 9, 46, 1, 1, 70, 25, 2, 26, 17, 41, 46, 7, 6, 1, 41, 52, 
              80, 10, 26, 1, 27, 114, 16, 80, 25, 1, 41, 10, 97, 7, 2, 22, 32,
               12, 60, 27, 7, 57, 46, 60, 51, 100, 16, 17, 93, 6, 22, 32}], 
            "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////7i7z8th/IX/Bt2wd7EH+N5Nf9QDre4x+Y7tfa
9xxE82uKfQPR5ydG/QKpv5D0/zdI/X6+q39A4vmK5r/B8vaLwPT7rrk/QfT8
+7N/gfXf2wrRJ/H9oz2QVlAKWg2iDXykGR1A+lxX/ADJJ/hN+Awyt//O1L8g
ffqvN4HNr9/75j/YXbI7weL5Ac/A5toXSoLpfIZNEHtuvfsPMidg0nsGkLn/
I8+B3VMfHfAHJO4gnvwBZK8DK+c1sDu+p78C2bfeouYh2Pxgnr/g8FDbvREk
bv+08xWILzBn1Udw+KzfyHAAZL5e1zMQ/3xy3j+w+YY/IeFQthcsP+G/33mQ
vP6TuwwHQPK7U76D5Pe7+oLD8T7Lq89g/v20T2Dzsy49B7knIX7qe7C7jgQy
gcNla+1JkLzBtx+/QOIXTvTcBdECkvc5HUB0i/8VkD33N0/4BA6PmiXfQeoZ
7nn9A7t30TZw/O2frw+2P97x+fv9AEZnM4I=
             "], "LeafValues" -> 
            RawArray["Real32",{0.10215821862220764`, 0.12675495445728302`, 
              0.12780609726905823`, 0.12168354541063309`, 0.08951975405216217,
               0.053723566234111786`, -0.04185415059328079, 
              0.007131453137844801, 0.12274837493896484`, 
              0.026033010333776474`, 0.029983071610331535`, 
              0.07525819540023804, 0.1138673722743988, 0.0979718342423439, 
              0.020832806825637817`, 0.06117139011621475, 0.07694614678621292,
               0.08538402616977692, 0.11301516741514206`, 
              0.0004352645482867956, 0.11508195102214813`, 
              0.10017876327037811`, 0.09642373025417328, 0.08670856803655624, 
              0.027610044926404953`, 0.10435394942760468`, 0.0629379153251648,
               0.10142551362514496`, 0.09253694862127304, 0.07057448476552963,
               0.07250210642814636, 0.10407543927431107`, 0.0898071825504303, 
              0.11450327932834625`, 0.07612546533346176, 0.10546303540468216`,
               0.08103753626346588, 0.06117568165063858, 0.09382469952106476, 
              0.07756923884153366, 0.12146575003862381`, 0.10319319367408752`,
               0.09020326286554337, 0.09251754730939865, 0.08548225462436676, 
              0.11303749680519104`, 0.041731733828783035`, 
              0.09293121844530106, 0.11258134990930557`, 0.12788143754005432`,
               0.10723841190338135`, 
              0.09229883551597595, -0.03140184283256531, 
              0.1148683950304985, -0.18738839030265808`, 0.109949491918087, 
              0.055893395096063614`, -0.01386429462581873, 
              0.11649196594953537`, 0.12056552618741989`, 0.09287507832050323,
               0.10962710529565811`, 0.04790237918496132, 
              0.11688094586133957`}], "Children" -> 
            RawArray["Integer16",{{11, 2}, {3, 8}, {9, 4}, {10, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {12, 18}, {27, 15}, {23, 16}, {22, 
              19}, {29, 13}, {30, 14}, {-14, -15}, {17, 
              28}, {-11, -17}, {-10, -18}, {35, 25}, {20, 31}, {43, 21}, {39, 
              24}, {47, 32}, {-4, -24}, {-22, -25}, {42, 26}, {-26, -27}, {45,
               36}, {-16, -29}, {41, 40}, {-13, -31}, {37, 54}, {33, 51}, {34,
               57}, {-23, -35}, {60, 44}, {-28, -37}, {50, 
              38}, {-38, -39}, {-21, -40}, {-30, -41}, {-3, -42}, {-19, -43}, \
{59, 46}, {-36, -45}, {-2, -46}, {-44, -47}, {61, 48}, {58, 
              49}, {-49, -50}, {-20, -51}, {53, 52}, {-52, -53}, {-33, -54}, {
              56, 55}, {-55, -56}, {-32, -57}, {-34, -58}, {-48, -59}, {-12, \
-60}, {-9, -61}, {62, 63}, {-1, -63}, {-62, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{32, 32, 42, 41, 27, 26, 41, 42, 31, 42, 32, 
              27, 32, 36, 6, 41, 31, 41, 103, 58, 119, 47, 36, 6, 32, 42, 31, 
              36, 41, 70, 53, 94, 49, 107, 73, 7, 7, 32, 23, 31, 42, 42, 27, 
              31, 29, 21, 31, 44, 119, 32, 67, 12, 37, 11, 41, 12, 111, 58, 
              90, 29, 51, 109, 42}], "NumericalThresholds" -> CompressedData["

1:eJxTTMoPSmVkYGCwB+L///+v9y7+uh/IVxCQ+WgP5Pv7xn/ZD6T1l1x4DaZD
m76C6PcFJm9AtP+OmT9B6gN0FoHV18+b9QMkPl/Y8Q+IXq8lAabj3zz9A1KX
YGj6C6yOzRasLt5/2y+w+Avdr/ZA2uGm1U+wvOHPPxD7XH+D7TswBcy/H/8A
rI9fVQ1M10dfAMvfz70MpuXVWf+D5fU+g2l7r3V/QXT+a66/IHsWGDEzOQD5
5++bMhwA0v+VnXeBxB/8/NIHsvf+zKhjIL5AqdhNkHs+uEy4DHZPgeY2sP65
SWD36ZcngPX3NwcxHgCKTyj5y+wAMufy208g+fflvI9B6j+0ca0AmTNh35lr
INogxvEzSP68juEXcLhNcXoOVp9c/wkcDuYTnoL4678cB4fXhuWSD0F8eZF9
n0D+6J9UAqbX+129AvbX9OiPIHr/9dsXweFh5/IBHA4H2B6AxcXb3oD946H3
1B7svvUHweZHyDCA3F3AwfXJHgDaiDBd
             "], "LeafValues" -> 
            RawArray["Real32",{0.11345211416482925`, 0.09910915791988373, 
              0.08097516000270844, 0.11386243253946304`, 0.10267908126115799`,
               0.016747580841183662`, -0.04604741930961609, \
-0.0003595252346713096, 0.0512358732521534, 0.11108359694480896`, 
              0.08290061354637146, 0.11398010700941086`, 0.03152086213231087, 
              0.1108303889632225, 0.0940161794424057, 0.016928058117628098`, 
              0.05929672718048096, 0.0915367528796196, 0.0674963966012001, 
              0.02139924094080925, 0.11120440810918808`, 0.08674868196249008, 
              0.026064032688736916`, 0.107877716422081, 0.058797769248485565`,
               0.09876709431409836, 0.07721608877182007, 0.07004896551370621, 
              0.06316522508859634, 0.09558361768722534, 0.06293626874685287, 
              0.10264213383197784`, 0.10235057026147842`, 
              0.12296627461910248`, 0.11025450378656387`, 0.1048889011144638, 
              0.060417305678129196`, 0.09578903764486313, 0.08918890357017517,
               0.0647839605808258, 0.09750519692897797, 0.11541604995727539`, 
              0.06469782441854477, 0.07528335601091385, 0.11662615090608597`, 
              0.061167869716882706`, 0.11365760862827301`, 
              0.07353853434324265, 0.12008273601531982`, 0.0972973182797432, 
              0.07407213747501373, 0.08475897461175919, 0.11239714920520782`, 
              0.12860479950904846`, 0.09158024191856384, 0.11882577836513519`,
               0.04309242591261864, 0.13276144862174988`, 
              0.12357248365879059`, 0.11578933894634247`, 
              0.10253507643938065`, 0.11675859987735748`, 
              0.10634227097034454`, 0.1012922003865242}], "Children" -> 
            RawArray["Integer16",{{11, 2}, {3, 9}, {10, 4}, {7, 5}, {12, 
              6}, {-6, -7}, {18, 8}, {-8, -9}, {27, 13}, {26, 16}, {25, 
              17}, {-5, -13}, {14, 23}, {28, 15}, {-15, -16}, {19, 29}, {20, 
              40}, {-4, -19}, {-11, -20}, {33, 21}, {30, 22}, {-22, -23}, {47,
               24}, {-24, -25}, {38, 32}, {48, 31}, {46, 
              34}, {-10, -29}, {-17, -30}, {-21, -31}, {-27, -32}, {36, 49}, {
              39, 62}, {35, 51}, {-28, -36}, {43, 37}, {-37, -38}, {52, 
              44}, {-12, -40}, {41, 54}, {42, 45}, {-18, -43}, {-26, -44}, {
              58, 60}, {-42, -46}, {55, 57}, {-14, -48}, {-2, -49}, {50, 
              61}, {-33, -51}, {-35, -52}, {63, 53}, {-53, -54}, {59, 
              56}, {-3, -56}, {-55, -57}, {-47, -58}, {-39, -59}, {-41, -60}, \
{-45, -61}, {-50, -62}, {-34, -63}, {-1, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{17, 17, 27, 26, 6, 7, 17, 16, 16, 21, 27, 
              26, 2, 17, 6, 26, 21, 26, 27, 26, 31, 26, 17, 16, 26, 21, 27, 
              27, 22, 63, 16, 27, 26, 58, 114, 21, 75, 23, 42, 7, 6, 26, 17, 
              26, 16, 26, 31, 31, 17, 40, 22, 1, 52, 36, 22, 21, 77, 17, 17, 
              25, 26, 7, 36}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////fX1/wYj+Q3+C06509iJ5T9QFEK3zvAdMPglU/
gugDnGkf7IHq57/x/7UfSPurqX8D6dug2PgDJL/gaySYNhB58h1EM3zi+wtS
7x95/ydIncKeE2DxA1eW/gab38v6GyR//uiWnyDz1m9YCjb3/MQoMK3/NO4b
iJaPn/gVRN+/svI7iM7ncP8Hovm9av+A1ZlKgNXL23j9BtlTUNvF4ADkv084
+AOs7+MTsPx6Mev/IHmHpn+MIPl8vZLbYPtMr4L1MbCXPQG5a4O37GOQu/jP
7voLDpcXT7aD/bc9/TRIXN5x7guQvvenNc6Cw8F+0keQugcbvzGBzN1vce8/
SHx/nOhfsDuNq8Du/W9TAXGvJtcTkPoJQr9fgczLD3gGcf/qHLA/61Nc/4Ht
veBQBw7vWy4HQfyEVLH7IHcErNhxG0z7dj0Eh7OV4WdwOG59wHAA5J63LWD/
BEQHXQGJ96tXfQabb3r2Ezi+fGzf2gMAW64gBA==
             "], "LeafValues" -> 
            RawArray["Real32",{0.1115230917930603, -0.052274372428655624`, 
              0.11079747974872589`, 0.10903185606002808`, 0.09367946535348892,
               0.013153666630387306`, 0.021173620596528053`, 
              0.08874179422855377, 0.11695368587970734`, 0.11899416148662567`,
               0.12132593989372253`, 0.12333522737026215`, 
              0.07840631157159805, 0.001994467107579112, 0.10759302228689194`,
               0.06403838098049164, 0.10485740005970001`, 0.08979634195566177,
               0.005564841441810131, 0.017878279089927673`, 
              0.07640589773654938, 0.0038948096334934235`, 
              0.044765572994947433`, 0.05837826803326607, 
              0.052099134773015976`, 0.10259276628494263`, 
              0.043592214584350586`, 0.07689143717288971, 0.06272286176681519,
               0.11341087520122528`, 0.051564957946538925`, 
              0.12198726832866669`, 0.040672045201063156`, 
              0.05420112982392311, 0.1169501468539238, 0.09165842086076736, 
              0.06656751781702042, 0.09938328713178635, 0.10082543641328812`, 
              0.09661778807640076, 0.06032617762684822, 0.04801325127482414, 
              0.0975906252861023, 0.11182324588298798`, 0.09495006501674652, 
              0.09743515402078629, 0.08081009984016418, 0.07411396503448486, 
              0.09606753289699554, 0.06580804288387299, 0.08853552490472794, 
              0.09261003136634827, 0.09102468937635422, 0.10647300630807877`, 
              0.06034792959690094, 0.09910086542367935, 0.061036117374897, 
              0.09025558829307556, 0.11825822293758392`, 0.08734176307916641, 
              0.11698944121599197`, 0.12948276102542877`, 
              0.12765316665172577`, 0.10618457198143005`}], "Children" -> 
            RawArray["Integer16",{{7, 2}, {3, 8}, {4, 11}, {5, 16}, {6, 
              15}, {-2, -7}, {23, 9}, {24, 14}, {10, 31}, {12, 29}, {20, 
              22}, {13, 32}, {-8, -14}, {17, 25}, {-6, -16}, {19, 28}, {36, 
              18}, {-18, -19}, {-5, -20}, {33, 21}, {-21, -22}, {44, 27}, {43,
               37}, {45, 34}, {46, 26}, {-26, -27}, {-23, -28}, {-17, -29}, {
              51, 30}, {-30, -31}, {39, 47}, {-13, -33}, {-4, -34}, {35, 
              50}, {-25, -36}, {-9, -37}, {38, 53}, {42, 49}, {40, 
              41}, {-10, -41}, {-40, -42}, {-24, -43}, {58, 55}, {-12, -45}, {
              61, 60}, {-15, -47}, {52, 
              48}, {-48, -49}, {-39, -50}, {-35, -51}, {-11, -52}, {-32, \
-53}, {54, 59}, {-38, -55}, {57, 56}, {-56, -57}, {-44, -58}, {62, 
              63}, {-54, -60}, {-46, -61}, {-3, -62}, {-1, -63}, {-59, -64}}],
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
             "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{37, 37, 31, 32, 36, 11, 31, 37, 31, 36, 32, 
              36, 37, 32, 12, 1, 31, 32, 36, 48, 54, 31, 12, 1, 31, 32, 37, 
              36, 32, 48, 93, 14, 98, 111, 76, 1, 79, 32, 24, 113, 64, 36, 36,
               21, 1, 111, 37, 37, 79, 91, 2, 16, 65, 56, 42, 112, 37, 22, 32,
               17, 76, 26, 17}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////fL8j4uh/IV1Cf+MkeSAt4P/8AoidMdX9vDxZn
BvMbzpd9sAeqX3/n9Lf9QJr/tdkfkL4Lk9h/g+QXOK78BaITDE1/gdTVs9n+
AMknqHv/BvH1D878CdJn/5HxN4h+v2j5LxD9//wqMK2fIv4TpP7Al4M/Qern
lzX8A4mvf9LzF0THOx4E68tPc/2JTf/7WPbTIPr+3F//QXR99AWwenl11v8g
cwVWHvkCch9Dt9wzsHtFrz8A2XO/Oe0Q2J2Km8+DxDd8NTgGFmdO+wPWX30d
TO/f8wRs7nnODQwHQOI3Tm4Gu4vzHJjvf34d2J3zW2TugMNz6o1rcHOA/Adp
MmBz9e3egdX///EIbO7/M1dugs3VP3cN7M5zm3gcQO6ZIQkO9wRhZnB47tfz
/gwO774lh0DiB5Y6/gObf8wZHB78F/K/gsNnlRc4ftYfuvsZ7G7esJfg8H0a
Bxa37739ej8ABAE4DQ==
             "], "LeafValues" -> 
            RawArray["Real32",{0.08668306469917297, -0.044864632189273834`, 
              0.11974135786294937`, 0.11913605779409409`, 
              0.11463331431150436`, 0.01476210355758667, 
              0.025341704487800598`, 0.011737944558262825`, 
              0.08998332172632217, 0.12498532235622406`, 0.06049235537648201, 
              0.05605737119913101, 0.10947679728269577`, 0.11177738010883331`,
               0.08910194784402847, 0.014172930270433426`, 
              0.09238797426223755, 0.02110140770673752, 0.06942477822303772, 
              0.04897991940379143, 0.11057651042938232`, 0.08728907257318497, 
              0.07040078938007355, 0.029765963554382324`, 
              0.10087555646896362`, 0.05535571649670601, 0.03742334619164467, 
              0.1049693152308464, 0.05916616693139076, 0.07646489888429642, 
              0.11303844302892685`, 0.10930971056222916`, 0.09710690379142761,
               0.06369432061910629, 0.1118878722190857, 0.09970541298389435, 
              0.07371393591165543, 0.07209192216396332, 0.09883183240890503, 
              0.07435271888971329, 0.07027021795511246, 0.06437762826681137, 
              0.08972655236721039, 0.11178267002105713`, 0.08101866394281387, 
              0.08563634008169174, 0.1163950264453888, 0.10073735564947128`, 
              0.04633817449212074, 0.07656732946634293, 
              0.09292962402105331, -0.023155730217695236`, 0.1057925894856453,
               0.06121021509170532, 0.10711539536714554`, 0.08949011564254761,
               0.10602091997861862`, 0.08420141786336899, 
              0.11307301372289658`, 0.11866549402475357`, 
              0.12763531506061554`, 0.11974842101335526`, 
              0.11316149681806564`, 0.12005612254142761`}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {3, 12}, {4, 9}, {5, 7}, {6, 
              10}, {-2, -7}, {22, 11}, {27, 19}, {14, 
              18}, {-6, -11}, {-8, -12}, {28, 13}, {16, 24}, {29, 
              15}, {-15, -16}, {36, 17}, {-17, -18}, {38, 26}, {20, 30}, {41, 
              21}, {39, 23}, {-5, -23}, {-22, -24}, {45, 
              25}, {-25, -26}, {-19, -27}, {47, 33}, {42, 31}, {-4, -30}, {35,
               56}, {32, 55}, {-29, -33}, {34, 48}, {37, 49}, {44, 
              40}, {-13, -37}, {-28, -38}, {-10, -39}, {-21, -40}, {-36, \
-41}, {61, 43}, {51, 46}, {-42, -44}, {-20, -45}, {-14, -46}, {-43, -47}, {58,
               52}, {54, 50}, {-35, -50}, {-49, -51}, {-3, -52}, {59, 
              53}, {-53, -54}, {-34, -55}, {-32, -56}, {57, 63}, {-31, -58}, {
              62, 60}, {-48, -60}, {-59, -61}, {-9, -62}, {-1, -63}, {-57, \
-64}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{47, 46, 1, 2, 21, 22, 46, 47, 47, 2, 46, 21,
               73, 1, 11, 8, 12, 26, 46, 47, 75, 120, 1, 97, 17, 47, 2, 1, 11,
               22, 2, 74, 23, 4, 109, 3, 36, 30, 116, 15, 47, 88, 46, 47, 7, 
              21, 110, 8, 110, 47, 16, 56, 77, 22, 63, 2, 65, 2, 46, 41, 91, 
              15, 72}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////X/09+tR9I3/c7BqbzKwS/gelc068gWr9ICszn
v5AP5tsvUPsJotc/3/lzP9CcB9XvP9oD+eftF/0G8Rm8g8H8/1fu/Aar++39
D0T/jzwH5s9/Ewk2b/6ERX9AdP2HO2Dz7n/jgNC54n/B9i3y+Acyb4LfzrMg
8/rPVPwF8Q0E8z/YA2mFUM73INrh5sNVIPoCcw2DA8i8vW/+g/SfT84D2xs/
3xrs7vsfn/wCu/9lEZjOjy6aDqLfh4vsAJmr4Lh9L8icAPeSmyD71n8MYjwA
cndm6jtwODB8OQU2b+9qBpC4/j8+sDnvi76A7cvfd/g72Pzt8v9B5gVMqGMD
uWc/31WwP+dHNoD93b/54VWwfZPerQbZ98B8wjOQfe9tX4DN619s9wkSriv+
geQFdoh8AbuHmw9sT/8hUaYDIHHBPYfA+o9afAbJ73/L8AUc3k8uHAf7V7z3
Czg+/gmdAIfT5mIGByC9gGPyG3sAP7xB4g==
             "], "LeafValues" -> 
            RawArray["Real32",{0.11208075284957886`, 0.1104402169585228, 
              0.11427652835845947`, 0.12048745155334473`, 
              0.10365097969770432`, 
              0.04553118348121643, -0.044095754623413086`, 
              0.13338221609592438`, 0.13076139986515045`, 0.08644451200962067,
               0.017148150131106377`, 0.11578826606273651`, 
              0.030026152729988098`, 0.05325527861714363, 0.09835740923881531,
               0.08619622141122818, 0.08666207641363144, 
              0.0009067569044418633, -0.00029953313060104847`, 
              0.04857659339904785, 0.08253884315490723, 0.11895240098237991`, 
              0.02481970749795437, 0.06303653866052628, 0.11217129230499268`, 
              0.11740346997976303`, 0.06920445710420609, 0.07908811420202255, 
              0.0763619989156723, 0.0393238440155983, 0.09373503923416138, 
              0.03808598965406418, 0.12137065082788467`, 0.08998454362154007, 
              0.09156250953674316, 0.09578157961368561, 0.07873580604791641, 
              0.051073286682367325`, 0.11170469969511032`, 
              0.09868988394737244, 0.07640434801578522, 0.080523781478405, 
              0.08561649173498154, 0.11115901917219162`, 0.0915088951587677, 
              0.1026574894785881, 0.07410141825675964, 0.11660633236169815`, 
              0.11105074733495712`, 0.10761909931898117`, 0.06133332476019859,
               0.06883476674556732, 0.08561244606971741, 0.003555042203515768,
               0.08452676236629486, 0.10681203752756119`, 
              0.12946516275405884`, 0.082977794110775, 0.10697051137685776`, 
              0.12338222563266754`, 0.13051505386829376`, 0.08493790030479431,
               0.02233758755028248, 0.09824363142251968}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {7, 3}, {14, 4}, {10, 5}, {12, 
              6}, {-6, -7}, {19, 9}, {20, 11}, {16, 26}, {27, 23}, {13, 
              24}, {-5, -13}, {39, 15}, {28, 21}, {25, 17}, {36, 
              18}, {-16, -18}, {-17, -19}, {43, 32}, {41, 34}, {22, 
              40}, {-15, -23}, {-11, -24}, {30, 45}, {-14, -26}, {29, 
              44}, {-4, -28}, {56, 38}, {-10, -30}, {54, 31}, {-31, -32}, {33,
               42}, {-20, -34}, {35, 49}, {37, 
              53}, {-8, -37}, {-21, -38}, {-29, -39}, {55, 51}, {-22, -41}, {
              58, 47}, {-33, -43}, {60, 52}, {-27, -45}, {62, 
              46}, {-46, -47}, {48, 57}, {-42, -49}, {50, 
              61}, {-35, -51}, {-40, -52}, {-44, -53}, {-36, -54}, {-12, \
-55}, {-9, -56}, {-3, -57}, {-48, -58}, {63, 
              59}, {-59, -60}, {-2, -61}, {-50, -62}, {-25, -63}, {-1, -64}}],
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
             "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{12, 11, 22, 21, 32, 31, 11, 21, 12, 12, 75, 
              36, 31, 32, 22, 11, 21, 42, 41, 12, 21, 1, 111, 108, 100, 12, 2,
               26, 26, 22, 59, 35, 74, 26, 27, 22, 2, 1, 11, 18, 25, 2, 94, 
              89, 36, 27, 5, 117, 80, 51, 66, 114, 12, 26, 72, 58, 47, 51, 26,
               32, 28, 82, 16}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////HVxd+3Q+k9yfXvADR+aEKP0D0/MXhr0F0vc2O
byB6/eYfYHX/v8n9AtHnc8x/7Qeac2C2+yd7IL8/y+gPSPz++S1gup7NFmzO
+krJn2BaSwIinuL6D0T3v+X9C6a1uMH0fH6mUyDafmrNcbC5ESZMDkB6woXT
70Dmr5c78h2s/m4cWP//Lpv/IFpfRpbhAJCWX/AZzJd/cvUBWN3MkMcgcwpC
7u4G6b//8QnYvQnr1zy1B9IKWlJ7QPQDK5UGsLzIpsdgfRtkT4No/6lZYHPr
mWXA5tVfeHoPLG4t+B9kDkPjmf0g/Q7c8vtAdMKHydvBNHfqK5B5+Vn858D6
3jx4C3ZnuctDcPho3ASHA7+C3hKwPwqqj4LtlZV4BVa/s/QK2P9WBQwOIPn/
z8DuyD/35wNIfEH6kt8gewzu+/0F2SN/o/Iz2F+OKxlA4VUwifMPSDx+1lWw
+oYmDnD41TtnfQK7Y2rS9/0AeUM+yA==
             "], "LeafValues" -> 
            RawArray["Real32",{0.08168856799602509, 0.11072918772697449`, 
              0.12713122367858887`, 0.1114506721496582, 0.09492051601409912, 
              0.05056460574269295, -0.04012751951813698, 0.10802062600851059`,
               0.08558019250631332, 0.09756851941347122, 0.08521370589733124, 
              0.08143382519483566, 0.00007104867836460471, 
              0.0073827775195240974`, 0.0322251133620739, 
              0.060436446219682693`, 0.050885219126939774`, 
              0.06604696065187454, 0.11403483152389526`, 0.0709940493106842, 
              0.1081320121884346, 0.0707009807229042, 0.04326382279396057, 
              0.09257854521274567, 0.0034924629144370556`, 
              0.05629159137606621, 0.09498324990272522, 0.06793127208948135, 
              0.030052950605750084`, 0.1210959330201149, 
              0.026499083265662193`, 0.07861918210983276, 0.04841151833534241,
               0.09181752800941467, 0.07844328135251999, 0.04067830741405487, 
              0.09058743715286255, 0.03746262192726135, 0.06651919335126877, 
              0.09896162897348404, 0.10964225232601166`, 0.07373536378145218, 
              0.11181829869747162`, 0.09962311387062073, 0.11782132834196091`,
               0.0710887536406517, 0.09329855442047119, 0.07818340510129929, 
              0.11825652420520782`, 0.11946563422679901`, 
              0.10249191522598267`, 0.1089446172118187, 0.09950486570596695, 
              0.11784525960683823`, 0.1281321793794632, 0.03824632242321968, 
              0.09277389198541641, 0.11393505334854126`, 
              0.11029069870710373`, -0.10208246111869812`, 
              0.12968410551548004`, 0.09087491035461426, 0.09806662052869797, 
              0.11268232017755508`}], "Children" -> 
            RawArray["Integer16",{{10, 2}, {7, 3}, {15, 4}, {8, 5}, {14, 
              6}, {-6, -7}, {16, 9}, {17, 13}, {11, 20}, {26, 18}, {25, 
              12}, {-12, -13}, {-9, -14}, {-5, -15}, {36, 21}, {39, 
              32}, {-4, -18}, {27, 19}, {34, 23}, {22, 47}, {30, 
              43}, {-10, -23}, {49, 24}, {-24, -25}, {-8, -26}, {53, 40}, {29,
               28}, {42, 31}, {35, 46}, {-16, -31}, {-29, -32}, {33, 
              50}, {-17, -34}, {38, 37}, {-11, -36}, {52, 
              44}, {-35, -38}, {-19, -39}, {54, 48}, {41, 58}, {45, 
              51}, {-28, -43}, {-22, -44}, {-37, -45}, {-27, -46}, {-30, \
-47}, {-21, -48}, {-40, -49}, {-20, -50}, {-33, -51}, {-42, -52}, {-3, -53}, {
              57, 55}, {-2, -55}, {56, 62}, {-54, -57}, {63, 60}, {61, 
              59}, {-59, -60}, {-58, -61}, {-41, -62}, {-56, -63}, {-1, \
-64}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{17, 16, 36, 37, 26, 7, 37, 16, 36, 17, 26, 
              115, 114, 14, 74, 68, 53, 95, 73, 37, 17, 80, 115, 36, 8, 16, 
              100, 17, 85, 104, 95, 104, 28, 78, 80, 6, 103, 53, 102, 17, 7, 
              36, 10, 50, 41, 90, 30, 29, 69, 32, 37, 6, 111, 6, 41, 12, 2, 
              91, 56, 57, 41, 41}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwA+L////Hp3l92w+k/dXUIbSbJJiW/z33C4iO/3gMzNev
PQORvzb7N4jm96r9A6Lroy+A+f8blMH886ZXf+8Hmn/BinmTPZA2sLq7HUQL
BP64CqIdDM7vB9ENWsrX7EHm19v8B6lfcO3oZZD4gY3RF0Hi8ttk/oPM65/G
C6b3S9f8BZvvuhRsj//5dWC+vvBRsLv4jav+gdXVnvkOMq/h1O/fIHPea+f/
BInf7/jzAyQ+4dTbW2B3LbmwFyyfO+0XSD7/kfIGkLzDrz1fQfIM943eg+ld
uY9B6vh19SaAzW/3fAp2x9YHDAdA/i6rewDi2/+VBvuDwVWHyQGknlcaLN//
eOlXsHtC5oP9u/5fxV9w+Hh0fQT7t7L7IzgcZl39APbHZpsfYHuSdH6Czau0
/g6S948V/wDiG6T7vgOrjz79GazeNREcT/kesvfB8fav7CXYfYmcH8HhN6Xj
BiSeAv7sBwDf/zSg
             "], "LeafValues" -> 
            RawArray["Real32",{0.03794220834970474, 0.06416027247905731, 
              0.12636856734752655`, 0.1124533861875534, 0.10251341015100479`, 
              0.059369005262851715`, -0.029250307008624077`, 
              0.026711488142609596`, 0.10755158960819244`, 
              0.027910403907299042`, 0.10058841109275818`, 
              0.040158867835998535`, 0.11989495903253555`, 
              0.10540521889925003`, 0.11508819460868835`, 0.07534119486808777,
               0.06389357894659042, 
              0.02511298656463623, -0.007217385806143284, 
              0.052515506744384766`, 0.07622811943292618, 0.06412719935178757,
               0.07512988895177841, 0.023743614554405212`, 
              0.07972791790962219, 0.06011142209172249, 0.07830002903938293, 
              0.052525874227285385`, 0.08151163160800934, 0.0494578592479229, 
              0.07487623393535614, 0.09652676433324814, 0.11411008983850479`, 
              0.08240267634391785, 0.09584776312112808, 0.09631382673978806, 
              0.09820391237735748, 0.07533323764801025, 0.11467495560646057`, 
              0.10047175735235214`, 0.09291737526655197, 0.05640001222491264, 
              0.1097588986158371, -0.06539986282587051, 0.06829336285591125, 
              0.11195962131023407`, 0.00761756906285882, 
              0.09459055960178375, -0.10268330574035645`, 0.09593892842531204,
               0.13039200007915497`, 0.11397401988506317`, 
              0.11090724915266037`, 0.07775440067052841, 
              0.057922523468732834`, -0.01375856064260006, 
              0.10943279415369034`, 0.12848025560379028`, 
              0.11317671090364456`, 0.11092358827590942`, 
              0.12111572176218033`, 0.09489983320236206, 
              0.11051113158464432`}], "Children" -> 
            RawArray["Integer16",{{10, 2}, {8, 3}, {9, 4}, {7, 5}, {11, 
              6}, {-6, -7}, {20, 16}, {26, 12}, {24, 14}, {21, 
              18}, {-5, -12}, {13, 27}, {17, 25}, {15, 
              30}, {-10, -16}, {-8, -17}, {-9, -18}, {19, 33}, {22, 
              29}, {-4, -21}, {40, 31}, {44, 23}, {-23, -24}, {42, 
              32}, {-14, -26}, {45, 38}, {47, 28}, {-28, -29}, {58, 
              37}, {-15, -31}, {34, 54}, {-25, -33}, {60, 35}, {36, 46}, {41, 
              43}, {-22, -37}, {-30, -38}, {39, 53}, {-27, -40}, {56, 
              48}, {-34, -42}, {-3, -43}, {-36, -44}, {-11, -45}, {52, 
              50}, {-35, -47}, {-13, -48}, {51, 
              49}, {-49, -50}, {-46, -51}, {-41, -52}, {-2, -53}, {-39, -54}, \
{55, 59}, {-32, -56}, {62, 57}, {-57, -58}, {-20, -59}, {-55, -60}, {-19, 
              61}, {-61, -62}, {-1, -63}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{41, 42, 1, 11, 26, 27, 42, 41, 1, 6, 47, 26,
               41, 11, 112, 8, 75, 99, 42, 41, 85, 23, 14, 17, 1, 2, 41, 11, 
              15, 55, 53, 75, 106, 88, 58, 42, 63, 69, 34, 41, 38, 63, 120, 
              58, 38, 86, 70, 82, 4, 114, 6, 82, 81, 106, 7, 96, 14, 7, 16, 
              27, 21, 26, 73}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////bm/N82w+k9wvIPwXR/o+XfQXR/GcOg8Xvc1qB
+fqTFD+D6P+ZZb/2A/UrHJn22R7Ejzz3G6zO5BlY/XvbF79AdL6iOVhcX2EH
mK6XuPAbpC/gV/kZe5D961rOgegLvV83gugDCjU3QOb5t/n/A6lz8IljcADZ
M4VtD0hc/2rOX7D9n5aD6flS/+eD6PPJef/AtP0isD3vpaLB/P7EGDCd/+bW
d5B5F4Lv3QKZc17G/gLYvTvS9oDdVy8Odq+/450fYHuFJr8AqZv/JoPhAEj8
4ORjYHMXXjkFkt+waO8jsHs8dn0Hia9nXwNW1/9qGtic/jMVYPfx2+/+CDZ/
qv4mkD4Bye/HQfryz258CXa/sSQ4HC/4L/gBDo+jq7+D5PcHNnwCiU/4J/oI
LP5b/zGIfmB7CBze8pf434DDc2rCQ5C6By7Nj8HuKVn7BSQuf/Qj2N77tQ5f
QPIHnjxcD46ndovXIP6CqElP7QF8H0FB
             "], "LeafValues" -> 
            RawArray["Real32",{0.09251241385936737, 0.1045217514038086, 
              0.1262454390525818, 0.121226467192173, 0.09103941917419434, 
              0.03391720727086067, -0.038009289652109146`, 
              0.053058456629514694`, 0.09900230169296265, 
              0.018400883302092552`, 0.09182383120059967, 
              0.001992752542719245, 0.02211424708366394, 0.11321301013231277`,
               0.026389267295598984`, 0.10126843303442001`, 
              0.10557986050844193`, 0.10841714590787888`, 0.08172101527452469,
               0.051225654780864716`, 0.11009237915277481`, 
              0.07509969174861908, 0.08472161740064621, 0.019788803532719612`,
               0.11253014951944351`, 0.07887592166662216, 0.04467080906033516,
               0.10069077461957932`, 0.08392108231782913, 0.05926854535937309,
               0.07699724286794662, 0.08134778589010239, 0.1135941743850708, 
              0.0590493306517601, 0.07710004597902298, 0.09422082453966141, 
              0.0914161428809166, 0.11047177761793137`, 0.11705765128135681`, 
              0.07590176910161972, 0.03733653202652931, 0.07226074486970901, 
              0.06831234693527222, 0.08020735532045364, 0.08853297680616379, 
              0.10960759967565536`, 0.10160123556852341`, 0.09781573712825775,
               0.08680915832519531, -0.17463409900665283`, 
              0.09867342561483383, 
              0.11580397933721542`, -0.29835522174835205`, 
              0.08169001340866089, 0.11083214730024338`, 0.13079267740249634`,
               0.11139519512653351`, 0.12232847511768341`, 
              0.11989785730838776`, 0.1177559420466423, 
              0.09491118788719177, -0.02837556228041649, 0.11675745993852615`,
               0.12324047088623047`}], "Children" -> 
            RawArray["Integer16",{{13, 2}, {7, 3}, {9, 4}, {14, 5}, {12, 
              6}, {-6, -7}, {19, 8}, {10, 20}, {25, 17}, {24, 
              11}, {-11, -12}, {-5, -13}, {27, 15}, {28, 21}, {16, 34}, {22, 
              33}, {18, 29}, {-10, -19}, {36, 30}, {26, 43}, {-15, -22}, {41, 
              23}, {-23, -24}, {-8, -25}, {54, 32}, {-9, -27}, {50, 
              37}, {-4, -29}, {-18, -30}, {31, 46}, {-20, -32}, {-26, -33}, {
              63, 35}, {52, 39}, {-34, -36}, {58, 45}, {38, 48}, {42, 44}, {
              40, 47}, {-35, -41}, {-14, -42}, {-28, -43}, {-21, -44}, {-39, \
-45}, {-37, -46}, {-31, -47}, {-40, -48}, {49, 56}, {-38, -50}, {51, 60}, {59,
               55}, {57, 
              53}, {-53, -54}, {-3, -55}, {-52, -56}, {-49, -57}, {-16, -58}, \
{-2, -59}, {-1, -60}, {61, 62}, {-51, -62}, {-61, -63}, {-17, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{46, 46, 21, 22, 16, 17, 21, 47, 22, 46, 22, 
              16, 46, 22, 7, 22, 21, 16, 12, 54, 13, 21, 104, 88, 47, 46, 2, 
              48, 16, 13, 7, 9, 58, 46, 9, 18, 22, 12, 5, 46, 27, 109, 89, 2, 
              47, 58, 117, 28, 38, 97, 47, 41, 101, 42, 22, 26, 82, 67, 61, 
              82, 66, 110, 36}], "NumericalThresholds" -> CompressedData["
1:eJwlkL1LQmEUxq+uRbX0gYu2thgFgS5qgX1AWA0GFSiCRBYUSEMtNkS0hDoE
LhbUH2AI1VLdqDDKQcshUkvzgyAltaspeu3mcxxefpxznud8vL2m1RmziGEY
VeMJghDwhn/ZRry1kMmrQM1wATQqDr5BZtz1A6rrK3lVQ6+b0JfZBtnt4woY
4+IhMFB5qaGPTPZYhj5oLvJgP5fk4bO5ZTx07ZlilXyFVBV6Y/m2hjrbeUp5
u2WARz7vFN/DL+tKPFHdbG36H/QCsVXZ5NHYH3g4f1EHpRIt6Qxn68364CbV
PaII7WsPTVJsi84+Y07QG2UxZ8rLidXQuasV5E/2lWnM9bS0CfQ/mt03xPLK
1Rf8qnMp9RcYUwp1h1OepT7+IY7uvcySz5H1JRAb7lxFmh/PfJJ/cfQDlCfe
Oeg6ptM+6GLWZeYa7N4jvVAKFmhfxY0PzI3ESnRfWEt5tkfgiHMbCfRZ8y4V
0ccu1r3SvyR3/LR/nyRC++ssOfYfZzxAOQ==
             "], "LeafValues" -> 
            RawArray["Real32",{0.09494724124670029, -0.041420526802539825`, 
              0.10440963506698608`, 0.11622270941734314`, 
              0.11068376898765564`, 0.017658155411481857`, 
              0.021123375743627548`, 0.009353413246572018, 0.110348179936409, 
              0.12720873951911926`, 0.08457844704389572, 0.04728322848677635, 
              0.06438549607992172, 0.11353044211864471`, 
              0.033072616904973984`, 0.08568600565195084, 
              0.017242655158042908`, 0.06802854686975479, 
              0.08458166569471359, -0.003986379597336054, 
              0.10458633303642273`, 0.07012280821800232, 0.06740017980337143, 
              0.10047581791877747`, 0.02523977868258953, 0.04886743053793907, 
              0.06030382961034775, 0.10980638861656189`, 0.0566127747297287, 
              0.0609159916639328, 0.09227641671895981, 0.06818201392889023, 
              0.12820929288864136`, -0.002199058886617422, 0.111320361495018, 
              0.06277178227901459, 0.12171539664268494`, 0.09060406684875488, 
              0.09477350860834122, 0.07633627951145172, 0.09045440703630447, 
              0.052084170281887054`, 0.09154586493968964, 
              0.10811614990234375`, 0.08704345673322678, 0.09058944135904312, 
              0.08518042415380478, 0.12253276258707047`, 0.11879737675189972`,
               0.0885189101099968, 0.11879949271678925`, 0.06553669273853302, 
              0.11361125111579895`, 0.11915607005357742`, 0.09203992784023285,
               0.11956742405891418`, 0.1313837617635727, 0.11521397531032562`,
               0.003047744743525982, 0.10499588400125504`, 
              0.11559087783098221`, 0.09695027768611908, 0.12525427341461182`,
               0.11652906984090805`}], "Children" -> 
            RawArray["Integer16",{{10, 2}, {3, 8}, {4, 9}, {5, 7}, {6, 
              12}, {-2, -7}, {22, 11}, {25, 13}, {14, 18}, {26, 
              20}, {-8, -12}, {-6, -13}, {15, 27}, {37, 17}, {31, 
              16}, {-16, -17}, {-15, -18}, {29, 19}, {-19, -20}, {21, 30}, {
              23, 35}, {-5, -23}, {48, 24}, {-24, -25}, {43, 34}, {40, 32}, {
              44, 28}, {-28, -29}, {-10, -30}, {58, 36}, {-9, -32}, {33, 
              49}, {38, 57}, {39, 54}, {60, 42}, {41, 
              46}, {-4, -38}, {-27, -39}, {-26, -40}, {52, 
              45}, {-31, -42}, {-36, -43}, {55, 51}, {-14, -45}, {47, 
              53}, {-37, -47}, {-41, -48}, {-11, -49}, {61, 
              50}, {-50, -51}, {-44, -52}, {63, 
              56}, {-46, -54}, {-35, -55}, {-3, -56}, {-53, -57}, {-34, -58}, \
{62, 59}, {-59, -60}, {-22, -61}, {-33, -62}, {-21, -63}, {-1, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{6, 7, 31, 32, 36, 37, 7, 31, 32, 36, 6, 31, 
              6, 32, 38, 32, 37, 31, 31, 7, 6, 32, 106, 114, 2, 48, 108, 6, 
              65, 73, 95, 64, 47, 19, 118, 75, 14, 100, 7, 5, 6, 84, 6, 10, 
              31, 5, 80, 93, 32, 36, 22, 13, 16, 76, 92, 20, 37, 37, 19, 4, 
              11, 47, 47}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L///+/Fwn/vh9I2+fceAai64UU34Jo/38Pwfz9rzLe
gOj1R8tfgmj+119+gdUry4NpfjlzML2eyejXfqC5H0ob39mDaKeL7+yB4vdz
L/8GyZ9/suUJWH1fzl+QOoaKR89A6gpUN70EqbP3WgcWd7hp9RPEn88l9B/E
f/Dx+T8QX16dFczfwGZ4D6QvYHLgLZD4foHrYPfPL2v4B6L1v27+A/ZH2o6/
IFp+decJMP9DIOMBIP2/VmoGiB+/5M9FEN3/fSJYHb9j5U+w+h6/gyB7Gvq9
J4Dd9afoP1j+TPpXsPlP7jKAzLk/98EnsLjf2h9gd5ds+QBS/99cCuzOC8nB
zA4g/brhYHfVvy8+DFa//9gHEP1+6ZNbIHUBuoyvQfrOS4l+BMvbyj8GiQvs
ePUR7G/msg/gcD2z9g+I7//ixzGwvnWFDA6gcCycvBUkHi976RNY3arZD8Hu
Zvn6HhyPHh0Qcxd5gN2xv2Xxj/0AxjRDwg==
             "], "LeafValues" -> 
            RawArray["Real32",{0.09421303123235703, 0.10795004665851593`, 
              0.1257326751947403, 0.11038850247859955`, 0.08004485815763474, 
              0.002147760707885027, -0.05545232817530632, 
              0.024338670074939728`, 
              0.12329363077878952`, -0.004189063794910908, \
-0.002724001184105873, 0.0924004465341568, 0.0410161092877388, 
              0.07307125627994537, -0.006884174421429634, \
-0.0038698853459209204`, 0.03546787053346634, 0.041261304169893265`, 
              0.05904172733426094, 0.07170117646455765, 0.050826676189899445`,
               0.11013638228178024`, 
              0.06201710179448128, -0.0876353308558464, -0.01051225233823061, 
              0.03634916990995407, 0.0857028216123581, 0.026786724105477333`, 
              0.11962022632360458`, 0.09405530244112015, 0.07417676597833633, 
              0.1123223751783371, 0.08293130248785019, 0.06925587356090546, 
              0.08864157646894455, 0.1260467916727066, 0.11191560328006744`, 
              0.06846252083778381, 0.06909973919391632, 0.10720272362232208`, 
              0.08247365057468414, 0.056434132158756256`, 0.1025591790676117, 
              0.11971423774957657`, -0.13439486920833588`, 
              0.10572681576013565`, -0.07340751588344574, 
              0.11042238771915436`, 0.09307395666837692, 0.08950348198413849, 
              0.11467959731817245`, 0.07601530849933624, 0.10636590421199799`,
               0.1350913941860199, 0.09901495277881622, 
              0.12087085843086243`, -0.0029476801864802837`, 
              0.07874350249767303, 0.12495104223489761`, 0.06278152763843536, 
              0.09988804906606674, 0.11895684897899628`, 0.11968374252319336`,
               0.12008936703205109`}], "Children" -> 
            RawArray["Integer16",{{13, 2}, {7, 3}, {8, 4}, {9, 5}, {10, 
              6}, {-6, -7}, {20, 11}, {18, 15}, {22, 12}, {-5, -11}, {14, 
              21}, {-10, -13}, {28, 23}, {19, 17}, {30, 
              16}, {-16, -17}, {-15, -18}, {45, 29}, {-8, -20}, {39, 31}, {25,
               33}, {-4, -23}, {24, 38}, {26, 34}, {-12, -26}, {47, 
              27}, {-27, -28}, {43, 35}, {-19, -30}, {-9, -31}, {32, 
              40}, {-21, -33}, {-22, -34}, {62, 41}, {36, 48}, {37, 
              46}, {-29, -38}, {59, 42}, {58, 49}, {-32, -41}, {-35, -42}, {
              44, 56}, {50, 
              52}, {-39, -45}, {-3, -46}, {-37, -47}, {-14, -48}, {51, 
              55}, {-40, -50}, {61, 53}, {-36, -52}, {54, 
              57}, {-51, -54}, {-44, -55}, {-49, -56}, {-43, -57}, {-53, \
-58}, {-2, -59}, {60, 63}, {-24, -61}, {-1, -62}, {-25, -63}, {-60, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{2, 1, 47, 46, 41, 42, 1, 2, 107, 85, 47, 46,
               41, 2, 1, 18, 1, 117, 70, 54, 114, 2, 47, 101, 2, 46, 75, 20, 
              16, 2, 28, 10, 100, 2, 22, 44, 50, 60, 79, 11, 10, 2, 90, 5, 16,
               76, 47, 56, 74, 42, 8, 20, 1, 36, 37, 114, 26, 15, 26, 12, 94, 
              77, 57}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////X7075vh9I96tcewmi1+d5fAPR/hYFYLq+pAhM
y39a/xxEv1+0/Nd+kP7djl/sgfx81dJ/IPH9wqFg+vykG3/A9I/rv8H6owMg
/MK5f8F0ct4/kH4DS5ET9kA6wW/CZxD9wYD/GMi8/jtTwer2FwX8B9H6jnZg
2v5l0S+w/UVfwPz4lAMMB4D6LrzKZ3AA8udH74HoCz5wEkT/P3b7NNg/bjpg
ffV734D1vT+X8hNkv8P3jWB7C254fwLb32J/HmS/fFvza5C6fBezz2C61fk8
SP2D0pXXQPL8q6vB/pzvnr8aRN9vUAGr3y+Yz3AA5C6taS9B6guumf8Cmatw
WewfiGZYs+Qx2HzTV2B3K5zq/Qa2/+48XgcgLfBU7R3YHfPXvgOH692YL+B4
qTUHu5ufMx4cT/KO6mB3+ftMAseX/jIzcLzYH46EhIvHv69g/uRDYPX6ObHH
wfrvG50FuWvDzn2/7AEwoUWD
             "], "LeafValues" -> 
            RawArray["Real32",{0.10815887153148651`, 0.10361550748348236`, 
              0.12317158281803131`, 0.1151256412267685, 0.10405626893043518`, 
              0.010618544183671474`, -0.037512943148612976`, 
              0.12129341065883636`, 0.10911761224269867`, 0.09185958653688431,
               0.003844374092295766, 0.09449949115514755, 0.02867908589541912,
               0.034756749868392944`, 0.09542512893676758, 
              0.05195848271250725, 0.07549240440130234, 0.07947016507387161, 
              0.1089499220252037, 0.06902176886796951, 0.0267360657453537, 
              0.05238955095410347, 0.02028787136077881, 0.09161996096372604, 
              0.06720010191202164, 0.1075817346572876, 0.08030637353658676, 
              0.11541526764631271`, 0.09611829370260239, 0.04591914638876915, 
              0.08585374802350998, 0.058121077716350555`, 0.063216432929039, 
              0.09703412652015686, 0.0671297013759613, 0.05224187672138214, 
              0.089322529733181, 0.07065054029226303, 0.11284036934375763`, 
              0.07044335454702377, 0.06064675375819206, 0.11215953528881073`, 
              0.11091972142457962`, 0.11444204300642014`, 0.01786031201481819,
               0.060067713260650635`, -0.2969497740268707, 
              0.11010980606079102`, -0.05428076162934303, 
              0.07981814444065094, -0.31416964530944824`, 
              0.11790654063224792`, 0.06051584333181381, 0.10040494054555893`,
               0.10493224114179611`, 0.12377377599477768`, 
              0.11873293668031693`, 0.06476803123950958, 0.08555546402931213, 
              0.12466246634721756`, 0.10877852141857147`, 
              0.11911626905202866`, 0.08300912380218506, 0.038083516061306}], 
            "Children" -> 
            RawArray["Integer16",{{14, 2}, {7, 3}, {11, 4}, {12, 5}, {13, 
              6}, {-6, -7}, {15, 8}, {9, 25}, {24, 10}, {-10, -11}, {23, 
              18}, {26, 16}, {-5, -14}, {30, 17}, {53, 27}, {-13, -17}, {19, 
              32}, {20, 31}, {43, 21}, {-12, -21}, {41, 22}, {-22, -23}, {47, 
              34}, {-8, -25}, {29, 39}, {-4, -27}, {28, 
              36}, {-16, -29}, {-9, -30}, {42, 37}, {-19, -32}, {33, 45}, {35,
               44}, {-24, -35}, {-18, -36}, {-28, -37}, {38, 51}, {40, 
              48}, {-26, -40}, {-31, -41}, {-20, -42}, {49, 61}, {57, 
              58}, {-34, -45}, {54, 46}, {-46, -47}, {-3, -48}, {-39, -49}, {
              55, 50}, {-50, -51}, {60, 52}, {-52, -53}, {59, 
              56}, {-33, -55}, {-1, -56}, {-54, -57}, {-15, -58}, {-44, -59}, \
{-2, -60}, {-38, -61}, {62, 63}, {-43, -63}, {-62, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{12, 41, 42, 11, 26, 27, 42, 41, 42, 41, 63, 
              84, 37, 11, 26, 12, 42, 41, 41, 100, 42, 63, 21, 58, 64, 68, 75,
               41, 13, 12, 102, 11, 3, 42, 66, 41, 29, 18, 25, 56, 96, 69, 2, 
              108, 11, 24, 12, 12, 16, 21, 72, 58, 82, 81, 22, 57, 47, 21, 32,
               76, 16, 16}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwA+L////vbzz0Yz+Q/s+84TmI3i8g/xREz38T+Q1E379j
9h1E92vtA8u/j3vyE0TbF0r+2g80J0Bn0Ud7IG2Q7vvOHqTeauEfsL7Kqn9g
+pgzWP37A3lg8f82FWB6vdCUvyDav83/H8ichJ1J/0H67WOW/AXxDTSm3QaZ
G7DJ9jdI/Px7aYYDIDrH/BfYPJX9R0DqHlx5exik7oNu+HUQLfBaYR+IdvCJ
Y3AA+fO2+CGQfvkFn/+D9OUvDgG7qz8xBuK+Gf/eQ/ybwXAAqL5AqHIVSH29
ljxY/X3pJ2D//y+IPgqi9fuK9oHo+u4pkPBaFvIA7J66Y5dBdLyP5CuwPl7P
7yD3NXh4sziA3G008S7YnP/PwP7Ql5/5G+zPHCZmsLxB4GMQf0H6kt/g8Lzv
9xfkjv+bEtlA6uU/qTOD3CcQmfcNLK+V8RUkv9/z3mewu4qkwPEVP+vqB7D/
Sq+Daf2pSZD46494sB8AsIs76w==
             "], "LeafValues" -> 
            RawArray["Real32",{0.07143937796354294, 0.10176220536231995`, 
              0.11743184179067612`, 0.11758232861757278`, 0.09830062091350555,
               0.0042885723523795605`, -0.04386485740542412, 
              0.07758335024118423, 0.10466227680444717`, 0.10684458911418915`,
               0.03089662455022335, 
              0.09013617783784866, -0.0013408394297584891`, \
-0.004349036607891321, 0.025798698887228966`, 0.03096695989370346, 
              0.09577933698892593, 0.05116721987724304, 0.07023976743221283, 
              0.04911329969763756, 0.08916125446557999, 0.10509204864501953`, 
              0.054103653877973557`, 0.036347027868032455`, 
              0.11817988008260727`, 
              0.09826090931892395, -0.021530212834477425`, \
-0.11608137935400009`, -0.12045159190893173`, 0.08266983926296234, 
              0.09156091511249542, 0.03222937881946564, 0.08381291478872299, 
              0.06290365755558014, 0.09266122430562973, 0.09960256516933441, 
              0.09168091416358948, 0.0837000161409378, 0.1085314229130745, 
              0.11081583797931671`, 0.04997819662094116, 0.07081340253353119, 
              0.1153775006532669, 0.06413967162370682, 0.08699212968349457, 
              0.09559112042188644, 0.06553968042135239, 0.11592622101306915`, 
              0.060507673770189285`, 
              0.07030303031206131, -0.1914239376783371, -0.3373142182826996, 
              0.08728308230638504, 0.08980853855609894, 
              0.08103462308645248, -0.07215055078268051, 0.05999759957194328, 
              0.1123279556632042, 0.12349776923656464`, 0.12893018126487732`, 
              0.114323191344738, 0.11117015779018402`, 0.09590183198451996}], 
            "Children" -> 
            RawArray["Integer16",{{16, 2}, {8, 3}, {7, 4}, {14, 5}, {15, 
              6}, {-6, -7}, {17, 10}, {19, 9}, {11, 21}, {13, 18}, {22, 
              12}, {-12, -13}, {-8, -14}, {32, 20}, {-5, -16}, {30, 26}, {34, 
              29}, {-11, -19}, {36, 24}, {-15, -21}, {23, 
              33}, {-9, -23}, {-10, -24}, {25, 37}, {-20, -26}, {27, 44}, {28,
               35}, {31, 54}, {-18, -30}, {47, 
              38}, {-17, -32}, {-4, -33}, {-22, -34}, {-3, -35}, {40, 41}, {
              58, 42}, {-25, -38}, {39, 49}, {43, 
              46}, {-28, -41}, {-36, -42}, {-37, -43}, {-31, -44}, {60, 45}, {
              48, 55}, {-40, -47}, {57, 51}, {-45, -49}, {56, 
              50}, {-50, -51}, {52, 
              53}, {-48, -53}, {-52, -54}, {-29, -55}, {-46, -56}, {-39, \
-57}, {61, 59}, {-2, -59}, {-58, -60}, {-27, 62}, {-1, -62}, {-61, -63}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{17, 16, 36, 2, 1, 37, 2, 1, 1, 16, 36, 17, 
              2, 110, 106, 103, 102, 16, 108, 73, 26, 36, 17, 21, 115, 108, 
              16, 29, 102, 16, 17, 93, 108, 28, 36, 40, 15, 1, 27, 26, 13, 17,
               41, 56, 86, 62, 36, 27, 72, 42, 92, 92, 6, 23, 36, 37, 16, 37, 
              53, 52, 7, 27, 47}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////vXyv3Yz+Q1p+a9B1E13e+/wbmt+1+DqLjl0m+
ANH3CzK+gmj7l0W/wPIdMr/2A835wBT93h4k/0zuL0hc/lreHxDNL9oG5v8P
CPoHUnfhL/9xe7B6DTDdoMO5B+SEA0unrrIA2au84idI3YFI/ysg+QMboy+C
6AcbvzE5AOX9z68Dm7ff4t5/kLqE74d/g+x9r1cNdtf6R6fA7uc3rvoHdrc/
2wewO9PugOX3i24Fuzs/4BmYfp99aTNYPu/hVRDtz6RwFuy/v9Jg8y/83PEJ
ZL79L9VX4HB5J/sGRJ9fo3cP7O/GkLsg+fm/IsHhdX7rA4YDQLr/8VKwff37
N14Eu7O6+QPIHwl3dKaD/aXL/QJMZ7JMANEB/A7fQebIh1t+BOmb3377Mtgd
DdkXwO5O0vkJplO9PoDM2+Bj+xakTyBq2lewvtgt4PhbP0/xI0hewEoeHH4T
DIVYQeHGP6sT7B5+Hc234HD5w/51PwBL8jhU
             "], "LeafValues" -> 
            RawArray["Real32",{0.11276733875274658`, 0.04753551259636879, 
              0.12352537363767624`, 0.10581885278224945`, 0.08009963482618332,
               0.04043848067522049, -0.036296017467975616`, 
              0.0011997304391115904`, 0.006052377633750439, 
              0.04125005751848221, 0.047446876764297485`, 0.02708706259727478,
               0.029183225706219673`, 0.05980896204710007, 
              0.09744347631931305, 0.0777532160282135, 0.1188560351729393, 
              0.10271366685628891`, 0.015074263326823711`, 0.1001451388001442,
               0.05084444582462311, 0.07435772567987442, 0.07350179553031921, 
              0.0917607769370079, 0.06465870141983032, 0.05986291915178299, 
              0.08983563631772995, 0.1093648225069046, 0.06233133003115654, 
              0.08759260922670364, 0.059687089174985886`, 0.05264321342110634,
               0.10712812840938568`, 0.08549739420413971, 
              0.10704755783081055`, 0.10378741472959518`, 0.08917839825153351,
               0.10490738600492477`, 0.027794277295470238`, 
              0.05823430418968201, 0.09759894013404846, 0.07236629724502563, 
              0.09563564509153366, 0.10961511731147766`, 
              0.11747026443481445`, -0.01589159667491913, 0.06602628529071808,
               0.08993039280176163, 0.06946659088134766, 0.08503563702106476, 
              0.12895207107067108`, -0.045624028891325, 0.08133962750434875, 
              0.10746025294065475`, 0.1007305458188057, 0.10077200829982758`, 
              0.01122495997697115, 0.09557680040597916, 0.11666446179151535`, 
              0.1112615317106247, -0.13172005116939545`, 0.10571702569723129`,
               0.12689854204654694`, 0.11660987138748169`}], "Children" -> 
            RawArray["Integer16",{{12, 2}, {10, 3}, {11, 4}, {7, 5}, {8, 
              6}, {-6, -7}, {13, 9}, {-5, -9}, {-8, -10}, {27, 16}, {22, 
              14}, {23, 19}, {-4, -14}, {15, 28}, {-12, -16}, {17, 26}, {18, 
              25}, {-11, -19}, {20, 36}, {21, 29}, {24, 54}, {35, 32}, {42, 
              33}, {-13, -25}, {-18, -26}, {57, 30}, {43, 40}, {-15, -29}, {
              59, 31}, {-27, -31}, {-30, -32}, {-23, -33}, {34, 44}, {39, 
              46}, {-3, -36}, {37, 51}, {38, 41}, {-20, -39}, {-24, -40}, {49,
               48}, {-38, -42}, {60, 55}, {53, 50}, {45, 
              47}, {-34, -46}, {-35, -47}, {-45, -48}, {-41, -49}, {-28, \
-50}, {-44, -51}, {58, 52}, {-52, -53}, {-2, -54}, {-22, -55}, {63, 
              56}, {-56, -57}, {-17, -58}, {-37, -59}, {-21, -60}, {62, 
              61}, {-61, -62}, {-1, -63}, {-43, -64}}], "NominalSplits" -> {},
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{6, 47, 46, 7, 21, 22, 46, 47, 7, 47, 22, 21,
               21, 8, 11, 27, 6, 22, 12, 47, 46, 1, 7, 21, 116, 30, 120, 34, 
              4, 34, 8, 6, 46, 22, 112, 47, 112, 92, 52, 97, 28, 7, 64, 55, 
              21, 36, 80, 17, 11, 22, 25, 16, 67, 2, 90, 113, 2, 67, 6, 21, 
              21, 36}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwA+L////rp6z9uR9I98c2vgDR9R83PQfR+pMmvATR8yMb
voHo/T+XvAXR/GUav0D0e9sXYJr/9Zdf+0HmOci/tgfy/b1dn4DE7/+0fgrW
l1r8B2zOhEVgmv/MYbB5+vatD8Dy8Zx/weo/PgGb18+pBNb/P0XsP1g8Vxws
b28d/h0sf9n3H5hu3/YDZG/AM7ED9kDaIXP3apD9/BL2v0HiDS+eg8UVHLfv
BYurr/kLEleYqjUDxI8/lAE2x367PNge++jnYLr/eewXsL3F2QwHQO7TWAx2
z3mVCZtB+g0ymL6BzA2QEXsCMuf+6gefwe4w1zkL4s/PTnwH9t/1/uNgf686
AfbnfKuezyDaf/1GsLn8y52ugcO76MpHsPmTFW+B7Rc7CQ6f8+XcHyHu+fUK
HB6RR96C3Z+/5yvInvNPb34H8Qs2qtWD/bdKGRJPx7Uh4ajFDQ639WeFwObU
d77/th8AgHJUNw==
             "], "LeafValues" -> 
            RawArray["Real32",{-0.07612413167953491, 0.11956970393657684`, 
              0.122902050614357, 0.10591871291399002`, 0.10208501666784286`, 
              0.010747579857707024`, -0.04552388936281204, 0.0777953490614891,
               0.11144652962684631`, 0.02986285090446472, 0.07779534161090851,
               0.08646469563245773, 0.06119102984666824, 
              
              0.026637019589543343`, -0.0020614664535969496`, \
-0.003550810506567359, -0.005368952639400959, 0.10615618526935577`, 
              0.06160997226834297, 0.023072941228747368`, 
              0.052652522921562195`, 0.05682925134897232, 0.03319217637181282,
               0.05900372192263603, 0.04110158979892731, 
              0.09841187298297882, -0.08826387673616409, 0.09386058896780014, 
              0.04658300802111626, 0.10861749947071075`, 0.04049661010503769, 
              0.08096738904714584, 0.0902491956949234, 0.09845088422298431, 
              0.08029889315366745, 0.10040809959173203`, 0.10402841120958328`,
               0.08786004781723022, 0.092595174908638, 0.07399643957614899, 
              0.09871712327003479, 0.08150965720415115, 0.06222054734826088, 
              0.08382128924131393, 0.1118471771478653, 0.07134425640106201, 
              0.033469058573246, 0.0626903548836708, 0.03352849557995796, 
              0.11021751910448074`, 0.0963621661067009, 0.05419030785560608, 
              0.11427883058786392`, 0.12824594974517822`, 
              0.13190647959709167`, 0.10302245616912842`, 0.0823151022195816, 
              0.12900634109973907`, 0.12287022918462753`, 0.09169306606054306,
               0.11226532608270645`, 0.12002050131559372`, 
              0.12223582714796066`}], "Children" -> 
            RawArray["Integer16",{{17, 2}, {8, 3}, {7, 4}, {9, 5}, {13, 
              6}, {-6, -7}, {21, 10}, {20, 11}, {23, 16}, {14, 22}, {18, 
              12}, {24, 15}, {-5, -14}, {-8, -15}, {-13, -16}, {-10, -17}, {
              32, 26}, {34, 19}, {-19, -20}, {36, 29}, {33, 
              25}, {-11, -23}, {-4, -24}, {-12, -25}, {-22, -26}, {27, 35}, {
              37, 28}, {30, 38}, {31, 41}, {-28, -31}, {-21, -32}, {46, 
              42}, {-3, -34}, {-9, -35}, {58, 40}, {55, 39}, {47, 
              61}, {-29, -39}, {-37, -40}, {45, 48}, {-30, -42}, {50, 43}, {
              53, 44}, {-44, -45}, {-36, -46}, {49, 
              52}, {-18, -48}, {-41, -49}, {56, 62}, {57, 51}, {-51, -52}, {
              60, 54}, {-43, -54}, {-53, -55}, {-2, -56}, {-1, -57}, {-33, \
-58}, {-27, 59}, {-59, -60}, {-47, -61}, {-38, -62}, {-50, -63}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{31, 12, 11, 32, 21, 22, 12, 11, 12, 32, 31, 
              32, 6, 33, 4, 21, 37, 7, 37, 36, 94, 28, 12, 12, 31, 11, 32, 31,
               89, 27, 65, 35, 4, 33, 38, 94, 23, 60, 12, 17, 3, 11, 80, 2, 
              32, 76, 76, 92, 92, 102, 76, 87, 115, 52, 11, 70, 82, 11, 72, 
              26, 41, 47, 91}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L///+vv3P6234gXX9E9AWIXn/40jMQfZ/l1WcQ/X6v
7Q+wPOcjMN/+I+NvML3K4fd+oDkfZka+sgfp05L4AxKPdzwIlvfvfnsNrN/s
Oljf/w/x/8Dmewb+B9H9Wtx/QfonCAbtBem3jz/4CGxvedhJsH3ej56C5AM+
d1yyB9IF28MvgGiBv76MDkB5fgnh/yD5BvaJ70H637Nt+gvSt3/PE7D59rrh
YPvuH54BtodBbOdrkLr6iX++gvkSG2+CzEt4vH8eSNw/7eZ8sPqTxjtA8gVP
2xaDxO/fqvwKEs8XPMBwAGS+QyaY9o8+fwPsPvknz8H6rQXB7km4t+0TyNwF
lV1XQLSCeMUrEH3g15pvYH+GCu0GqVvwROQDONz0096B3fPzzi8QP97caDtY
3mrqbxD/vHIzOPz6BVuug+j5hrr3QPIKkzc8Asnrm8+CxNOWhA/g8Nw44QpI
/L9NBTg+9rfp/QD750c0rwNI38Znr+wBhlQz9w==
             "], "LeafValues" -> 
            RawArray["Real32",{0.11295285075902939`, 0.09821117669343948, 
              0.12145650386810303`, 0.11634468287229538`, 
              0.10594504326581955`, 0.02972327545285225, -0.03926459699869156,
               0.09159108251333237, 0.08877347409725189, 0.03116200678050518, 
              0.011059530079364777`, 0.11122075468301773`, 
              0.024943267926573753`, 
              0.09214098751544952, -0.0027494600508362055`, \
-0.004719038028270006, 0.035233620554208755`, 0.10924345999956131`, 
              0.06963396072387695, 0.035895101726055145`, 0.01806820183992386,
               0.13785851001739502`, 0.12045888602733612`, 
              0.07020736485719681, 0.05470523610711098, 0.050924528390169144`,
               0.0610191710293293, 0.06934163719415665, 0.08478759974241257, 
              0.013764772564172745`, 0.05191781744360924, 0.05001724138855934,
               0.09773886203765869, 0.09757909178733826, 
              0.08328539878129959, -0.002790563041344285, 
              0.12352411448955536`, -0.06089417263865471, 0.06148141250014305,
               0.10536352545022964`, 0.06046835705637932, 0.08234753459692001,
               0.10047021508216858`, 0.08717085421085358, 
              0.006670201197266579, 0.07880677282810211, 
              0.0037568400148302317`, -0.05930294841527939, 
              0.08329315483570099, 0.11672726273536682`, 0.07596474885940552, 
              0.08725939691066742, 0.11094525456428528`, 0.09624405950307846, 
              0.0830969288945198, 0.11997251212596893`, 0.11846655607223511`, 
              0.07492116093635559, 0.1310119777917862, -0.17762596905231476`, 
              0.07669682055711746, 
              0.11053071916103363`, -0.000436303234891966, 
              0.030935684219002724`}], "Children" -> 
            RawArray["Integer16",{{11, 2}, {7, 3}, {8, 4}, {10, 5}, {16, 
              6}, {-6, -7}, {24, 12}, {26, 9}, {14, 23}, {27, 25}, {28, 21}, {
              18, 13}, {17, 
              15}, {-9, -15}, {-14, -16}, {-5, -17}, {-13, -18}, {19, 
              20}, {-8, -20}, {-19, -21}, {22, 37}, {29, 31}, {-10, -24}, {39,
               32}, {-11, -26}, {42, 33}, {-4, -28}, {50, 35}, {38, 
              30}, {-30, -31}, {54, 41}, {34, 46}, {-27, -34}, {-25, -35}, {
              36, 47}, {40, 53}, {56, 43}, {-12, -39}, {55, 
              48}, {-29, -41}, {-32, -42}, {-3, -43}, {45, 
              44}, {-44, -45}, {-38, -46}, {-33, -47}, {49, 
              51}, {-40, -49}, {-36, -50}, {52, 59}, {-48, -52}, {58, 
              62}, {-37, -54}, {-23, -55}, {-2, -56}, {57, 
              63}, {-22, -58}, {-1, -59}, {61, 
              60}, {-60, -61}, {-51, -62}, {-53, -63}, {-57, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{27, 27, 17, 16, 21, 22, 17, 16, 21, 26, 17, 
              22, 21, 27, 6, 16, 41, 26, 27, 22, 17, 16, 11, 117, 94, 16, 27, 
              27, 94, 54, 6, 27, 15, 101, 26, 109, 26, 77, 26, 46, 17, 104, 
              36, 31, 116, 16, 42, 91, 67, 47, 27, 7, 42, 26, 72, 16, 61, 48, 
              31, 36, 18, 56}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwA+L////rszn/3A/kJ8RPfW8P5Pufsnm2H0jv3yL3AkTb
Jx1+C6Ln831+CqLzA579Asufs/4N5jvsAvPvy316BDKnwCjtJdgcb9cnIPH+
eNNbILq+vO8vmP5hD9ZXr7ziJ1j/K1Uw/7zp1d8g/QpF5r9A+u9/fAI2t38a
73+wusXHwfr5lxl/B6mb0F663R5ICwRxHAWrfyYHltdf/uU/2D9/77M4gMSz
9zAcALnH+uQfsL1pO/6C5A9UHT8A0levYAyWr1fL/Qb2Z3v2P5C8g2PIe5D5
C9Z8+gBSd77Z5jFInOET31+wvXu6P4PFtz4A679fMP0rSH98T8ZDcLhtNrwD
ov3/q34G6bvw1nYCSP1+e78PYPd9mP4ZZA7DrlnPQOLr7Y9+ALu/9hXYvPjJ
b76C1DV0fH0OUlfw2uQaiDbYmHATRCvc9loAogM8Z18C0R9KTn0CmaOvdvUL
2J9stj9A+j8Ict0Gi19oubkfADsvMFs=
             "], "LeafValues" -> 
            RawArray["Real32",{0.08175243437290192, 0.12448960542678833`, 
              0.11796696484088898`, 0.1191801130771637, 
              0.07495840638875961, -0.0005167729104869068, \
-0.04873785376548767, 0.08569047600030899, -0.004217018838971853, 
              0.0007293439120985568, 0.12424228340387344`, 
              0.036014117300510406`, 
              0.034294068813323975`, -0.00673810625448823, 
              0.037394095212221146`, 0.10591354221105576`, 
              0.0818178802728653, -0.001573934336192906, 0.08345981687307358, 
              0.0606478676199913, 0.03260207548737526, 0.07365351915359497, 
              0.07250554114580154, 0.03244434669613838, 0.09605678170919418, 
              0.10592886060476303`, 0.04862632229924202, 0.09390254318714142, 
              0.08578170835971832, 0.08022027462720871, 
              0.024624038487672806`, -0.5554416179656982, 
              0.048449791967868805`, 0.06852559745311737, 0.04890162870287895,
               0.09940578043460846, 0.062322333455085754`, 
              0.09010341018438339, -0.13223502039909363`, 0.06591355800628662,
               0.0990469828248024, 0.10338075459003448`, 0.09843377768993378, 
              0.06850052624940872, 0.06070045754313469, 0.11031307280063629`, 
              0.007291476707905531, 0.09600134938955307, 0.09764543175697327, 
              0.07761470973491669, 0.10612303763628006`, 0.106820248067379, 
              0.12786340713500977`, 0.07523278146982193, 0.09729355573654175, 
              0.08069343119859695, -0.2056470811367035, 0.04272058978676796, 
              0.09708436578512192, 0.1112043559551239, 0.11603900045156479`, 
              0.11735330522060394`, 0.12038528919219971`}], "Children" -> 
            RawArray["Integer16",{{14, 2}, {3, 10}, {7, 4}, {8, 5}, {9, 
              6}, {-6, -7}, {21, 12}, {22, 11}, {-5, -10}, {18, 
              15}, {-9, -12}, {20, 13}, {-13, -14}, {27, 24}, {31, 16}, {26, 
              17}, {-17, -18}, {35, 19}, {23, 28}, {-8, -21}, {41, 
              32}, {-4, -23}, {-19, -24}, {25, 34}, {29, 42}, {-16, -27}, {48,
               37}, {-20, -29}, {60, 30}, {-30, -31}, {54, 
              33}, {-22, -33}, {-32, -34}, {55, 39}, {58, 36}, {-36, -37}, {
              38, 45}, {43, -39}, {40, 47}, {-35, -41}, {-2, -42}, {57, 
              44}, {-28, -44}, {-43, -45}, {46, 49}, {-38, -47}, {-40, -48}, {
              50, 51}, {-46, -50}, {59, 52}, {62, 
              53}, {-51, -53}, {-52, -54}, {-11, -55}, {61, 
              56}, {-56, -57}, {-26, -58}, {-3, -59}, {-1, -60}, {-15, -61}, \
{-25, -62}, {-49, -63}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
            "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{6, 6, 26, 26, 16, 16, 26, 27, 7, 17, 27, 6, 
              6, 27, 27, 47, 26, 26, 41, 42, 7, 7, 80, 69, 27, 6, 46, 108, 90,
               112, 6, 106, 62, 6, 27, 2, 7, 7, 12, 27, 41, 11, 30, 112, 36, 
              6, 48, 17, 64, 36, 11, 16, 115, 6, 102, 113, 87, 16, 22, 31, 78,
               72, 36}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L////711n+2A/kCzR8eG8PpB9sm/7ZHij+3urUM5C4
wda0tyC+/cNj7/cD6fpfHT9B4gdS6l6C1Skd+AES93/b8htE789SuQOm4zn/
gtQ9+HfpJ0hd/Junf8D6y/v+guj7uRD18bI7weoS9qowOgD5+go7wOL+bf7/
QOINC/MmgPT3X/YF8w9IPdwI4u9fWLYPpC5/thnY3P3HtX+BaPs1jmD9+YK6
X8D2Rdj8B8sHl4Dp+EMZ/8D8ZdFfQOYFzJ/zCeTvDdvrWMH2L/8CVjc/lvMb
SJ5BVfIPyD7956kMB4A0v3zepf0wdaBwk1tyCSQ/v8n8KVj8ivd5EN3vWHcM
RL9fs/UBsvvOG0uA6fiW8Ndge7IT34Fpq57PYPcWXfkIouWP7f8Kdl8P22OQ
+f/NpcDu6q+IBcuff3rzO4jmX8UGNkeeuewDiP5/zxBs3v+FYTfA9MfVYHfL
l8wHhwc/Z/z3/QDQQlQZ
             "], "LeafValues" -> 
            RawArray["Real32",{-0.0770706981420517, 0.10983279347419739`, 
              0.1036640852689743, 0.1171574518084526, 0.013760444708168507`, 
              0.0917879119515419, -0.03697735816240311, -0.002159677678719163,
               0.0357314832508564, 0.11380205303430557`, 0.01428158301860094, 
              0.07079752534627914, 0.10557428747415543`, 0.09701602160930634, 
              0.038539644330739975`, 0.07745935767889023, 0.01089711207896471,
               0.05754436179995537, 0.07242125272750854, 0.09664475917816162, 
              0.0037371821235865355`, 0.08304009586572647, 
              0.0953742191195488, -0.05072524771094322, 0.10917197167873383`, 
              0.050890885293483734`, 0.08795665204524994, 
              0.008924704045057297, 0.05849684402346611, 
              0.012239580042660236`, 0.043249063193798065`, 
              0.09425056725740433, 0.08450593054294586, -0.06224105879664421, 
              0.10436537861824036`, 0.07027442008256912, 0.05827769637107849, 
              0.08653707802295685, 0.10109713673591614`, 0.03496895357966423, 
              0.09347616136074066, 0.052782297134399414`, 0.07893000543117523,
               0.11055514961481094`, 0.04611518606543541, 0.06612899154424667,
               0.10876830667257309`, 0.0614425390958786, 0.10691292583942413`,
               0.021216981112957, 0.11086543649435043`, 0.10847461968660355`, 
              0.10020861029624939`, 0.07895425707101822, 0.09755872935056686, 
              0.12052074074745178`, 0.07766269892454147, 0.11523210257291794`,
               0.12958163022994995`, 0.12373247742652893`, 
              0.08252222090959549, 0.12064904719591141`, 0.13248321413993835`,
               0.11955128610134125`}], "Children" -> 
            RawArray["Integer16",{{12, 2}, {3, 9}, {4, 11}, {7, 5}, {6, 
              10}, {-5, -7}, {17, 8}, {-8, -9}, {22, 13}, {-6, -11}, {14, 
              19}, {31, 23}, {15, 21}, {40, 18}, {35, 
              16}, {-16, -17}, {-2, -18}, {-15, -19}, {48, 20}, {-20, -21}, {
              25, 27}, {38, 34}, {24, 32}, {26, 28}, {-14, -26}, {30, 
              29}, {-22, -28}, {42, 33}, {-27, -30}, {-13, -31}, {50, 43}, {
              46, 37}, {-29, -34}, {36, 60}, {-10, -36}, {-23, -37}, {39, 
              41}, {59, 53}, {-33, -40}, {-4, -41}, {-38, -42}, {-25, -43}, {
              44, 49}, {45, 57}, {-32, -46}, {61, 
              47}, {-47, -48}, {-12, -49}, {62, 52}, {51, 54}, {56, 
              63}, {-50, -53}, {-39, -54}, {58, 
              55}, {-55, -56}, {-1, -57}, {-45, -58}, {-51, -59}, {-3, -60}, \
{-35, -61}, {-24, -62}, {-44, -63}, {-52, -64}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{2, 36, 37, 1, 31, 32, 37, 36, 36, 37, 14, 
              43, 31, 1, 31, 2, 36, 99, 37, 5, 29, 36, 1, 95, 65, 84, 119, 2, 
              14, 37, 4, 112, 34, 2, 31, 66, 36, 5, 57, 67, 110, 17, 41, 82, 
              36, 26, 1, 67, 67, 74, 42, 16, 60, 70, 28, 11, 12, 37, 107, 
              97}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwAeL////nM0b/3A+k35t8eg2i/+fPfgKi/We6fQXR9Z8T
voHo+cpq38Hyhb9+gcWjL/zeDzRnw5YTr+yB9IP3rW/sQfK+tf9A8ut74sF0
/tfIP2B9kefA6j+czvoGUlcvqfQfxDfo+/gXpP+AQs0NkHj+BT+wvv3dx96A
5BPCGp6BxP3Pr/sLEj+fnPcPJF5wrPMuSF+DWe5ykPz+6nMMB0D+SCgF6z9v
vwhsX8OJvY/A8qLZDAeA/AsFC7eC7dv6ezpIfP6+9B9g+wTzwfIKhyS+gOQT
uDMfgOTt/0qD3XlhWSKnA0i97r6tYH80X2BwAIWjuM4vkPoNSyuvg2gB5t9v
QPQF1QVg2mHS61tge05/fwqyR76s+ws4/I5l9IPDj81uN0hdwd15vCDzBJ6q
vQOpX++mAw7n/4HF38D+vZ//H2x+Vy0jyB3xCn92g919P+0T2FxH9c/gePr/
GUzXhzSwHAAAuSkaGg==
             "], "LeafValues" -> 
            RawArray["Real32",{-0.022705871611833572`, 0.12352295219898224`, 
              0.11913686990737915`, 0.11752796918153763`, 
              0.10205531120300293`, 
              0.04577838256955147, -0.034927286207675934`, \
-0.007056499365717173, 0.1132403314113617, 0.027504781261086464`, 
              0.10703740268945694`, 
              0.08226727694272995, -0.00003270093657192774, 
              0.025743702426552773`, 0.01962221972644329, 0.03881942480802536,
               0.07103767991065979, 0.06153251603245735, 0.07749240845441818, 
              0.05628056824207306, 0.031690843403339386`, 0.06311307102441788,
               0.05837690830230713, 0.07354459166526794, 0.07435669004917145, 
              0.07118310779333115, 0.0662694200873375, 0.053115662187337875`, 
              0.02434908039867878, 0.09596796333789825, 0.0920259952545166, 
              0.07587087154388428, 0.10147663950920105`, 0.0661601647734642, 
              0.11195407062768936`, 0.11861664801836014`, 
              0.008583158254623413, 0.1042436957359314, -0.34347987174987793`,
               0.11284512281417847`, 0.06711640954017639, 
              0.11055179685354233`, 0.07564786076545715, 0.10333026945590973`,
               0.01887129433453083, 0.11081380397081375`, 0.07872255146503448,
               0.10827817767858505`, -0.19200439751148224`, 
              0.06715492904186249, -0.19231300055980682`, -0.2874450981616974,
               0.10501384735107422`, 0.0872100442647934, 0.09317364543676376, 
              0.07155751436948776, 0.059677500277757645`, 
              0.10730064660310745`, 0.12326069176197052`, 
              0.11059638857841492`, 0.10562017560005188`}], "Children" -> 
            RawArray["Integer16",{{16, 2}, {8, 3}, {7, 4}, {14, 5}, {13, 
              6}, {-6, -7}, {19, 9}, {22, 10}, {15, 17}, {11, 20}, {26, 
              12}, {-12, -13}, {-5, -14}, {23, 18}, {-8, -16}, {34, 
              24}, {-10, -18}, {-15, -19}, {30, 29}, {33, 21}, {-21, -22}, {
              37, 31}, {-4, -24}, {25, 38}, {27, 35}, {-9, -27}, {47, 
              28}, {-28, -29}, {-20, -30}, {-3, -31}, {32, 
              59}, {-23, -33}, {-11, -34}, {50, 41}, {36, 42}, {-26, -37}, {
              54, 40}, {39, 43}, {44, 53}, {-38, -41}, {45, 
              48}, {-36, -43}, {-39, -44}, {-25, -45}, {55, 
              46}, {-46, -47}, {-17, -48}, {56, 49}, {-49, -50}, {57, 51}, {
              52, -52}, {-51, -53}, {-40, -54}, {-2, -55}, {-35, -56}, {-42, \
-57}, {60, 58}, {-58, -59}, {-32, -60}, {-1, -61}}], "NominalSplits" -> {}, 
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
            0|>], 
          
          MachineLearning`DecisionTree[<|
           "FeatureIndices" -> 
            RawArray["Integer16",{42, 42, 22, 46, 2, 2, 2, 42, 41, 46, 41, 22,
               11, 42, 43, 41, 1, 2, 64, 12, 22, 32, 42, 41, 22, 118, 20, 73, 
              64, 78, 34, 46, 77, 42, 89, 115, 48, 1, 11, 81, 52, 47, 75, 74, 
              1, 26, 110, 4, 16, 7, 42, 76, 25, 9, 26, 11, 1, 22, 2, 47, 92, 
              50, 26}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGCwB+L///+/r2H9th/ID9BZ9NEeyL//8cmv/UB6fdyO7yBa
v233c5B8Q+bSdyD5/N3sv0Hi89Nf/AGr413xA0TfzxX/C1K3QXn9bpC6+hTX
fyDxeokLv0HiCs7Bv0Di8oZ/poH5R6Z9BvH1N5mCzfsfEARWrz/vFsRcDZ09
IHULBEwegtSd19Y6ALb3TQbDASBtH7PkL4jvPzWL4QDI/Qr3p4PttftzC6Rv
wp7Qn/Yg/aqMH0C0AeuPlyD6wLLbD0Dq7LfL/we776ca2H7/Nn+w/flZ/OfA
4s7++0A0v+I5sH3nk/PA8v2JMf9A5jusXH4EZJ7AyY+nQPQGNe7nIPqDIeN3
EF1g9hZMJ/BXvwbz53AcBdEBAaUvQfbz71f/CjLPvlUJbJ9+7ZlvYH+ffwT2
T8LPPk4HUPzsOfAYHP7zzZhAfP4tmh9A/II/Lv9B5l24dR/sT4aZKuDwPf+x
FGyO/JqOdyD6fHrPbnC4KYWA3R0w3/unPQAvdyLU
             "], "LeafValues" -> 
            RawArray["Real32",{0.10937177389860153`, 0.08598805963993073, 
              0.0889299064874649, 0.12320556491613388`, 
              0.07521025836467743, -0.029810698702931404`, 
              0.018431805074214935`, 0.008037198334932327, 
              0.10089166462421417`, 0.11832986772060394`, 0.03115796111524105,
               0.10526306927204132`, 0.030174413695931435`, 
              0.024640368297696114`, 0.05020071193575859, 
              0.07063634693622589, -0.0190605316311121, 
              0.09301896393299103, -0.010516960173845291`, 
              0.06138601526618004, 0.001121606444939971, 0.0542120486497879, 
              0.018668049946427345`, 0.10698698461055756`, 
              0.059452664107084274`, 0.07930779457092285, 0.08369826525449753,
               0.0632225051522255, 0.019570492208003998`, 0.08879254758358002,
               0.10797996819019318`, 0.09502704441547394, 0.09472066164016724,
               0.0497245155274868, 0.1004241555929184, 
              0.10689334571361542`, -0.012043812312185764`, 
              0.050130102783441544`, 0.05239608511328697, 0.08551588654518127,
               0.044860176742076874`, 0.05489173159003258, 0.1047452762722969,
               0.03270164877176285, 0.024662841111421585`, 
              0.08279387652873993, 0.08573290705680847, 0.06698857247829437, 
              0.12379370629787445`, 0.10752172768115997`, 0.09118104726076126,
               0.11150556057691574`, 
              0.10609318315982819`, -0.25037631392478943`, \
-0.018625404685735703`, 0.11885388940572739`, 0.046034105122089386`, 
              0.08605090528726578, 0.023233182728290558`, 
              0.10958044975996017`, 0.12472809851169586`, 
              0.11201648414134979`, 0.10790036618709564`, 
              0.08086998760700226}], "Children" -> 
            RawArray["Integer16",{{8, 2}, {3, 9}, {12, 4}, {10, 5}, {7, 
              6}, {-6, -7}, {-5, -8}, {23, 16}, {24, 11}, {32, 15}, {13, 
              17}, {25, 26}, {39, 14}, {-14, -15}, {-11, -16}, {19, 28}, {38, 
              18}, {-18, -19}, {36, 20}, {22, 21}, {-21, -22}, {-20, -23}, {
              51, 34}, {55, 30}, {48, 35}, {27, 44}, {-13, -28}, {29, 49}, {
              33, 40}, {31, 54}, {-25, -32}, {-4, -33}, {-17, -34}, {43, 
              41}, {-26, -36}, {37, 
              62}, {-9, -38}, {-12, -39}, {-10, -40}, {-30, -41}, {47, 
              42}, {-42, -43}, {46, 
              45}, {-27, -45}, {-44, -46}, {-24, -47}, {-35, -48}, {-2, -49}, \
{50, 58}, {-29, -51}, {59, 52}, {57, 53}, {-53, -54}, {-31, -55}, {61, 
              56}, {-56, -57}, {-52, -58}, {-50, -59}, {63, 
              60}, {-60, -61}, {-3, -62}, {-37, -63}, {-1, -64}}], 
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
            "NominalNodeNumber" -> 0|>]}, "ClassNumber" -> 2, 
        "IterationsNumber" -> 50, "Processor" -> 
        MachineLearning`MLProcessor[
         "Sequence", <|
          "Input" -> <|
            "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
           "Output" -> <|
            "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
           "Processors" -> {
             MachineLearning`MLProcessor[
             "DensifyNumericalVector", <|
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
               "StructurePreserving" -> True, 
               "Input" -> <|
                "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
               "Version" -> {13., 1}, "ID" -> 6203373351504339791, 
               "Output" -> <|
                "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
             MachineLearning`MLProcessor[
             "FirstValues", <|
              "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
               "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
               False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
           "Perfect", "StructurePreserving" -> False, "Missing" -> 
           "Allowed"|>], "Calibrator" -> None, "Method" -> 
        "GradientBoostedTrees", "PostProcessor" -> 
        MachineLearning`MLProcessor["Identity"], 
        "Options" -> <|
         "BoostingMethod" -> <|"Value" -> "Gradient", "Options" -> <||>|>, 
          MaxTrainingRounds -> <|"Value" -> 50, "Options" -> <||>|>, 
          "LeavesNumber" -> <|"Value" -> 110, "Options" -> <||>|>, 
          "LearningRate" -> <|"Value" -> 0.1, "Options" -> <||>|>, 
          ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
          "MaxBinNumber" -> <|"Value" -> 255, "Options" -> <||>|>, 
          "ThreadNumber" -> <|"Value" -> 8, "Options" -> <||>|>, 
          "MaxDepth" -> <|"Value" -> 6, "Options" -> <||>|>, 
          "LeafSize" -> <|"Value" -> 15, "Options" -> <||>|>, 
          "FeatureFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
          "BaggingFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
          "BaggingFrequency" -> <|"Value" -> 0, "Options" -> <||>|>, 
          "MinGainToSplit" -> <|"Value" -> 0, "Options" -> <||>|>, 
          "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
          "L2Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
          "LossFunction" -> <|"Value" -> Automatic, "Options" -> <||>|>|>|>, 
      "TrainingInformation" -> <|
       "PanelCell" -> CellObject[648529], "TrainingFunction" -> Classify, 
        "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
        "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
        50.045265`8.150907986766846, "LossName" -> "MeanCrossEntropy", 
        "BestModelInformation" -> 
        Dataset[<|
          "MeanCrossEntropy" -> 
           Around[0.24174118386170979`, 0.0011229461206670806`], "Accuracy" -> 
           Around[0.9204592618040237, 0.000855591472354956], "EvaluationTime" -> 
           0.000010620094005204628`, "TestSize" -> 200000, "ModelMemory" -> 
           214648, "ModelUtility" -> 0.7257664477809836, "TrainingSize" -> 
           800000, "TrainingTime" -> 7.943282347242816, "TrainingMemory" -> 
           3084895448, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
             Around[0.24174118386170979`, 0.0007940428168308197]}, 
           "AccuracyHistory" -> {
             Around[0.9204592618040237, 0.0006049945320275718]}, 
           "Configuration" -> {
            "GradientBoostedTrees", "BoostingMethod" -> "Gradient", 
             MaxTrainingRounds -> 50, "LeavesNumber" -> 110, "LearningRate" -> 
             0.1, ValidationSet -> Automatic, "MaxBinNumber" -> 255, 
             "ThreadNumber" -> 8, "MaxDepth" -> 6, "LeafSize" -> 15, 
             "FeatureFraction" -> 1, "BaggingFraction" -> 1, 
             "BaggingFrequency" -> 0, "MinGainToSplit" -> 0, 
             "L1Regularization" -> 0, "L2Regularization" -> 0, "LossFunction" -> 
             Automatic}, "FinalTrainingSize" -> 1000000|>, 
          
          TypeSystem`Struct[{
           "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
            "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
            "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
            "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[TypeSystem`AnyType, 1], 
            TypeSystem`Vector[TypeSystem`AnyType, 1], 
            TypeSystem`Vector[TypeSystem`AnyType, 17], 
            TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
        Dataset[<|<|
            "Value" -> "GradientBoostedTrees", 
             "Options" -> <|
              "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
               MaxTrainingRounds -> <|"Value" -> 50|>, 
               "LeavesNumber" -> <|"Value" -> 110|>, 
               "LearningRate" -> <|"Value" -> 0.1|>, 
               ValidationSet -> <|"Value" -> Automatic|>, 
               "MaxBinNumber" -> <|"Value" -> 255|>, 
               "ThreadNumber" -> <|"Value" -> 8|>, 
               "MaxDepth" -> <|"Value" -> 6|>, 
               "LeafSize" -> <|"Value" -> 15|>, 
               "FeatureFraction" -> <|"Value" -> 1|>, 
               "BaggingFraction" -> <|"Value" -> 1|>, 
               "BaggingFrequency" -> <|"Value" -> 0|>, 
               "MinGainToSplit" -> <|"Value" -> 0|>, 
               "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 0|>, 
               "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.26886080142030516`, 0.01836220199996625], "Accuracy" -> 
                Around[0.8997997055881396, 0.013353908708581138`], 
                "EvaluationTime" -> 0.000048765938969503135`, "TestSize" -> 
                1000, "ModelMemory" -> 153176, "ModelUtility" -> 
                0.6068092535475524, "TrainingSize" -> 1500, "TrainingTime" -> 
                0.19952623149688792`, "TrainingMemory" -> 5859528, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.26886080142030516`, 0.01298403755169332]}, 
                "AccuracyHistory" -> {
                  Around[0.8997997055881396, 0.009442639403183814]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.2548775641985006, 0.011287063035853043`], "Accuracy" -> 
                Around[0.9154719897129531, 0.008165496983541139], 
                "EvaluationTime" -> 0.000027987643110770405`, "TestSize" -> 
                2300, "ModelMemory" -> 195704, "ModelUtility" -> 
                0.6649637698061103, "TrainingSize" -> 7000, "TrainingTime" -> 
                0.25118864315095796`, "TrainingMemory" -> 27106392, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.2548775641985006, 0.007981158812331706]}, 
                "AccuracyHistory" -> {
                  Around[0.9154719897129531, 0.005773878288820237]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.24671564488919037`, 0.005790351728592278], 
                "Accuracy" -> 
                Around[0.9187947755521222, 0.004338837916830033], 
                "EvaluationTime" -> 0.000016650550509648482`, "TestSize" -> 
                7900, "ModelMemory" -> 208696, "ModelUtility" -> 
                0.7016440135693011, "TrainingSize" -> 30000, "TrainingTime" -> 
                0.5011872336272722, "TrainingMemory" -> 115741760, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.24671564488919037`, 0.0040943969727428465`]}, 
                "AccuracyHistory" -> {
                  Around[0.9187947755521222, 0.0030680217134598296`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.24276617383549373`, 0.0023499080345098905`], 
                "Accuracy" -> Around[0.9201764159288329, 0.00178040257454794],
                 "EvaluationTime" -> 0.000011201359937025653`, "TestSize" -> 
                46300, "ModelMemory" -> 212856, "ModelUtility" -> 
                0.7205301339276494, "TrainingSize" -> 150000, "TrainingTime" -> 
                1.9952623149688797`, "TrainingMemory" -> 578467192, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.24276617383549373`, 0.001661635906366695]}, 
                "AccuracyHistory" -> {
                  Around[0.9201764159288329, 0.001258934733704836]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.24174118386170979`, 0.0011229461206670806`], 
                "Accuracy" -> 
                Around[0.9204592618040237, 0.000855591472354956], 
                "EvaluationTime" -> 0.000010620094005204628`, "TestSize" -> 
                200000, "ModelMemory" -> 214648, "ModelUtility" -> 
                0.7257664477809836, "TrainingSize" -> 800000, "TrainingTime" -> 
                7.943282347242816, "TrainingMemory" -> 3084895448, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.24174118386170979`, 0.0007940428168308197]}, 
                "AccuracyHistory" -> {
                  Around[0.9204592618040237, 0.0006049945320275718]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 0.000010620094005204628`, 
               "MeanCrossEntropy" -> 
               Around[0.24174118386170979`, 0.0011229461206670806`], 
               "ModelMemory" -> 214648, "TrainingMemory" -> 3084895448, 
               "TrainingTime" -> 10.128629165550409`|>, "Index" -> 1|>, <|
            "Value" -> "DecisionTree", 
             "Options" -> <|
              "DistributionSmoothing" -> <|"Value" -> 1|>, 
               "FeatureFraction" -> <|"Value" -> 1|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.7253484247778944, 0.01126078217629874], "Accuracy" -> 
                Around[0.7771983739957536, 0.003293030637723375], 
                "EvaluationTime" -> 6.35504823923929*^-6, "TestSize" -> 31900,
                 "ModelMemory" -> 10088, 
                "ModelUtility" -> -0.3751656968635608, "TrainingSize" -> 1500,
                 "TrainingTime" -> 0.15848931924611134`, "TrainingMemory" -> 
                4429744, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.7253484247778944, 0.007962575438325447]}, 
                "AccuracyHistory" -> {
                  Around[0.7771983739957536, 0.0023285242945892595`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.5847788515062571, 0.006286457551660663], "Accuracy" -> 
                Around[0.8060199917559449, 0.0019396057212169545`], 
                "EvaluationTime" -> 6.262421981295052*^-6, "TestSize" -> 
                83100, "ModelMemory" -> 21864, 
                "ModelUtility" -> -0.1587962874032388, "TrainingSize" -> 7000,
                 "TrainingTime" -> 1.2589254117941673`, "TrainingMemory" -> 
                20856792, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.5847788515062571, 0.0044451967644206355`]}, 
                "AccuracyHistory" -> {
                  Around[0.8060199917559449, 0.0013715083583007326`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.4479259905780317, 0.0033539711516949733`], 
                "Accuracy" -> 
                Around[0.8540039361149823, 0.001137455627628534], 
                "EvaluationTime" -> 6.576148760634903*^-6, "TestSize" -> 
                192700, "ModelMemory" -> 43368, "ModelUtility" -> 
                0.10845821917341958`, "TrainingSize" -> 30000, "TrainingTime" -> 
                6.309573444801933, "TrainingMemory" -> 88330088, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.4479259905780317, 0.00237161574526757]}, 
                "AccuracyHistory" -> {
                  Around[0.8540039361149823, 0.0008043025875949369]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 6.576148760634903*^-6, "MeanCrossEntropy" -> 
               Around[0.4479259905780317, 0.0033539711516949733`], 
               "ModelMemory" -> 43368, "TrainingMemory" -> 88330088, 
               "TrainingTime" -> 210.47760414597724`|>, "Index" -> 2|>, <|
            "Value" -> "RandomForest", 
             "Options" -> <|
              "FeatureFraction" -> <|"Value" -> Automatic|>, 
               "LeafSize" -> <|"Value" -> Automatic|>, 
               "TreeNumber" -> <|"Value" -> Automatic|>, 
               "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
               "Implementation" -> <|"Value" -> Automatic|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.4547332860447117, 0.00212034461059775], "Accuracy" -> 
                Around[0.8495755980284417, 0.0027609755307201294`], 
                "EvaluationTime" -> 0.000010217347939666637`, "TestSize" -> 
                33500, "ModelMemory" -> 150840, "ModelUtility" -> 
                0.09392696478131723, "TrainingSize" -> 1500, "TrainingTime" -> 
                0.05011872336272722, "TrainingMemory" -> 3960272, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.4547332860447117, 0.0014993100526060183`]}, 
                "AccuracyHistory" -> {
                  Around[0.8495755980284417, 0.0019523045204623303`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.39776835354960327`, 0.002515707755396556], 
                "Accuracy" -> 
                Around[0.8819759308801182, 0.002998831416010065], 
                "EvaluationTime" -> 0.000014767849558784366`, "TestSize" -> 
                23100, "ModelMemory" -> 350968, "ModelUtility" -> 
                0.22741293529992046`, "TrainingSize" -> 7000, "TrainingTime" -> 
                0.19952623149688792`, "TrainingMemory" -> 17882016, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.39776835354960327`, 0.001778874013324493]}, 
                "AccuracyHistory" -> {
                  Around[0.8819759308801182, 0.0021204940298959734`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.3465459192733958, 0.001590711484877565], "Accuracy" -> 
                Around[0.8996800270260493, 0.001639683000605045], 
                "EvaluationTime" -> 0.000010304311136401668`, "TestSize" -> 
                67100, "ModelMemory" -> 1077112, "ModelUtility" -> 
                0.342974782642528, "TrainingSize" -> 30000, "TrainingTime" -> 
                1., "TrainingMemory" -> 75479296, "ExperimentCount" -> 1, 
                "MeanCrossEntropyHistory" -> {
                  Around[0.3465459192733958, 0.0011248028778682484`]}, 
                "AccuracyHistory" -> {
                  Around[0.8996800270260493, 0.0011594309687241332`]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.30165709803260354`, 0.0008762958571360254], 
                "Accuracy" -> 
                Around[0.9136386554194559, 0.0008234409687567772], 
                "EvaluationTime" -> 0.000012749167877859642`, "TestSize" -> 
                232700, "ModelMemory" -> 4463608, "ModelUtility" -> 
                0.35022964162365855`, "TrainingSize" -> 150000, 
                "TrainingTime" -> 12.589254117941675`, "TrainingMemory" -> 
                373442576, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.30165709803260354`, 0.0006196347429065616]}, 
                "AccuracyHistory" -> {
                  Around[0.9136386554194559, 0.0005822606929147371]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.2699133703001915, 0.0009641630218846897], "Accuracy" -> 
                Around[0.9224954703839984, 0.0008454846069925828], 
                "EvaluationTime" -> 0.000012999904707736746`, "TestSize" -> 
                200000, "ModelMemory" -> 19867848, "ModelUtility" -> 
                0.31264342576361304`, "TrainingSize" -> 800000, 
                "TrainingTime" -> 158.48931924611142`, "TrainingMemory" -> 
                1976003024, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.2699133703001915, 0.0006817662109439777]}, 
                "AccuracyHistory" -> {
                  Around[0.9224954703839984, 0.0005978478989932983]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 0.000012999904707736746`, 
               "MeanCrossEntropy" -> 
               Around[0.2699133703001915, 0.0009641630218846897], 
               "ModelMemory" -> 19867848, "TrainingMemory" -> 1976003024, 
               "TrainingTime" -> 198.161767781002|>, "Index" -> 3|>, <|
            "Value" -> "NaiveBayes", 
             "Options" -> <|
              "SmoothingParameter" -> <|"Value" -> 0.2|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[5.916387939794025, 0.6742511172276436], "Accuracy" -> 
                Around[0.7917622517760953, 0.017215118332756737`], 
                "EvaluationTime" -> 0.0003981071705534971, "TestSize" -> 1100,
                 "ModelMemory" -> 532856, 
                "ModelUtility" -> -2.4934928865351838`, "TrainingSize" -> 
                1500, "TrainingTime" -> 0.5011872336272722, "TrainingMemory" -> 
                22103432, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[5.916387939794025, 0.4767675372142726]}, 
                "AccuracyHistory" -> {
                  Around[0.7917622517760953, 0.01217292691202114]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 0.0003981071705534971, "MeanCrossEntropy" -> 
               Around[5.916387939794025, 0.6742511172276436], "ModelMemory" -> 
               532856, "TrainingMemory" -> 22103432, "TrainingTime" -> 
               334.6260096518088|>, "Index" -> 4|>, <|
            "Value" -> "NearestNeighbors", 
             "Options" -> <|
              "NeighborsNumber" -> <|"Value" -> Automatic|>, 
               "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
               "NearestMethod" -> <|"Value" -> Automatic|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.660068709852762, 0.005510633561380595], "Accuracy" -> 
                Around[0.6833035443746754, 0.0029097882308948193`], 
                "EvaluationTime" -> 8.36172310498459*^-6, "TestSize" -> 51100,
                 "ModelMemory" -> 1460120, 
                "ModelUtility" -> -0.32893054040880354`, "TrainingSize" -> 
                1500, "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
                10023280, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.660068709852762, 0.003896606359886393]}, 
                "AccuracyHistory" -> {
                  Around[0.6833035443746754, 0.002057530989882534]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.5942062444237062, 0.009889797186767978], "Accuracy" -> 
                Around[0.7057740249290566, 0.005383726210858064], 
                "EvaluationTime" -> 0.000029777727320611256`, "TestSize" -> 
                14300, "ModelMemory" -> 6790744, 
                "ModelUtility" -> -0.37151834694215324`, "TrainingSize" -> 
                7000, "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
                31272840, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.5942062444237062, 0.006993142655323278]}, 
                "AccuracyHistory" -> {
                  Around[0.7057740249290566, 0.003806869311749493]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.5400267745873777, 0.013350102446782136`], "Accuracy" -> 
                Around[0.7306724295272236, 0.007886307548905918], 
                "EvaluationTime" -> 0.00014582862813768255`, "TestSize" -> 
                6300, "ModelMemory" -> 29077816, 
                "ModelUtility" -> -0.4241047127703411, "TrainingSize" -> 
                30000, "TrainingTime" -> 0.25118864315095796`, 
                "TrainingMemory" -> 119435080, "ExperimentCount" -> 1, 
                "MeanCrossEntropyHistory" -> {
                  Around[0.5400267745873777, 0.009439947969654769]}, 
                "AccuracyHistory" -> {
                  Around[0.7306724295272236, 0.0055764615463540345`]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 0.00014582862813768255`, "MeanCrossEntropy" -> 
               Around[0.5400267745873777, 0.013350102446782136`], 
               "ModelMemory" -> 29077816, "TrainingMemory" -> 119435080, 
               "TrainingTime" -> 8.423073495061328|>, "Index" -> 5|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 0.0001|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.7603131594051943, 0.000693305377043858], "Accuracy" -> 
                Around[0.5065834569262866, 0.0011140987371671745`], 
                "EvaluationTime" -> 1.0159308716650762`*^-6, "TestSize" -> 
                402700, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.41932613162758914`, "TrainingSize" -> 
                1500, "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 
                5833120, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.7603131594051943, 0.0004902409335408081]}, 
                "AccuracyHistory" -> {
                  Around[0.5065834569262866, 0.0007877867719622781]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.7191076029460542, 0.00029561841807005073`], 
                "Accuracy" -> 
                Around[0.5100418054293553, 0.0009031074355502621], 
                "EvaluationTime" -> 1.0300907467087228`*^-6, "TestSize" -> 
                612700, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.3635065920424133, "TrainingSize" -> 7000,
                 "TrainingTime" -> 0.19952623149688792`, "TrainingMemory" -> 
                27086120, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.7191076029460542, 0.0002090337880609727]}, 
                "AccuracyHistory" -> {
                  Around[0.5100418054293553, 0.0006385933918175832]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.7027084956484511, 0.00013876029820779643`], 
                "Accuracy" -> 
                Around[0.5310555091084489, 0.000719226836566416], 
                "EvaluationTime" -> 1.0687349611497191`*^-6, "TestSize" -> 
                962700, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.3403950147562075, "TrainingSize" -> 
                30000, "TrainingTime" -> 0.5011872336272722, "TrainingMemory" -> 
                87158304, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.7027084956484511, 0.00009811834782220039]}, 
                "AccuracyHistory" -> {
                  Around[0.5310555091084489, 0.0005085701733474615]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 1.0687349611497191`*^-6, "MeanCrossEntropy" -> 
               Around[0.7027084956484511, 0.00013876029820779643`], 
               "ModelMemory" -> 9472, "TrainingMemory" -> 87158304, 
               "TrainingTime" -> 16.769336855357096`|>, "Index" -> 6|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 1.*^6|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.6934388240321626, 0.000016755415459894248`], 
                "Accuracy" -> Around[0.4978491030337949, 0.00128512120905547],
                 "EvaluationTime" -> 1.0475295879602455`*^-6, "TestSize" -> 
                302700, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.3270812294379013, "TrainingSize" -> 7000,
                 "TrainingTime" -> 0.1, "TrainingMemory" -> 27086240, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.6934388240321626, 0.000011847867893289137`]}, 
                "AccuracyHistory" -> {
                  Around[0.4978491030337949, 0.0009087179215697775]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.6934657346149357, 0.000012907774637485064`], 
                "Accuracy" -> 
                Around[0.5248912650424649, 0.000887806426305715], 
                "EvaluationTime" -> 1.0164117537977503`*^-6, "TestSize" -> 
                632700, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.32711892622251293`, "TrainingSize" -> 
                30000, "TrainingTime" -> 0.25118864315095796`, 
                "TrainingMemory" -> 87158240, "ExperimentCount" -> 1, 
                "MeanCrossEntropyHistory" -> {
                  Around[0.6934657346149357, 9.127174976193419*^-6]}, 
                "AccuracyHistory" -> {
                  Around[0.5248912650424649, 0.0006277739444217659]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.6931976651313128, 9.327885301656757*^-6], "Accuracy" -> 
                Around[0.5201369001171986, 0.0007662874937709018], 
                "EvaluationTime" -> 1.0094597756498584`*^-6, "TestSize" -> 
                850000, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.3267312552019703, "TrainingSize" -> 
                150000, "TrainingTime" -> 31.622776601683793`, 
                "TrainingMemory" -> 1476587152, "ExperimentCount" -> 1, 
                "MeanCrossEntropyHistory" -> {
                  Around[0.6931976651313128, 6.595810950931817*^-6]}, 
                "AccuracyHistory" -> {
                  Around[0.5201369001171986, 0.000541847083183849]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 1.0094597756498584`*^-6, "MeanCrossEntropy" -> 
               Around[0.6931976651313128, 9.327885301656757*^-6], 
               "ModelMemory" -> 9472, "TrainingMemory" -> 1476587152, 
               "TrainingTime" -> 210.91851067789193`|>, "Index" -> 7|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 0.1|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.7070539350268102, 0.00021306119286474578`], 
                "Accuracy" -> Around[0.516285433400277, 0.000986942884856342],
                 "EvaluationTime" -> 1.0088449087248402`*^-6, "TestSize" -> 
                512700, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.3465805900005714, "TrainingSize" -> 7000,
                 "TrainingTime" -> 0.12589254117941673`, "TrainingMemory" -> 
                27086176, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.7070539350268102, 0.00015065701428235658`]}, 
                "AccuracyHistory" -> {
                  Around[0.516285433400277, 0.0006978740065257334]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.7016166848850197, 0.00013009974430567198`], 
                "Accuracy" -> 
                Around[0.5343138343275485, 0.0007162092281477801], 
                "EvaluationTime" -> 1.0146673632994442`*^-6, "TestSize" -> 
                970000, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.3388376813438674, "TrainingSize" -> 
                30000, "TrainingTime" -> 0.6309573444801932, "TrainingMemory" -> 
                87165896, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.7016166848850197, 0.00009199441142917656]}, 
                "AccuracyHistory" -> {
                  Around[0.5343138343275485, 0.0005064364019716784]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.7102670148377448, 0.0002768613005741423], "Accuracy" -> 
                Around[0.5266866262292659, 0.0011126098563990607`], 
                "EvaluationTime" -> 1.017558443443379*^-6, "TestSize" -> 
                402700, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.35113230767541337`, "TrainingSize" -> 
                1500, "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
                5833120, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.7102670148377448, 0.00019577050308410297`]}, 
                "AccuracyHistory" -> {
                  Around[0.5266866262292659, 0.0007867339742747666]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 1.017558443443379*^-6, "MeanCrossEntropy" -> 
               Around[0.7102670148377448, 0.0002768613005741423], 
               "ModelMemory" -> 9472, "TrainingMemory" -> 5833120, 
               "TrainingTime" -> 33.538374782997565`|>, "Index" -> 8|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 1.*^-6|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.7192502365166814, 0.00033021583487071555`], 
                "Accuracy" -> 
                Around[0.5098120426848854, 0.0010071110243842756`], 
                "EvaluationTime" -> 1.0118923738060607`*^-6, "TestSize" -> 
                492700, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.3637145236492251, "TrainingSize" -> 7000,
                 "TrainingTime" -> 0.12589254117941673`, "TrainingMemory" -> 
                27086016, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.7192502365166814, 0.00023349785609226017`]}, 
                "AccuracyHistory" -> {
                  Around[0.5098120426848854, 0.0007121350347498517]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.7606998777755936, 0.0006959858744050565], "Accuracy" -> 
                Around[0.5065710400351517, 0.0011140994305492604`], 
                "EvaluationTime" -> 1.0146794127482414`*^-6, "TestSize" -> 
                402700, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.4198352446163638, "TrainingSize" -> 1500,
                 "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
                5833056, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.7606998777755936, 0.0004921363314018642]}, 
                "AccuracyHistory" -> {
                  Around[0.5065710400351517, 0.000787787262257453]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 1.0146794127482414`*^-6, "MeanCrossEntropy" -> 
               Around[0.7606998777755936, 0.0006959858744050565], 
               "ModelMemory" -> 9472, "TrainingMemory" -> 5833056, 
               "TrainingTime" -> 33.538374782997565`|>, "Index" -> 9|>, <|
            "Value" -> "LogisticRegression", 
             "Options" -> <|
              "L1Regularization" -> <|"Value" -> 0|>, 
               "L2Regularization" -> <|"Value" -> 10000.|>, 
               "OptimizationMethod" -> <|"Value" -> Automatic|>, 
               MaxIterations -> <|"Value" -> 30|>|>|> -> <|
            "Experiments" -> {<|
               "MeanCrossEntropy" -> 
                Around[0.6970686321160435, 0.00007144431657244213], 
                "Accuracy" -> 
                Around[0.524557818650869, 0.0008949307533103139], 
                "EvaluationTime" -> 1.0240887930814795`*^-6, "TestSize" -> 
                622700, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.3323177464593756, "TrainingSize" -> 7000,
                 "TrainingTime" -> 0.12589254117941673`, "TrainingMemory" -> 
                27086016, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.6970686321160435, 0.000050518760725612264`]}, 
                "AccuracyHistory" -> {
                  Around[0.524557818650869, 0.0006328116043581082]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.6978827409701482, 0.00007455800615593893], 
                "Accuracy" -> 
                Around[0.5121396548477138, 0.0009969330371117696], 
                "EvaluationTime" -> 1.0166954232546365`*^-6, "TestSize" -> 
                502700, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.3334858368184094, "TrainingSize" -> 1500,
                 "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
                5833184, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.6978827409701482, 0.00005272047174461277]}, 
                "AccuracyHistory" -> {
                  Around[0.5121396548477138, 0.0007049381109306322]}|>, <|
               "MeanCrossEntropy" -> 
                Around[0.69731515425367, 0.00008763698270109427], "Accuracy" -> 
                Around[0.5478849529594116, 0.000721067528113761], 
                "EvaluationTime" -> 1.037375374656072*^-6, "TestSize" -> 
                952700, "ModelMemory" -> 9472, 
                "ModelUtility" -> -0.3326759763620183, "TrainingSize" -> 
                30000, "TrainingTime" -> 0.6309573444801932, "TrainingMemory" -> 
                87158240, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[0.69731515425367, 0.00006196870475067191]}, 
                "AccuracyHistory" -> {
                  Around[0.5478849529594116, 0.0005098717388226619]}|>}, 
             "PredictedPerformances" -> <|
              "EvaluationTime" -> 1.037375374656072*^-6, "MeanCrossEntropy" -> 
               Around[0.69731515425367, 0.00008763698270109427], 
               "ModelMemory" -> 9472, "TrainingMemory" -> 87158240, 
               "TrainingTime" -> 21.157804023852528`|>, "Index" -> 10|>|>, 
          TypeSystem`Assoc[
           TypeSystem`Struct[{"Value", "Options"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "DecisionTree", "GradientBoostedTrees", "LogisticRegression", 
               "NaiveBayes", "NearestNeighbors", "RandomForest"]], 
             TypeSystem`Assoc[TypeSystem`AnyType, 
              TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
              TypeSystem`AnyLength]}], 
           
           TypeSystem`Struct[{
            "Experiments", "PredictedPerformances", "Index"}, {
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
                "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime",
                 "TrainingMemory", "ExperimentCount", 
                "MeanCrossEntropyHistory", "AccuracyHistory"}, {
               TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Vector[TypeSystem`AnyType, 1], 
                TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
              TypeSystem`AnyLength], 
             
             TypeSystem`Struct[{
              "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
               "TrainingMemory", "TrainingTime"}, {
               TypeSystem`Atom[Real], TypeSystem`AnyType, 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real]}], 
             TypeSystem`Atom[Integer]}], 10], <||>], "MaxTrainingSize" -> 
        1000000, "PreprocessorEvaluationTime" -> 4.78125*^-6, 
        "PreprocessorMemory" -> 174928, "InputDimension" -> 120, 
        "OutputDimension" -> 1, 
        "BaselineLogProbability" -> -0.6931471805599453, "VariableBudget" -> 
        True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
        False, "NaturalStop" -> True, "AbortStop" -> False, 
        "LastReportingTime" -> 3.912751352686138`16.345057239414984*^9, 
        "RoundPartitioning" -> 
        Dataset[{<|
           "TrainingSizes" -> 1500, "TimeBudgets" -> 21.679700578976593`, 
            "ElapsedTimes" -> 23.352761999999995`, "ExperimentCounts" -> 
            9|>, <|"TrainingSizes" -> 7000, "TimeBudgets" -> 
            30.971000827109435`, "ElapsedTimes" -> 31.437334000000003`, 
            "ExperimentCounts" -> 9|>, <|
           "TrainingSizes" -> 30000, "TimeBudgets" -> 44.2442868958706, 
            "ElapsedTimes" -> 44.399595, "ExperimentCounts" -> 8|>, <|
           "TrainingSizes" -> 150000, "TimeBudgets" -> 63.20612413695804, 
            "ElapsedTimes" -> 59.512787, "ExperimentCounts" -> 3|>, <|
           "TrainingSizes" -> 800000, "TimeBudgets" -> 90.29446305279708, 
            "ElapsedTimes" -> 179.291338, "ExperimentCounts" -> 2|>}, 
          TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
             "ExperimentCounts"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer]}], 5], <||>]|>, "AnomalyDetector" -> 
      None, "Log" -> <|
       "Example" -> 
        MachineLearning`MLDataset[<|
          "f1" -> <|
            "Type" -> "NumericalVector", "Weight" -> 1, 
             "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBOIKIF63OvDWealT9ix7pI02eZ+2t/tQmJAheMreSNbG
NG7PKfsHXU9it58+am+iHMeuVnrafl1e15HcFQcw1G1IyJy3VOS8vd0Mzi/b
756y/9Zttr7J4BhcHcwcmDqbOVuajqictGeJPujdYHccwz6YOqWKm2xiD8/Y
5xWXfHX7fxzDXiZ2lrw7gcfsOcqDSwwzztjfYguKv5RxFsNemDo53Rzlptiz
9heU8293nziNYS9MXWPdOVXlKaftJ2oG5X76fARuHsxdMHV6E61W3r99wv7D
S2lRB8bjGOEBU1d+hvNt2PlT9j8dlqzI/3cSw58wdTc3m7E5bj4Fp3HFx0eP
L09P8h2D07jiQ0poQaBs+wk4jSs+Fvy2Sl9keAJO44qPE1/V6vQKTsFpXPHx
cd+ll40vzsBpXPFRviL3P9vkM3AaV3xwhkw4yeVyAk7jio9+W+37/e+Ow2lc
8bGD7brX47RTcBpXfKDzccUHLv3o6nGFK7p6XPagqwcAP/LEJQ==
              "], "ID" -> 
             6830086986086829909|>|>, <|
          "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
           0, "RawExample" -> False|>], "TrainingTime" -> 407.338673, 
        "MaxTrainingMemory" -> 6809815880, "DataMemory" -> 3024000080, 
        "FunctionMemory" -> 558872, "LanguageVersion" -> {13., 1}, "Date" -> 
        DateObject[{2023, 12, 28, 11, 22, 50.929473`8.45954415779752}, 
          "Instant", "Gregorian", 1.], "ProcessorCount" -> 8, "ProcessorType" -> 
        "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
        "Evaluations" -> {}|>|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.912747771163539*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"1ca37958-988d-4b6b-ad81-25c5ed85f1f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<C5[0.5m].wmlf\>\"", ",", "C5"}], "]"}]], "Input",
 CellChangeTimes->{{3.9126705657646933`*^9, 3.912670591203693*^9}, {
  3.9126876514896383`*^9, 3.912687653785523*^9}, {3.912687786993802*^9, 
  3.912687789190126*^9}, {3.912699254162472*^9, 3.9126992564985037`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"ef0ba4a8-8e28-4c27-afb5-04080dd39074"],

Cell[BoxData["\<\"C5[0.5m].wmlf\"\>"], "Output",
 CellChangeTimes->{3.9127477720647984`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"1b54c582-7536-4afc-a59f-60366a9304fc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1668, 1058},
WindowMargins->{{Automatic, 5}, {1098, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification:>1.25 Inherited,
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"acf0e60d-173a-44d4-867d-46ab69721a2b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 283, 3, 123, "Title",ExpressionUUID->"65ac76f5-25c6-4f17-aa97-728115497743"],
Cell[CellGroupData[{
Cell[888, 29, 280, 4, 86, "Chapter",ExpressionUUID->"eb6fa4e0-8baa-498d-8ade-ef97ebda9bcf"],
Cell[1171, 35, 893, 18, 77, "Text",ExpressionUUID->"f507d0f1-c23a-4d85-9dbf-4b7c8322182a"],
Cell[2067, 55, 6880, 165, 241, "Input",ExpressionUUID->"e9fb14ea-55c8-4eec-94cc-b106261c912a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8984, 225, 400, 6, 86, "Chapter",ExpressionUUID->"5adc79b2-6798-418d-86fa-79b5089e6d82"],
Cell[9387, 233, 505, 11, 44, "Text",ExpressionUUID->"182c81d8-642a-4f5c-be94-fca5d3b43dcf"],
Cell[9895, 246, 383, 6, 44, "Text",ExpressionUUID->"f121f49a-8731-4077-b0d5-568b221b1c77"],
Cell[10281, 254, 691, 18, 57, "Input",ExpressionUUID->"7244d9a3-bd01-4fe6-ade5-1ff5adf32cc4"],
Cell[10975, 274, 382, 6, 44, "Text",ExpressionUUID->"f7513b45-7eab-4518-acad-9af851f6e3d9"],
Cell[11360, 282, 1367, 31, 57, "Input",ExpressionUUID->"34e7bbae-bc9a-42cc-bbf6-fd559f2645f7"],
Cell[12730, 315, 526, 10, 44, "Text",ExpressionUUID->"3d83360b-d129-445d-b2c3-a406218302dc"],
Cell[13259, 327, 634, 15, 37, "Input",ExpressionUUID->"c3e15246-1278-4e4f-baea-1b3a36aca738"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13930, 347, 304, 5, 86, "Chapter",ExpressionUUID->"ef0e3f68-3984-43c9-8a75-df6b73cc97ef"],
Cell[CellGroupData[{
Cell[14259, 356, 551, 10, 44, "Text",ExpressionUUID->"512af435-7c38-4e86-8b16-365e077cfce0",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[14813, 368, 5068, 104, 358, "Input",ExpressionUUID->"645da0a7-efe3-4082-84ec-ce14893ba8c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[19918, 477, 550, 10, 44, "Text",ExpressionUUID->"75f1072f-a6d8-4be5-80c0-dd723d3134f8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[20471, 489, 12883, 281, 618, "Input",ExpressionUUID->"01adfa6d-e8f7-4b53-a575-6c28400937db",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[33357, 772, 762, 15, 44, "Text",ExpressionUUID->"1f250e3b-9562-4da6-94cd-470a4255c8a7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[34122, 789, 1174, 21, 73, "Text",ExpressionUUID->"a971e0a2-278b-45d3-ba6b-47e1c88cb2e5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[35333, 815, 153, 3, 84, "Section",ExpressionUUID->"a288ab7b-1f9c-410f-b866-1281fa486606"],
Cell[CellGroupData[{
Cell[35511, 822, 393, 6, 76, "Subsubsection",ExpressionUUID->"923509e2-8782-4e22-aab2-14e5cb444f14"],
Cell[35907, 830, 490, 7, 44, "Text",ExpressionUUID->"99d592ea-5524-45e8-9368-0dc772c4c629"],
Cell[36400, 839, 306, 7, 37, "Input",ExpressionUUID->"19704266-ee2d-477e-81ba-d394c9037b01"],
Cell[36709, 848, 255, 5, 37, "Input",ExpressionUUID->"f950233b-6e09-4719-9ac6-1dab640c5753"],
Cell[36967, 855, 624, 11, 44, "Text",ExpressionUUID->"61b2e09d-c79c-4167-8805-18c087cc530d"],
Cell[CellGroupData[{
Cell[37616, 870, 548, 12, 37, "Input",ExpressionUUID->"26071371-28fb-4dc1-9d95-db2d366d46a8"],
Cell[38167, 884, 12410, 349, 397, "Output",ExpressionUUID->"dd19790c-3d14-44d7-a16d-5b94fc729c36"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50626, 1239, 298, 5, 76, "Subsubsection",ExpressionUUID->"81b35eb2-e6d0-47b5-af10-fcce8307b604"],
Cell[50927, 1246, 539, 8, 44, "Text",ExpressionUUID->"ef1dc935-3c47-4b64-8637-d5bca766dcf7"],
Cell[51469, 1256, 392, 9, 37, "Input",ExpressionUUID->"d0b2b1f4-acbe-46eb-85ef-16717ec73f13"],
Cell[51864, 1267, 256, 5, 37, "Input",ExpressionUUID->"700a12a3-97c6-4f97-b295-db1fd63004d0"],
Cell[CellGroupData[{
Cell[52145, 1276, 155, 1, 37, "Input",ExpressionUUID->"fe2a2e46-dbc6-40af-a113-9c5dd5306d39"],
Cell[52303, 1279, 294, 4, 42, "Output",ExpressionUUID->"70ae0d2f-3710-43e1-b7ff-b36fb6c92401"]
}, Open  ]],
Cell[52612, 1286, 626, 11, 44, "Text",ExpressionUUID->"6c1e73ac-c8d3-476e-9a73-bbf22e27f8ec"],
Cell[CellGroupData[{
Cell[53263, 1301, 474, 11, 37, "Input",ExpressionUUID->"e441b2cb-80b5-4ea1-932a-7652dbb0ef3e"],
Cell[53740, 1314, 13060, 367, 397, "Output",ExpressionUUID->"47cc7868-221f-4e59-8754-424a1de7e91b"]
}, Open  ]],
Cell[66815, 1684, 427, 6, 44, "Text",ExpressionUUID->"74d4219f-6473-4d8d-af8d-75474086826e"],
Cell[CellGroupData[{
Cell[67267, 1694, 794, 21, 37, "Input",ExpressionUUID->"55076b6d-c631-43bf-be7a-aa8743dbb098"],
Cell[68064, 1717, 652, 11, 42, "Output",ExpressionUUID->"12bb9d51-e9b3-4a03-a325-ebfe8b4660db"]
}, Open  ]],
Cell[68731, 1731, 421, 6, 44, "Text",ExpressionUUID->"51c7939d-f4b6-416e-a59d-b56d49ec4b10"],
Cell[CellGroupData[{
Cell[69177, 1741, 329, 6, 37, "Input",ExpressionUUID->"130b422f-2a8f-4f8a-954a-1c60a75df238"],
Cell[69509, 1749, 607, 11, 42, "Output",ExpressionUUID->"c851c392-f542-4b8f-994b-dd1ea611fd7d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70165, 1766, 397, 6, 76, "Subsubsection",ExpressionUUID->"45384335-5a50-449f-ba9b-40e09c26afe4"],
Cell[70565, 1774, 538, 8, 44, "Text",ExpressionUUID->"93ba1740-3ec4-4870-94dd-59aef0b75366"],
Cell[71106, 1784, 305, 7, 37, "Input",ExpressionUUID->"8248c4f0-4a05-4279-addf-97a5e602170c"],
Cell[71414, 1793, 327, 6, 37, "Input",ExpressionUUID->"c8088377-c86e-4989-9d09-dbe4f3cc50c8"],
Cell[71744, 1801, 353, 5, 44, "Text",ExpressionUUID->"56615bbc-7839-4e07-9313-65a18a68a0a6"],
Cell[CellGroupData[{
Cell[72122, 1810, 605, 14, 37, "Input",ExpressionUUID->"ca5ddba2-f9e5-4ca4-9374-5ce7e3f87bdb"],
Cell[72730, 1826, 6401, 187, 83, "Output",ExpressionUUID->"b9bbb7de-e680-43cb-906a-953fc869fca4"]
}, Open  ]],
Cell[79146, 2016, 256, 4, 44, "Text",ExpressionUUID->"1e993f96-fc6a-419e-b659-81b1a87e6c87"],
Cell[CellGroupData[{
Cell[79427, 2024, 289, 6, 37, "Input",ExpressionUUID->"113ab63c-939f-4486-9c04-a2e8b07da7e7"],
Cell[79719, 2032, 1458, 29, 251, "Output",ExpressionUUID->"d8e15e2d-98ac-465c-9779-e31741a5f4b4"]
}, Open  ]],
Cell[81192, 2064, 311, 5, 44, "Text",ExpressionUUID->"75b7caef-007d-4ae4-a329-64fb0c15291d"],
Cell[CellGroupData[{
Cell[81528, 2073, 627, 14, 37, "Input",ExpressionUUID->"b053a993-be12-49af-a314-aa3aaf4939e1"],
Cell[82158, 2089, 8324, 212, 231, "Output",ExpressionUUID->"addb6d0d-a5bd-4f10-832c-be5bbc9be88d"]
}, Open  ]],
Cell[90497, 2304, 307, 5, 44, "Text",ExpressionUUID->"a7995e1a-1b02-4c99-bc42-635d3b7456e3"],
Cell[CellGroupData[{
Cell[90829, 2313, 631, 14, 37, "Input",ExpressionUUID->"48a95538-21ec-4d78-a6cd-9ce41f0c3d4c"],
Cell[91463, 2329, 13379, 395, 545, "Output",ExpressionUUID->"17a27d48-fac1-4fad-aea7-774a4397d610"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104891, 2730, 298, 5, 76, "Subsubsection",ExpressionUUID->"0834fbe5-02db-4fd6-9640-9d2ad8e87641"],
Cell[105192, 2737, 587, 8, 44, "Text",ExpressionUUID->"01f81190-e079-42ff-acf0-88093839c806"],
Cell[105782, 2747, 340, 8, 37, "Input",ExpressionUUID->"88805996-5179-4406-85bb-7cd28a8af758"],
Cell[106125, 2757, 281, 5, 37, "Input",ExpressionUUID->"80826fbb-ff07-4572-a91d-0017c79e0f78"],
Cell[CellGroupData[{
Cell[106431, 2766, 155, 1, 37, "Input",ExpressionUUID->"c22bc7f8-4d10-41eb-94f3-bfd164cf18f7"],
Cell[106589, 2769, 269, 4, 42, "Output",ExpressionUUID->"dd7abaf4-6319-4f25-a469-06681da6c0c5"]
}, Open  ]],
Cell[106873, 2776, 257, 4, 44, "Text",ExpressionUUID->"0c97e542-310f-4f92-ad9f-56ae04c3eb79"],
Cell[CellGroupData[{
Cell[107155, 2784, 530, 13, 37, "Input",ExpressionUUID->"c6f68671-0167-42ee-b4bd-3b1f0ed50a64"],
Cell[107688, 2799, 6657, 196, 83, "Output",ExpressionUUID->"b3a72673-d4a3-4f8d-b267-44ec8dde8abf"]
}, Open  ]],
Cell[114360, 2998, 256, 4, 44, "Text",ExpressionUUID->"a2000434-87a8-4b18-85ee-a594d0d6a8fe"],
Cell[CellGroupData[{
Cell[114641, 3006, 317, 7, 37, "Input",ExpressionUUID->"d5c4c91e-bb9a-483d-87d2-dd137c98eb54"],
Cell[114961, 3015, 1735, 43, 251, "Output",ExpressionUUID->"999522b5-ef2c-40eb-80b1-b9def4adfd42"]
}, Open  ]],
Cell[116711, 3061, 312, 5, 44, "Text",ExpressionUUID->"73fcd6b1-7a35-44f2-bc8b-2ac217470294"],
Cell[CellGroupData[{
Cell[117048, 3070, 583, 14, 37, "Input",ExpressionUUID->"5149ad95-e112-4e36-aebf-12e749641b7e"],
Cell[117634, 3086, 8185, 207, 231, "Output",ExpressionUUID->"a85c82b5-6227-41fd-9933-993030fcb239"]
}, Open  ]],
Cell[125834, 3296, 358, 5, 44, "Text",ExpressionUUID->"d7a71970-3d52-4691-81fd-37dbea2ad318"],
Cell[CellGroupData[{
Cell[126217, 3305, 580, 14, 37, "Input",ExpressionUUID->"94d68928-5dcb-451b-8371-3c275723fa2e"],
Cell[126800, 3321, 13407, 396, 545, "Output",ExpressionUUID->"96effa33-9ce2-42dc-9792-26a27c8efe0f"]
}, Open  ]],
Cell[140222, 3720, 427, 6, 44, "Text",ExpressionUUID->"45d17103-23a3-4e08-bc7f-8252e9381c09"],
Cell[CellGroupData[{
Cell[140674, 3730, 794, 21, 37, "Input",ExpressionUUID->"4d7d8ca7-89ee-4509-abaf-b1dc1a676944"],
Cell[141471, 3753, 657, 11, 42, "Output",ExpressionUUID->"4806377a-c4e7-4a1d-adf5-2429af4dbf36"]
}, Open  ]],
Cell[142143, 3767, 421, 6, 44, "Text",ExpressionUUID->"19952df6-a287-44c8-b666-acfccb91e432"],
Cell[CellGroupData[{
Cell[142589, 3777, 329, 6, 37, "Input",ExpressionUUID->"a6e5c9a3-49b4-4728-b4c5-d44234323060"],
Cell[142921, 3785, 612, 11, 42, "Output",ExpressionUUID->"6bb8e93d-3ee4-4c81-a5c3-b7c8de12e44e"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143606, 3804, 582, 8, 86, "Chapter",ExpressionUUID->"2e0c95c1-b5c8-4e6d-a0e4-15542b38bc96"],
Cell[CellGroupData[{
Cell[144213, 3816, 175, 3, 84, "Section",ExpressionUUID->"89531dd9-aa65-4071-beab-76e8a35d3b37"],
Cell[CellGroupData[{
Cell[144413, 3823, 407, 7, 56, "Subsubsection",ExpressionUUID->"beca8104-1b0e-4023-85f0-4ad8cce4284b"],
Cell[CellGroupData[{
Cell[144845, 3834, 1511, 29, 136, "Input",ExpressionUUID->"e6fc03b3-eef2-4ee4-aa16-2ea2524b8ca3"],
Cell[CellGroupData[{
Cell[146381, 3867, 338, 8, 29, "Print",ExpressionUUID->"49a0a28a-0ca9-4275-83cd-6d0b6fad28e1"],
Cell[146722, 3877, 338, 8, 29, "Print",ExpressionUUID->"5baa752e-2dc7-4555-9bee-821b90047cd1"],
Cell[147063, 3887, 345, 9, 29, "Print",ExpressionUUID->"ccfa1c70-cca8-43a6-8f98-f059104303de"],
Cell[147411, 3898, 343, 9, 29, "Print",ExpressionUUID->"bbaa8802-299a-4471-97bb-8a63a292f5b5"],
Cell[147757, 3909, 345, 9, 29, "Print",ExpressionUUID->"e6271980-bca4-4443-90a6-fda5a75880db"],
Cell[148105, 3920, 345, 9, 29, "Print",ExpressionUUID->"6ea0b507-08d9-45c4-a3cf-416b6deb4d5e"],
Cell[148453, 3931, 343, 9, 29, "Print",ExpressionUUID->"e4455658-10ea-492e-8cb5-e8ec3e532cf9"],
Cell[148799, 3942, 343, 9, 29, "Print",ExpressionUUID->"c7762baf-e413-423c-92c4-5752c41f7edc"],
Cell[149145, 3953, 343, 9, 29, "Print",ExpressionUUID->"f104b76e-f20c-4e35-9739-868ec5002274"]
}, Open  ]],
Cell[149503, 3965, 206, 4, 42, "Output",ExpressionUUID->"e4c7f320-d5ed-436d-80db-52c7a4221b6c"],
Cell[149712, 3971, 368, 9, 29, "Print",ExpressionUUID->"76f853e3-97ec-4dff-a890-2a50bb30afeb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150117, 3985, 1045, 25, 37, "Input",ExpressionUUID->"3b4ea13d-9b56-449a-b68b-168b7682b61f"],
Cell[151165, 4012, 207, 4, 42, "Output",ExpressionUUID->"b098feb5-33db-4d7d-888a-36cffcfbdda9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[151421, 4022, 409, 7, 56, "Subsubsection",ExpressionUUID->"9a135e23-5edb-4f4c-8c47-440470550cc7"],
Cell[CellGroupData[{
Cell[151855, 4033, 1563, 30, 136, "Input",ExpressionUUID->"e7928351-988f-48f9-9e5f-740791639b00"],
Cell[CellGroupData[{
Cell[153443, 4067, 361, 8, 29, "Print",ExpressionUUID->"9175bf15-9c2e-4620-ad06-4569f08facf6"],
Cell[153807, 4077, 361, 8, 29, "Print",ExpressionUUID->"96f8249f-7096-4024-a148-32bd93a02921"],
Cell[154171, 4087, 361, 8, 29, "Print",ExpressionUUID->"b1a33919-e14d-47ac-a3ad-e163d20c0e5b"],
Cell[154535, 4097, 361, 8, 29, "Print",ExpressionUUID->"a5f29f4c-798c-4ef2-8f9e-eebeba0062f4"],
Cell[154899, 4107, 363, 8, 29, "Print",ExpressionUUID->"c42b124c-a829-47fe-83de-135a512b7f59"],
Cell[155265, 4117, 366, 9, 29, "Print",ExpressionUUID->"ce887fca-f376-4929-9b7a-ed7ffec80428"],
Cell[155634, 4128, 366, 9, 29, "Print",ExpressionUUID->"8f129b66-6477-41f0-9ef0-b057be80dfdc"],
Cell[156003, 4139, 366, 9, 29, "Print",ExpressionUUID->"ae4551b8-f678-4775-a20a-c9f19b096011"],
Cell[156372, 4150, 368, 9, 29, "Print",ExpressionUUID->"801e64b3-0c71-4600-bfc9-26d371ee1e88"]
}, Open  ]],
Cell[156755, 4162, 231, 4, 42, "Output",ExpressionUUID->"f8698d6d-0093-486b-81cf-2340699c1cb3"],
Cell[156989, 4168, 391, 9, 29, "Print",ExpressionUUID->"3a40cbbd-3591-47f7-95bf-ca563f0546d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157417, 4182, 1140, 26, 37, "Input",ExpressionUUID->"90b5e8fc-3ec3-4011-8658-ac87607fc457"],
Cell[158560, 4210, 231, 4, 42, "Output",ExpressionUUID->"94de9edf-9011-402b-958d-0f125449b305"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158840, 4220, 407, 7, 56, "Subsubsection",ExpressionUUID->"9c23e981-d3b1-44fd-b1ea-86e4306cd6c5"],
Cell[CellGroupData[{
Cell[159272, 4231, 1510, 29, 136, "Input",ExpressionUUID->"9d75e198-f9d1-4f00-901e-7588cf6165c2"],
Cell[CellGroupData[{
Cell[160807, 4264, 339, 8, 29, "Print",ExpressionUUID->"c9f1b447-7407-4b60-846c-4bf97551e9ff"],
Cell[161149, 4274, 338, 8, 29, "Print",ExpressionUUID->"6b0a242c-03ad-4690-9bcc-fc43534f8d02"],
Cell[161490, 4284, 346, 9, 29, "Print",ExpressionUUID->"a7ef9ec0-3c49-4ee5-973b-133ba1cd0f09"],
Cell[161839, 4295, 344, 9, 29, "Print",ExpressionUUID->"d1e9b04d-9913-4061-b220-0aa5676c908f"],
Cell[162186, 4306, 346, 9, 29, "Print",ExpressionUUID->"8560ff68-797a-40ef-befc-883a455ad0af"],
Cell[162535, 4317, 344, 9, 29, "Print",ExpressionUUID->"37727610-e2f7-4db5-b4fb-047a4c9b0363"],
Cell[162882, 4328, 344, 9, 29, "Print",ExpressionUUID->"669407c4-efd1-4746-bf30-7bead380f455"],
Cell[163229, 4339, 344, 9, 29, "Print",ExpressionUUID->"323492e4-eb83-4930-b6b2-5fb0316eb4e6"],
Cell[163576, 4350, 344, 9, 29, "Print",ExpressionUUID->"0b948419-a29e-4238-8095-d263f897752b"]
}, Open  ]],
Cell[163935, 4362, 210, 4, 42, "Output",ExpressionUUID->"dcd923fd-b5d2-4580-87bc-8ab20c327667"],
Cell[164148, 4368, 369, 9, 29, "Print",ExpressionUUID->"39eeb4e2-c383-4715-9ebf-c59df1ffce24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164554, 4382, 1093, 25, 37, "Input",ExpressionUUID->"5f30d294-d90c-41cd-bc83-ec674b6f6238"],
Cell[165650, 4409, 209, 4, 42, "Output",ExpressionUUID->"e7ed94a1-5f5a-43e9-81a0-d29a48b2413f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[165908, 4419, 453, 7, 56, "Subsubsection",ExpressionUUID->"00a405bd-f568-424d-b92d-d0449789a1c2"],
Cell[CellGroupData[{
Cell[166386, 4430, 1513, 30, 136, "Input",ExpressionUUID->"563c7f24-e27f-4854-8427-8253cb778828"],
Cell[CellGroupData[{
Cell[167924, 4464, 347, 9, 29, "Print",ExpressionUUID->"61564658-091b-45f5-afad-6a84c67558de"],
Cell[168274, 4475, 346, 8, 29, "Print",ExpressionUUID->"5d1579c8-2b83-4439-b70e-8f0d5b373bca"],
Cell[168623, 4485, 346, 8, 29, "Print",ExpressionUUID->"fb51ccf5-cc05-4b6b-8426-15fbfb7ffd9a"],
Cell[168972, 4495, 346, 8, 29, "Print",ExpressionUUID->"2b6bf9f9-cc3b-4d0b-b45b-62d0d68cbe6e"],
Cell[169321, 4505, 344, 8, 29, "Print",ExpressionUUID->"610b647a-603b-4e2f-8c95-5778a33cc2be"],
Cell[169668, 4515, 344, 8, 29, "Print",ExpressionUUID->"ae89b78f-9385-4146-931e-5e735093e806"],
Cell[170015, 4525, 346, 8, 29, "Print",ExpressionUUID->"149ad734-3af4-4778-93d8-81dd17eba1b7"],
Cell[170364, 4535, 344, 8, 29, "Print",ExpressionUUID->"3ab8a8b3-8e4a-433c-bcb2-dd694d9e48f9"],
Cell[170711, 4545, 344, 8, 29, "Print",ExpressionUUID->"a3173cd3-f4a6-4355-816c-41c92f56320c"]
}, Open  ]],
Cell[171070, 4556, 215, 5, 42, "Output",ExpressionUUID->"0f449d0a-70d7-4eae-b3bf-57793b79aad4"],
Cell[171288, 4563, 372, 9, 29, "Print",ExpressionUUID->"7e9ef4c4-13c0-4571-b8ca-9d645454aa26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171697, 4577, 1095, 26, 37, "Input",ExpressionUUID->"49dba586-c89e-49dd-b893-c621d9289e53"],
Cell[172795, 4605, 213, 5, 42, "Output",ExpressionUUID->"f4c16982-fde0-4ad9-9a45-9fa44f9d81b5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173057, 4616, 504, 9, 56, "Subsubsection",ExpressionUUID->"4900004c-9fe8-4c92-ab8f-427f691392de"],
Cell[CellGroupData[{
Cell[173586, 4629, 1615, 32, 136, "Input",ExpressionUUID->"a486f61b-e78f-4261-ba1f-25ddbdd29ae5"],
Cell[175204, 4663, 160, 3, 42, "Output",ExpressionUUID->"e96dd2c3-6484-4e55-b079-28c1c727bf2d"],
Cell[175367, 4668, 372, 9, 29, "Print",ExpressionUUID->"f1c08c33-c0f6-41ef-8f23-48253a821b7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175776, 4682, 216, 4, 37, "Input",ExpressionUUID->"0addf24c-29c6-4eba-97bd-d7c8ec27d29c"],
Cell[175995, 4688, 156, 3, 42, "Output",ExpressionUUID->"d90a773f-ca58-4dcc-ae59-6c371c6f3104"]
}, Open  ]],
Cell[176166, 4694, 206, 5, 37, "Input",ExpressionUUID->"2fb71e79-845d-42ae-8b30-0f718065189a"],
Cell[176375, 4701, 333, 8, 37, "Input",ExpressionUUID->"f48668a2-0335-4ecb-a693-8f1aa8c5949d"],
Cell[176711, 4711, 1123, 27, 37, "Input",ExpressionUUID->"4b9247e5-a9fc-41cc-819e-edec39435cb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177871, 4743, 451, 7, 56, "Subsubsection",ExpressionUUID->"fdb7d554-d53e-4119-9bb4-505da889c286"],
Cell[178325, 4752, 859, 14, 37, "Input",ExpressionUUID->"f64133a1-8c1f-4773-85dd-f8b35f7388ef"],
Cell[179187, 4768, 222, 4, 44, "Text",ExpressionUUID->"aab6b124-adb8-4091-8588-e6b98dc77356"],
Cell[179412, 4774, 610, 16, 116, "Input",ExpressionUUID->"f66c58b6-39c7-453e-a238-8c89cb75d833"],
Cell[180025, 4792, 429, 10, 73, "Text",ExpressionUUID->"f5fcfe14-9e3d-482e-9dc3-37693293dd6b"],
Cell[180457, 4804, 619, 16, 116, "Input",ExpressionUUID->"318f1a69-7e58-401e-af3c-d70ae49b98d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[181125, 4826, 223, 4, 84, "Section",ExpressionUUID->"b6f7afa7-a10d-465c-9b73-a29767d647ad"],
Cell[181351, 4832, 201, 4, 37, "Input",ExpressionUUID->"66845923-aeb8-4789-9417-7e10f6bada41"],
Cell[181555, 4838, 348, 5, 44, "Text",ExpressionUUID->"942a7398-8abb-4426-bcd6-89e4423fe5e0"],
Cell[181906, 4845, 633, 15, 90, "Input",ExpressionUUID->"49e73329-81c5-4551-993f-627dd8e4a2d2"],
Cell[182542, 4862, 322, 5, 44, "Text",ExpressionUUID->"75c15670-9797-4b15-905f-36ee2e382369"],
Cell[182867, 4869, 759, 21, 90, "Input",ExpressionUUID->"1d2b1d05-93c3-4ea2-b42a-de1c296b0fe6"],
Cell[183629, 4892, 369, 6, 44, "Text",ExpressionUUID->"9fd6a88f-51b7-4069-8be3-514a131b6f8e"],
Cell[CellGroupData[{
Cell[184023, 4902, 3993, 86, 220, "Input",ExpressionUUID->"e0b1b0a8-2aa8-423b-a8c0-a85ddeac8fd3"],
Cell[188019, 4990, 15418, 388, 442, "Output",ExpressionUUID->"090ba765-2832-45c3-8fa6-d8004f2481cd"]
}, Open  ]],
Cell[203452, 5381, 369, 6, 44, "Text",ExpressionUUID->"3ecbb773-8661-463e-a515-6c4aa60acb3c"],
Cell[CellGroupData[{
Cell[203846, 5391, 4469, 99, 220, "Input",ExpressionUUID->"693fc02d-6541-471d-bb34-2a924c19eb70"],
Cell[208318, 5492, 12380, 310, 442, "Output",ExpressionUUID->"c141bb8c-895e-4dfb-8e4f-ef315865f6cb"]
}, Open  ]],
Cell[220713, 5805, 367, 6, 44, "Text",ExpressionUUID->"ab0e90cd-8e4a-4a38-9b6e-8af11bd84533"],
Cell[CellGroupData[{
Cell[221105, 5815, 4865, 105, 246, "Input",ExpressionUUID->"0c122d0a-6651-4dc6-93c2-8e907ba18f99"],
Cell[225973, 5922, 11925, 300, 442, "Output",ExpressionUUID->"5681f1b8-a58b-4595-ad74-57dd189dc043"]
}, Open  ]],
Cell[237913, 6225, 456, 7, 44, "Text",ExpressionUUID->"3278a815-7654-4e73-8f62-4cc89f34aa3d"],
Cell[CellGroupData[{
Cell[238394, 6236, 5847, 138, 272, "Input",ExpressionUUID->"825c9a37-0c9a-45e2-99e0-37b0625405f2"],
Cell[244244, 6376, 30937, 625, 387, "Output",ExpressionUUID->"01f433de-5ada-4050-8b71-eb1aa3dd3598"]
}, Open  ]],
Cell[275196, 7004, 954, 19, 44, "Text",ExpressionUUID->"34c8a57b-e78a-428d-837f-51af8852e631"],
Cell[CellGroupData[{
Cell[276175, 7027, 757, 17, 37, "Input",ExpressionUUID->"7ff41ec0-c1c2-412a-b376-28953097efe6"],
Cell[276935, 7046, 79491, 1756, 807, "Output",ExpressionUUID->"72f254b8-3601-4302-bf45-bd3537264bd4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[356487, 8809, 390, 6, 86, "Chapter",ExpressionUUID->"b0a3d582-7c0f-4256-accc-bb963fbd0a4d"],
Cell[CellGroupData[{
Cell[356902, 8819, 331, 5, 84, "Section",ExpressionUUID->"9be498c6-e288-4aef-9581-083a526f88cc"],
Cell[357236, 8826, 448, 6, 44, "Text",ExpressionUUID->"3d0abcc1-5428-41ff-a768-0a353b4d6726"],
Cell[CellGroupData[{
Cell[357709, 8836, 697, 15, 110, "Input",ExpressionUUID->"0c264647-3221-4751-bf3a-a224dde5caf8"],
Cell[358409, 8853, 208, 4, 42, "Output",ExpressionUUID->"72ced89e-6c7d-4400-a60f-a5b46a3c4e26"]
}, Open  ]],
Cell[358632, 8860, 445, 6, 44, "Text",ExpressionUUID->"9711bdb3-5c7b-4d99-a642-bd2004814767"],
Cell[CellGroupData[{
Cell[359102, 8870, 791, 18, 136, "Input",ExpressionUUID->"f9dc5bf2-fc41-4f53-87f9-6cac50dfe03a"],
Cell[359896, 8890, 208, 4, 42, "Output",ExpressionUUID->"f1137d62-d272-41db-b5ea-5e0d1b2c4927"],
Cell[360107, 8896, 156, 2, 42, "Output",ExpressionUUID->"3f6f4a46-6504-4693-9433-604a96aaa4f3"]
}, Open  ]],
Cell[360278, 8901, 414, 6, 44, "Text",ExpressionUUID->"6a330692-52fd-49bf-a954-8c81788ce900"],
Cell[360695, 8909, 909, 18, 90, "Input",ExpressionUUID->"a1f2242a-0ec7-470a-a364-5d156864b6bc"],
Cell[361607, 8929, 510, 9, 44, "Text",ExpressionUUID->"5d0ed8b5-3e34-46dc-890f-f31392cde473"],
Cell[362120, 8940, 585, 14, 64, "Input",ExpressionUUID->"0f11d82c-953a-42a5-bf51-24d95910d889"],
Cell[362708, 8956, 675, 12, 44, "Text",ExpressionUUID->"de439cc8-4927-40aa-a4aa-ec2ca24c4c3b"],
Cell[363386, 8970, 1215, 33, 90, "Input",ExpressionUUID->"bf8f3f73-66d5-42ca-b5b2-070a6ad9134a"],
Cell[364604, 9005, 526, 10, 44, "Text",ExpressionUUID->"8a51672c-0235-4cef-9453-3d8bce7466ce"],
Cell[CellGroupData[{
Cell[365155, 9019, 332, 6, 37, "Input",ExpressionUUID->"4edda312-53f6-47e7-8c4f-eb7cd484fa7b"],
Cell[365490, 9027, 11846, 237, 103, "Output",ExpressionUUID->"85790f08-acea-461b-81c8-86ea23752fad"]
}, Open  ]],
Cell[377351, 9267, 466, 7, 44, "Text",ExpressionUUID->"5fabf199-e0a2-43c6-872f-9e71e9965887"],
Cell[CellGroupData[{
Cell[377842, 9278, 250, 4, 37, "Input",ExpressionUUID->"38b5090d-b1f1-47be-97b3-7c873b3eb3c8"],
Cell[378095, 9284, 169, 2, 42, "Output",ExpressionUUID->"db685f2f-5dea-4c7f-9086-69494bf71d5b"]
}, Open  ]],
Cell[378279, 9289, 213, 5, 44, "Text",ExpressionUUID->"c4ffa9f6-57a8-4b17-b7dd-e5c143029e78"],
Cell[CellGroupData[{
Cell[378517, 9298, 232, 4, 37, "Input",ExpressionUUID->"052f14fe-4d79-4537-aa13-5b0ce6df20a5"],
Cell[378752, 9304, 325, 7, 42, "Output",ExpressionUUID->"e0ab7159-ba77-48a4-b603-13445944d3e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379114, 9316, 264, 5, 37, "Input",ExpressionUUID->"720aef24-555b-4961-b371-282fcf98853f"],
Cell[379381, 9323, 151, 2, 42, "Output",ExpressionUUID->"aa0e84c1-6d42-4ed1-aec5-e1992a73d9e5"]
}, Open  ]],
Cell[379547, 9328, 213, 5, 44, "Text",ExpressionUUID->"9776787e-554f-46f6-800e-115cc8dee8c6"],
Cell[CellGroupData[{
Cell[379785, 9337, 231, 4, 37, "Input",ExpressionUUID->"80f5369d-bc4a-47a4-8480-14c3b79a545b"],
Cell[380019, 9343, 356, 7, 42, "Output",ExpressionUUID->"63d7eb98-363e-4c35-b668-69a66fac7130"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380412, 9355, 240, 5, 37, "Input",ExpressionUUID->"d40501b6-a726-458f-aac3-320bc5242f5f"],
Cell[380655, 9362, 151, 2, 42, "Output",ExpressionUUID->"5b355dee-f79d-440b-8bb0-54ed4e0a8d7f"]
}, Open  ]],
Cell[380821, 9367, 403, 8, 44, "Text",ExpressionUUID->"b0431d26-6a4e-4ce6-9a46-e26b4cfd2fea"],
Cell[CellGroupData[{
Cell[381249, 9379, 903, 26, 37, "Input",ExpressionUUID->"8cd265e0-8e2a-4a18-832c-85cab8acfa63"],
Cell[382155, 9407, 193, 2, 42, "Output",ExpressionUUID->"57d4b507-a29c-419a-a998-41cf9307f3a7"]
}, Open  ]],
Cell[382363, 9412, 361, 8, 44, "Text",ExpressionUUID->"d962e1f7-7994-48a2-9254-d026023a0956"],
Cell[CellGroupData[{
Cell[382749, 9424, 421, 11, 37, "Input",ExpressionUUID->"e16e284a-10ea-4a81-9b45-7669bda1c727"],
Cell[383173, 9437, 167, 2, 42, "Output",ExpressionUUID->"1715d1ee-d3b3-40a3-bfff-41d2a3ef4cec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383377, 9444, 415, 9, 37, "Input",ExpressionUUID->"e7e147fd-3103-4901-b6e1-580ec6bdfff2"],
Cell[383795, 9455, 151, 2, 42, "Output",ExpressionUUID->"149d5e6d-a39e-430e-95c9-2cd17ff45d9c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[383995, 9463, 388, 6, 84, "Section",ExpressionUUID->"50d4520f-c4bf-4744-b64a-439df9de27f0"],
Cell[384386, 9471, 423, 8, 44, "Text",ExpressionUUID->"de609a4f-72f1-4562-9211-934224d2db5c"],
Cell[CellGroupData[{
Cell[384834, 9483, 795, 16, 110, "Input",ExpressionUUID->"94b3a55b-5330-4134-a751-7954fec9aa29"],
Cell[385632, 9501, 208, 4, 42, "Output",ExpressionUUID->"c32c65e2-9472-4a94-9cba-6372610adde2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385877, 9510, 888, 19, 136, "Input",ExpressionUUID->"71136a55-0595-4dca-a8ae-6c995bbc1968"],
Cell[386768, 9531, 208, 4, 42, "Output",ExpressionUUID->"4fec7ec1-8f09-4dd5-84e5-ffe6ba337d5e"],
Cell[386979, 9537, 155, 2, 42, "Output",ExpressionUUID->"517b8658-9935-4914-aaab-7c87b690e2ce"]
}, Open  ]],
Cell[387149, 9542, 979, 18, 90, "Input",ExpressionUUID->"138220c8-88e8-47da-9cc2-6f2e62684186"],
Cell[388131, 9562, 637, 16, 64, "Input",ExpressionUUID->"2de3c13c-8c7c-48ec-81d9-8e6ef4dee26e"],
Cell[388771, 9580, 1265, 34, 90, "Input",ExpressionUUID->"2914a8e1-6c2d-4459-aeef-ae724a1b8b58"],
Cell[CellGroupData[{
Cell[390061, 9618, 385, 8, 37, "Input",ExpressionUUID->"55d16c44-865c-4641-a7d0-38293416ccec"],
Cell[390449, 9628, 278387, 4563, 76, "Output",ExpressionUUID->"729acd8d-ed63-4af7-bad7-a02b75a11a2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[668873, 14196, 305, 6, 37, "Input",ExpressionUUID->"eda68ae9-42e3-4376-851c-7d29b35e54f3"],
Cell[669181, 14204, 175, 3, 42, "Output",ExpressionUUID->"5ed7b57d-815b-4ddd-92f3-712e95bbdac6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[669405, 14213, 439, 7, 84, "Section",ExpressionUUID->"4b022ebe-2b01-4ebb-b0d0-ee12145f17e0"],
Cell[669847, 14222, 381, 7, 44, "Text",ExpressionUUID->"a4d33552-223b-43a0-a106-aae97b88e170"],
Cell[CellGroupData[{
Cell[670253, 14233, 849, 18, 110, "Input",ExpressionUUID->"36f2d291-2482-4312-9ba4-a31405b8f197"],
Cell[671105, 14253, 212, 5, 42, "Output",ExpressionUUID->"cdae159d-9a1b-4e8b-a547-dc801fd1ee20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[671354, 14263, 942, 21, 136, "Input",ExpressionUUID->"922ea1d2-771e-4634-910a-95e57659ba26"],
Cell[672299, 14286, 212, 5, 42, "Output",ExpressionUUID->"7ed67d04-6b3b-43c8-855d-37ff067a803e"],
Cell[672514, 14293, 160, 3, 42, "Output",ExpressionUUID->"bf22bb80-9a21-49ce-80f9-ebd9f9adcabd"]
}, Open  ]],
Cell[672689, 14299, 1032, 20, 90, "Input",ExpressionUUID->"2a80b940-ee54-476d-bf86-dc4e94ee660a"],
Cell[673724, 14321, 683, 16, 64, "Input",ExpressionUUID->"5101856a-7d2e-4ac2-969e-9a728e5bacde"],
Cell[674410, 14339, 1314, 35, 90, "Input",ExpressionUUID->"338467b9-1d20-473f-928e-5be82b277fa7"],
Cell[CellGroupData[{
Cell[675749, 14378, 431, 8, 37, "Input",ExpressionUUID->"0dc4fdc3-ec6d-46d4-bb34-25dcf4f6ffd7"],
Cell[676183, 14388, 11852, 238, 103, "Output",ExpressionUUID->"65db28c3-0b08-44d7-a347-e27b822c7327"]
}, Open  ]],
Cell[CellGroupData[{
Cell[688072, 14631, 354, 7, 37, "Input",ExpressionUUID->"f104c16e-3203-481a-bea0-463416e749e2"],
Cell[688429, 14640, 173, 3, 42, "Output",ExpressionUUID->"2c18f4b9-a839-4542-bd65-58c2a1d56da3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[688651, 14649, 487, 7, 84, "Section",ExpressionUUID->"14e7a9c6-9b63-44fd-ac3a-756d031a5aa7"],
Cell[689141, 14658, 379, 7, 44, "Text",ExpressionUUID->"f2c44676-a36b-4b85-8f30-ccf3f79cd87b"],
Cell[CellGroupData[{
Cell[689545, 14669, 898, 19, 110, "Input",ExpressionUUID->"0bc22b8e-e4a6-436c-9378-ea592cfc43bd"],
Cell[690446, 14690, 212, 5, 42, "Output",ExpressionUUID->"5ea161de-d8f7-4989-b378-802ef5ea8f17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[690695, 14700, 992, 22, 136, "Input",ExpressionUUID->"7e494e55-cce9-4b50-b1ad-e464c370b3ee"],
Cell[691690, 14724, 212, 5, 42, "Output",ExpressionUUID->"087af81c-7099-47c3-91b2-a4f6cb0686c9"],
Cell[691905, 14731, 158, 3, 42, "Output",ExpressionUUID->"a43c0233-353b-4af6-9c03-c0aed3c798b6"]
}, Open  ]],
Cell[692078, 14737, 1078, 20, 90, "Input",ExpressionUUID->"6e67b2b8-9053-4541-9fa3-9984e19b147f"],
Cell[693159, 14759, 732, 17, 64, "Input",ExpressionUUID->"bed269b3-9caf-4ac6-895c-3546b8a1840a"],
Cell[693894, 14778, 1363, 36, 90, "Input",ExpressionUUID->"60415dff-989d-46b3-97a6-d5b873cc7b5a"],
Cell[CellGroupData[{
Cell[695282, 14818, 482, 9, 37, "Input",ExpressionUUID->"fbf0ad4c-fa1d-4613-9281-1a7c7af16ee0"],
Cell[695767, 14829, 394303, 6345, 76, "Output",ExpressionUUID->"1ca37958-988d-4b6b-ad81-25c5ed85f1f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1090107, 21179, 402, 7, 37, "Input",ExpressionUUID->"ef0ba4a8-8e28-4c27-afb5-04080dd39074"],
Cell[1090512, 21188, 175, 3, 42, "Output",ExpressionUUID->"1b54c582-7536-4afc-a59f-60366a9304fc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

